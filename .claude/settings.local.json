{
  "permissions": {
    "allow": [
      "Bash(../exiftool/exiftool:*)",
      "Bash(./exif-oxide:*)",
      "Bash(./target/debug/exif-oxide:*)",
      "Bash(./third-party/exiftool/exiftool:*)",
      "Bash(awk:*)",
      "Bash(cargo run:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(cp:*)",
      "Bash(dd:*)",
      "Bash(diff:*)",
      "Bash(exiftool:*)",
      "Bash(fgrep:*)",
      "Bash(find:*)",
      "Bash(gh run view:*)",
      "Bash(git add:*)",
      "Bash(git log:*)",
      "Bash(git stash show:*)",
      "Bash(grep:*)",
      "Bash(iconv:*)",
      "Bash(jq:*)",
      "Bash(ls:*)",
      "Bash(make:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(od:*)",
      "Bash(perl:*)",
      "Bash(printf:*)",
      "Bash(python3:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(strace:*)",
      "Bash(target/debug/exif-oxide:*)",
      "Bash(target/release/exif-oxide test:*)",
      "Bash(test:*)",
      "Bash(third-party/exiftool/exiftool:*)",
      "Bash(time:*)",
      "Bash(touch:*)",
      "Bash(true)",
      "Bash(xxd:*)",
      "Bash(yamllint:*)",
      "WebFetch(domain:claude.ai)",
      "WebFetch(domain:crates.io)",
      "WebFetch(domain:doc.rust-lang.org)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:exiftool.org)",
      "WebFetch(domain:release-plz.dev)",
      "WebFetch(domain:rust-cli.github.io)",
      "WebFetch(domain:stackoverflow.com)",
      "WebFetch(domain:www.conventionalcommits.org)",
      "WebFetch(domain:www.ftyps.com)",
      "Bash(cargo check:*)",
      "Bash(cargo test:*)",
      "Bash(cargo:*)",
      "Bash(rustc:*)",
      "Bash(./test_tag_structure)",
      "Bash(RUST_LOG=debug cargo run --release)",
      "Bash(RUST_BACKTRACE=1 cargo test test_model_condition_evaluation --features integration-tests -- --nocapture)",
      "Bash(RUST_LOG=trace cargo run -- test-images/olympus/test.orf)",
      "Bash(RUST_LOG=debug cargo run -- test-images/olympus/test.orf)",
      "Bash(RUST_LOG=debug cargo run -- test-images/canon/Canon_T3i.CR2)",
      "Bash(RUST_LOG=debug target/release/exif-oxide:*)",
      "Bash(target/release/exif-oxide:*)",
      "Bash(./scripts/compare-with-exiftool.sh:*)",
      "Bash(./scripts/compare-with-exiftool.sh:*)",
      "Bash(./target/release/exif-oxide:*)",
      "Bash(./scripts/compare-with-exiftool.sh:*)",
      "Bash(RUST_LOG=debug ./target/release/exif-oxide test-images/canon/Canon_T3i.CR2)",
      "Bash(RUST_LOG=debug cargo run --release -- test-images/canon/Canon_T3i.CR2)",
      "Bash(RUST_LOG=debug cargo run -- /home/mrm/src/exif-oxide/test-images/olympus/test.orf)",
      "Bash(RUST_LOG=debug cargo run -- test-images/canon/Canon_T3i.jpg)",
      "Bash(RUST_LOG=debug cargo run -- test-images/sony/sony_a7c_ii_02.arw)",
      "Bash(/dev/null)",
      "Bash(__NEW_LINE__ echo -e \"\\nexif-oxide (optimized) on all test images:\")",
      "Bash(RUST_LOG=debug cargo run --bin exif-oxide -- test-images/sony/sony_a7c_ii_02.arv)",
      "Bash(RUST_LOG=debug cargo run --bin exif-oxide -- test-images/sony/sony_a7c_ii_02.arw)",
      "Bash(target/debug/compare-with-exiftool:*)",
      "Bash(for dir in FujiFilm_pm GPS_pm PNG_pm)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(done)",
      "Bash(./exiftool -j -struct -G ../../test-images/minolta/DiMAGE_7.jpg)",
      "Bash(echo $?)",
      "Bash(grep -i \"tag_kit.*PanasonicRaw\" /home/mrm/src/exif-oxide/codegen/generated/extract/*.log)",
      "Bash(find /home/mrm/src/exif-oxide/codegen/config -name \"tag_kit.json\" -exec ls -la {} ;)",
      "Bash(find /home/mrm/src/exif-oxide/third-party/exiftool -name \"Sony*\")",
      "Bash(find /home/mrm/src/exif-oxide/third-party/exiftool -name \"*.arw\" -o -name \"*ARW*\" -o -name \"Sony*\")",
      "Bash(RUST_LOG=debug cargo run -- third-party/exiftool/t/images/Canon.jpg)",
      "Bash(RUST_LOG=debug cargo test test_key_exif_ifd_tag_grouping --features integration-tests --test enhanced_exiftool_group_compatibility_tests -- --nocapture)",
      "Bash(RUST_LOG=debug cargo test test_color_space_validation -- --nocapture)",
      "Bash(command -v:*)",
      "Bash(optipng:*)",
      "Bash(RUST_LOG=debug cargo test --features test-helpers,integration-tests --test exif_ifd_validation_tests test_color_space_validation -- --nocapture)",
      "Bash(pngquant:*)",
      "Bash(git lfs:*)",
      "Bash(ffmpeg:*)",
      "Bash(./tools/generate_exiftool_json.sh:*)"
    ],
    "deny": []
  }
}