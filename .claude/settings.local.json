{
  "permissions": {
    "allow": [
      "Bash(../exiftool/exiftool:*)",
      "Bash(./exif-oxide:*)",
      "Bash(./scripts/compare-with-exiftool.sh:*)",
      "Bash(./third-party/exiftool/exiftool:*)",
      "Bash(cargo check:*)",
      "Bash(cargo run:*)",
      "Bash(cargo test:*)",
      "Bash(cargo:*)",
      "Bash(cat:*)",
      "Bash(cd:*)",
      "Bash(chmod:*)",
      "Bash(comm:*)",
      "Bash(command -v:*)",
      "Bash(cp:*)",
      "Bash(diff:*)",
      "Bash(echo)",
      "Bash(env:*)",
      "Bash(exiftool:*)",
      "Bash(ffmpeg:*)",
      "Bash(fgrep:*)",
      "Bash(find:*)",
      "Bash(gh run view:*)",
      "Bash(git add:*)",
      "Bash(git lfs:*)",
      "Bash(git log:*)",
      "Bash(git stash show:*)",
      "Bash(grep:*)",
      "Bash(jq:*)",
      "Bash(ls:*)",
      "Bash(make:*)",
      "Bash(md5sum:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(od:*)",
      "Bash(perl:*)",
      "Bash(printf:*)",
      "Bash(python3:*)",
      "Bash(rg:*)",
      "Bash(rustc:*)",
      "Bash(sd:*)",
      "Bash(sed:*)",
      "Bash(strace:*)",
      "Bash(test:*)",
      "Bash(third-party/exiftool/exiftool:*)",
      "Bash(time:*)",
      "Bash(touch:*)",
      "Bash(TZ=America/Los_Angeles date +%Y%m%d)",
      "Bash(xxd:*)",
      "Bash(yamllint:*)",
      "WebFetch(domain:doc.rust-lang.org)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:exiftool.org)",
      "Bash(./scripts/capture.sh cargo check:*)",
      "Bash(./scripts/capture.sh rg:*)",
      "Bash(./scripts/capture.sh wc:*)",
      "Bash(export RUST_LOG=trace)",
      "Bash(./scripts/capture.sh awk:*)",
      "Bash(./scripts/capture.sh:*)",
      "Bash(scripts/capture.sh:*)",
      "Bash(./scripts/capture.sh grep -o 'error\\[E[0-9]*\\]' /tmp/stderr_20250808_110758_994744.txt)",
      "Bash(RUST_LOG=debug make codegen)",
      "Bash(export RUST_LOG=debug)",
      "Bash(DEBUG=1 codegen/scripts/field_extractor.pl third-party/exiftool/lib/Image/ExifTool.pm magicNumber)",
      "WebFetch(domain:docs.rs)",
      "Bash(RUST_LOG=debug cargo run --package codegen)",
      "Bash(./scripts/patch_all_modules.sh:*)",
      "Bash(./codegen/scripts/field_extractor.pl:*)",
      "WebFetch(domain:metacpan.org)",
      "Bash(./scripts/uniq-value-conv.sh:*)",
      "Bash(./scripts/uniq-value-conv.sh:*)",
      "Bash(./scripts/uniq-print-conv.sh:*)",
      "Bash(./scripts/uniq-condition.sh:*)",
      "WebSearch",
      "WebFetch(domain:rust-unofficial.github.io)",
      "Bash(RUST_BACKTRACE=1 cargo test -p codegen test_sprintf_concatenation_ternary)",
      "Bash(codegen/scripts/ppi_ast.pl:*)",
      "Bash(RUST_LOG=debug cargo test --package codegen test_sprintf_concatenation_ternary)",
      "Bash(RUST_LOG=trace cargo run --package codegen --bin codegen)",
      "Bash(codegen/scripts/field_extractor.pl:*)",
      "Bash(RUST_LOG=debug cargo run --package codegen --bin codegen)",
      "Bash(DEBUG=1 codegen/scripts/field_extractor.pl third-party/exiftool/lib/Image/ExifTool/Nikon.pm sprintf)",
      "Bash(RUST_BACKTRACE=1 cargo test -p codegen -- test_pack_map_pattern_extraction --nocapture)",
      "Bash(RUST_LOG=debug cargo run --bin codegen)",
      "Bash(RUST_LOG=debug cargo test -p codegen test_normalizer_integration)",
      "Bash(RUST_LOG=debug cargo test -p codegen test_join_unpack_pattern)",
      "Bash(RUST_LOG=debug cargo run --package codegen --bin codegen -- --help)",
      "Bash(RUST_LOG=debug cargo run -- -m GPS.pm)",
      "Bash(RUST_LOG=warn make codegen)",
      "Bash(RUST_LOG=debug cargo test --package codegen test_simple_arithmetic_generation)",
      "Bash(./codegen/scripts/ppi_ast.pl:*)",
      "WebFetch(domain:perldoc.perl.org)",
      "Bash(RUST_LOG=debug cargo test test_join_function --package codegen)",
      "Bash(RUST_LOG=trace cargo test test_join_function --package codegen -- --nocapture)",
      "Bash(./scripts/ppi_ast.pl 'join \"\" \"\", unpack \"\"H2H2\"\", val')",
      "Bash(./scripts/ppi_ast.pl 'join(separator=\"\" \"\", list=unpack(\"\"H2H2\"\", val))')",
      "Bash(RUST_LOG=debug cargo test test_join_unpack_normalization -- --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test -p codegen test_magic_variable_with_substitution -- --nocapture)",
      "Bash(RUST_LOG=trace cargo run --bin codegen)",
      "Bash(RUST_LOG=debug cargo test -p codegen test_sneaky_conditional_assignment_recognition)",
      "Bash(RUST_BACKTRACE=1 cargo test -p codegen test_ternary_with_string_comparison -- --nocapture)",
      "Bash(RUST_LOG=debug cargo run --release)",
      "Bash(RUST_LOG=debug cargo run --bin debug-ppi --quiet -- --verbose 'abs($val)<100 ? 1/(2**$val) : 0')",
      "Bash(RUST_LOG=trace cargo run --bin debug-ppi -- --verbose 'abs($val)<100 ? 1/(2**$val) : 0')",
      "Bash(RUST_BACKTRACE=1 cargo test -p codegen test_sprintf_concatenation_ternary -- --nocapture)",
      "Bash(./scripts/ppi_ast.pl:*)",
      "Bash(RUST_LOG=debug cargo test test_join_unpack_end_to_end -p codegen -- --nocapture)",
      "Bash(RUST_LOG=debug cargo test test_function_call_normalization -p codegen -- --nocapture)",
      "Bash(RUST_LOG=trace cargo test test_join_unpack_end_to_end -p codegen -- --nocapture)"
    ],
    "deny": [],
    "additionalDirectories": [
      "/home/mrm/src/test-images/",
      "/tmp/",
      "/home/mrm/src/PPI/"
    ]
  }
}