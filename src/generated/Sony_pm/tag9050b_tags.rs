//! Generated tag table definitions from Sony::Tag9050b
//!
//! This file is auto-generated by codegen/src/strategies/tag_kit.rs. Do not edit manually.

use crate::types::{PrintConv, TagInfo, ValueConv};
use std::collections::HashMap;
use std::sync::LazyLock;

// Generated imports for conversion functions
use crate::generated::functions::hash_1a::ast_print_1ade125dab246be4;
use crate::generated::functions::hash_53::ast_value_53ef12641c6719f5;
use crate::generated::functions::hash_70::ast_print_70245c821020ee75;
use crate::generated::functions::hash_75::ast_value_75fc706b92c8c4f7;
use crate::generated::functions::hash_84::ast_print_8470e30e1e5b4729;
use crate::generated::functions::hash_bb::ast_print_bb36ed62e5a52a4;
use crate::generated::functions::hash_c1::ast_value_c1d0defaf7444144;
use crate::generated::functions::hash_da::ast_value_da76e49d05066f83;
use crate::generated::functions::hash_e0::ast_value_e0b36f169462770c;

/// Tag definitions for Sony::Tag9050b table
pub static SONY_TAG9050B_TAGS: LazyLock<HashMap<u16, TagInfo>> = LazyLock::new(|| {
    HashMap::from([
        (
            0,
            TagInfo {
                name: "SonyMaxAperture",
                format: "unknown",
                print_conv: Some(PrintConv::Function(ast_print_8470e30e1e5b4729)),
                value_conv: Some(ValueConv::Function(ast_value_c1d0defaf7444144)),
            },
        ),
        (
            1,
            TagInfo {
                name: "SonyMinAperture",
                format: "unknown",
                print_conv: Some(PrintConv::Function(ast_print_1ade125dab246be4)),
                value_conv: Some(ValueConv::Function(ast_value_c1d0defaf7444144)),
            },
        ),
        (
            38,
            TagInfo {
                name: "Shutter",
                format: "int16u[3]",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            57,
            TagInfo {
                name: "FlashStatus",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            58,
            TagInfo {
                name: "ShutterCount",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            70,
            TagInfo {
                name: "SonyExposureTime",
                format: "int16u",
                print_conv: Some(PrintConv::Function(ast_print_bb36ed62e5a52a4)),
                value_conv: Some(ValueConv::Function(ast_value_53ef12641c6719f5)),
            },
        ),
        (
            72,
            TagInfo {
                name: "SonyFNumber",
                format: "int16u",
                print_conv: Some(PrintConv::Function(ast_print_8470e30e1e5b4729)),
                value_conv: Some(ValueConv::Function(ast_value_e0b36f169462770c)),
            },
        ),
        (
            75,
            TagInfo {
                name: "ReleaseMode2",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            80,
            TagInfo {
                name: "ShutterCount2",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            82,
            TagInfo {
                name: "ShutterCount2",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            88,
            TagInfo {
                name: "ShutterCount2",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            97,
            TagInfo {
                name: "SonyTimeMinSec",
                format: "undef[2]",
                print_conv: None,
                value_conv: Some(ValueConv::Function(ast_value_da76e49d05066f83)),
            },
        ),
        (
            107,
            TagInfo {
                name: "ReleaseMode2",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            109,
            TagInfo {
                name: "ReleaseMode2",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            115,
            TagInfo {
                name: "ReleaseMode2",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            136,
            TagInfo {
                name: "InternalSerialNumber",
                format: "int8u[6]",
                print_conv: Some(PrintConv::Function(ast_print_70245c821020ee75)),
                value_conv: None,
            },
        ),
        (
            261,
            TagInfo {
                name: "LensMount",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            262,
            TagInfo {
                name: "LensFormat",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            263,
            TagInfo {
                name: "LensType2",
                format: "int16u",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            265,
            TagInfo {
                name: "LensType",
                format: "int16u",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            267,
            TagInfo {
                name: "DistortionCorrParamsPresent",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            276,
            TagInfo {
                name: "APS-CSizeCapture",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            278,
            TagInfo {
                name: "LensSpecFeatures",
                format: "undef[2]",
                print_conv: Some(PrintConv::Expression(
                    "[Function: Image::ExifTool::Sony::PrintLensSpec]".to_string(),
                )),
                value_conv: Some(ValueConv::Function(ast_value_75fc706b92c8c4f7)),
            },
        ),
        (
            415,
            TagInfo {
                name: "ShutterCount3",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            459,
            TagInfo {
                name: "ShutterCount3",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            461,
            TagInfo {
                name: "ShutterCount3",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            491,
            TagInfo {
                name: "APS-CSizeCapture",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            493,
            TagInfo {
                name: "LensSpecFeatures",
                format: "undef[2]",
                print_conv: Some(PrintConv::Expression(
                    "[Function: Image::ExifTool::Sony::PrintLensSpec]".to_string(),
                )),
                value_conv: Some(ValueConv::Function(ast_value_75fc706b92c8c4f7)),
            },
        ),
        (
            494,
            TagInfo {
                name: "APS-CSizeCapture",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            496,
            TagInfo {
                name: "LensSpecFeatures",
                format: "undef[2]",
                print_conv: Some(PrintConv::Expression(
                    "[Function: Image::ExifTool::Sony::PrintLensSpec]".to_string(),
                )),
                value_conv: Some(ValueConv::Function(ast_value_75fc706b92c8c4f7)),
            },
        ),
        (
            538,
            TagInfo {
                name: "APS-CSizeCapture",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            542,
            TagInfo {
                name: "LensSpecFeatures",
                format: "undef[2]",
                print_conv: Some(PrintConv::Expression(
                    "[Function: Image::ExifTool::Sony::PrintLensSpec]".to_string(),
                )),
                value_conv: Some(ValueConv::Function(ast_value_75fc706b92c8c4f7)),
            },
        ),
    ])
});

/// Apply ValueConv transformation for tags in this table
pub fn apply_value_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
) -> Result<crate::types::TagValue, crate::types::ExifError> {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = SONY_TAG9050B_TAGS.get(&tag_id_u16) {
        if let Some(ref value_conv) = tag_def.value_conv {
            match value_conv {
                ValueConv::None => Ok(value.clone()),
                ValueConv::Function(func) => func(value, None),
                ValueConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    Err(crate::types::ExifError::NotImplemented("Runtime expression evaluation not supported - should be handled by PPI at build time".to_string()))
                }
                _ => Ok(value.clone()),
            }
        } else {
            Ok(value.clone())
        }
    } else {
        Err(crate::types::ExifError::ParseError(format!(
            "Tag 0x{:04x} not found in table",
            tag_id
        )))
    }
}

/// Apply PrintConv transformation for tags in this table
pub fn apply_print_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
    _warnings: &mut Vec<String>,
) -> crate::types::TagValue {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = SONY_TAG9050B_TAGS.get(&tag_id_u16) {
        if let Some(ref print_conv) = tag_def.print_conv {
            match print_conv {
                PrintConv::None => value.clone(),
                PrintConv::Function(func) => func(value, None),
                PrintConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    value.clone() // Fallback to original value when expression not handled by PPI
                }
                _ => value.clone(),
            }
        } else {
            value.clone()
        }
    } else {
        value.clone()
    }
}
