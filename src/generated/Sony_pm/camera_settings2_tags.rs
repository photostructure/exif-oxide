//! Generated tag table definitions from Sony::CameraSettings2
//!
//! This file is auto-generated by codegen/src/strategies/tag_kit.rs. Do not edit manually.

use crate::types::{PrintConv, TagInfo, ValueConv};
use std::collections::HashMap;
use std::sync::LazyLock;

// Generated imports for conversion functions
use crate::implementations::print_conv::{
    exposuretime_print_conv, fnumber_print_conv, gpsaltitude_print_conv, lensinfo_print_conv,
    print_fraction,
};
use crate::implementations::value_conv::{
    exif_date_value_conv, gps_coordinate_value_conv, gpstimestamp_value_conv,
    reciprocal_10_value_conv, reference_long_string_value_conv,
    reference_very_long_string_value_conv,
};

/// Tag definitions for Sony::CameraSettings2 table
pub static SONY_CAMERASETTINGS2_TAGS: LazyLock<HashMap<u16, TagInfo>> = LazyLock::new(|| {
    HashMap::from([
        (
            0,
            TagInfo {
                name: "ExposureTime",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val ? Image::ExifTool::Exif::PrintExposureTime($val) : \"Bulb\"".to_string(),
                )),
                value_conv: Some(ValueConv::Expression(
                    "$val ? 2 ** (6 - $val/8) : 0".to_string(),
                )),
            },
        ),
        (
            1,
            TagInfo {
                name: "FNumber",
                format: "unknown",
                print_conv: Some(PrintConv::Function(fnumber_print_conv)),
                value_conv: Some(ValueConv::Expression("2 ** (($val/8 - 1) / 2)".to_string())),
            },
        ),
        (
            2,
            TagInfo {
                name: "HighSpeedSync",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            3,
            TagInfo {
                name: "ExposureCompensationSet",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val ? sprintf(\"%+.1f\",$val) : 0".to_string(),
                )),
                value_conv: Some(ValueConv::Expression("($val - 128) / 24".to_string())),
            },
        ),
        (
            4,
            TagInfo {
                name: "WhiteBalanceSetting",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            5,
            TagInfo {
                name: "WhiteBalanceFineTune",
                format: "unknown",
                print_conv: None,
                value_conv: Some(ValueConv::Expression(
                    "$val > 128 ? $val - 256 : $val".to_string(),
                )),
            },
        ),
        (
            6,
            TagInfo {
                name: "ColorTemperatureSet",
                format: "unknown",
                print_conv: Some(PrintConv::Expression("\"$val K\"".to_string())),
                value_conv: Some(ValueConv::Expression("$val * 100".to_string())),
            },
        ),
        (
            7,
            TagInfo {
                name: "ColorCompensationFilterSet",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val > 0 ? \"+$val\" : $val".to_string(),
                )),
                value_conv: Some(ValueConv::Expression(
                    "$val > 128 ? $val - 256 : $val".to_string(),
                )),
            },
        ),
        (
            8,
            TagInfo {
                name: "CustomWB_RGBLevels",
                format: "int16u[3]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            11,
            TagInfo {
                name: "ColorTemperatureCustom",
                format: "unknown",
                print_conv: Some(PrintConv::Expression("\"$val K\"".to_string())),
                value_conv: Some(ValueConv::Expression("$val * 100".to_string())),
            },
        ),
        (
            12,
            TagInfo {
                name: "ColorCompensationFilterCustom",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val > 0 ? \"+$val\" : $val".to_string(),
                )),
                value_conv: Some(ValueConv::Expression(
                    "$val > 128 ? $val - 256 : $val".to_string(),
                )),
            },
        ),
        (
            14,
            TagInfo {
                name: "WhiteBalance",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            15,
            TagInfo {
                name: "FocusModeSetting",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            16,
            TagInfo {
                name: "AFAreaMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            17,
            TagInfo {
                name: "AFPointSetting",
                format: "int16u",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            18,
            TagInfo {
                name: "FlashExposureCompSet",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val ? sprintf(\"%+.1f\",$val) : 0".to_string(),
                )),
                value_conv: Some(ValueConv::Expression("($val - 128) / 24".to_string())),
            },
        ),
        (
            19,
            TagInfo {
                name: "MeteringMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            20,
            TagInfo {
                name: "ISOSetting",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val ? sprintf(\"%.0f\",$val) : \"Auto\"".to_string(),
                )),
                value_conv: Some(ValueConv::Expression(
                    "$val ? exp(($val/8-6)*log(2))*100 : $val".to_string(),
                )),
            },
        ),
        (
            22,
            TagInfo {
                name: "DynamicRangeOptimizerMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            24,
            TagInfo {
                name: "CreativeStyle",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            25,
            TagInfo {
                name: "Sharpness",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val > 0 ? \"+$val\" : $val".to_string(),
                )),
                value_conv: Some(ValueConv::Expression("$val - 10".to_string())),
            },
        ),
        (
            26,
            TagInfo {
                name: "Contrast",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val > 0 ? \"+$val\" : $val".to_string(),
                )),
                value_conv: Some(ValueConv::Expression("$val - 10".to_string())),
            },
        ),
        (
            27,
            TagInfo {
                name: "Saturation",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val > 0 ? \"+$val\" : $val".to_string(),
                )),
                value_conv: Some(ValueConv::Expression("$val - 10".to_string())),
            },
        ),
        (
            31,
            TagInfo {
                name: "FlashControl",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            37,
            TagInfo {
                name: "LongExposureNoiseReduction",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            38,
            TagInfo {
                name: "HighISONoiseReduction",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            39,
            TagInfo {
                name: "ImageStyle",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            40,
            TagInfo {
                name: "ShutterSpeedSetting",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$val ? Image::ExifTool::Exif::PrintExposureTime($val) : \"Bulb\"".to_string(),
                )),
                value_conv: Some(ValueConv::Expression(
                    "$val ? 2 ** (6 - $val/8) : 0".to_string(),
                )),
            },
        ),
        (
            41,
            TagInfo {
                name: "ApertureSetting",
                format: "unknown",
                print_conv: Some(PrintConv::Function(fnumber_print_conv)),
                value_conv: Some(ValueConv::Expression("2 ** (($val/8 - 1) / 2)".to_string())),
            },
        ),
        (
            60,
            TagInfo {
                name: "ExposureProgram",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            61,
            TagInfo {
                name: "ImageStabilizationSetting",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            62,
            TagInfo {
                name: "FlashAction",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            63,
            TagInfo {
                name: "Rotation",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            64,
            TagInfo {
                name: "AELock",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            76,
            TagInfo {
                name: "FlashAction2",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            77,
            TagInfo {
                name: "FocusMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            83,
            TagInfo {
                name: "FocusStatus",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            84,
            TagInfo {
                name: "SonyImageSize",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            85,
            TagInfo {
                name: "AspectRatio",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            86,
            TagInfo {
                name: "Quality",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            88,
            TagInfo {
                name: "ExposureLevelIncrements",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            126,
            TagInfo {
                name: "DriveMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            127,
            TagInfo {
                name: "FlashMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            131,
            TagInfo {
                name: "ColorSpace",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
    ])
});

/// Apply ValueConv transformation for tags in this table
pub fn apply_value_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
) -> Result<crate::types::TagValue, String> {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = SONY_CAMERASETTINGS2_TAGS.get(&tag_id_u16) {
        if let Some(ref value_conv) = tag_def.value_conv {
            match value_conv {
                ValueConv::None => Ok(value.clone()),
                ValueConv::Function(func) => func(value).map_err(|e| e.to_string()),
                ValueConv::Expression(expr) => {
                    // Use runtime expression evaluator for dynamic evaluation
                    let mut evaluator = crate::expressions::ExpressionEvaluator::new();
                    evaluator
                        .evaluate_expression(expr, value)
                        .map_err(|e| e.to_string())
                }
                _ => Ok(value.clone()),
            }
        } else {
            Ok(value.clone())
        }
    } else {
        Err(format!("Tag 0x{:04x} not found in table", tag_id))
    }
}

/// Apply PrintConv transformation for tags in this table
pub fn apply_print_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _evaluator: &mut crate::expressions::ExpressionEvaluator,
    _errors: &mut Vec<String>,
    _warnings: &mut Vec<String>,
) -> crate::types::TagValue {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = SONY_CAMERASETTINGS2_TAGS.get(&tag_id_u16) {
        if let Some(ref print_conv) = tag_def.print_conv {
            match print_conv {
                PrintConv::None => value.clone(),
                PrintConv::Function(func) => func(value),
                PrintConv::Expression(expr) => {
                    // Use runtime expression evaluator for dynamic evaluation
                    _evaluator
                        .evaluate_expression(expr, value)
                        .unwrap_or_else(|_| value.clone())
                }
                _ => value.clone(),
            }
        } else {
            value.clone()
        }
    } else {
        value.clone()
    }
}
