//! Tag kits for interop category from QuickTime.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_0: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert(" KD ".to_string(), "Kodak");
    map.insert("AR.D".to_string(), "Parrot AR.Drone");
    map.insert("FFMP".to_string(), "FFmpeg");
    map.insert("GIC ".to_string(), "General Imaging Co.");
    map.insert("KMPI".to_string(), "Konica-Minolta");
    map.insert("NIKO".to_string(), "Nikon");
    map.insert("SMI ".to_string(), "Sorenson Media Inc.");
    map.insert("ZORA".to_string(), "Zoran Corporation");
    map.insert("appl".to_string(), "Apple");
    map.insert("fe20".to_string(), "Olympus (fe20)");
    map.insert("kdak".to_string(), "Kodak");
    map.insert("leic".to_string(), "Leica");
    map.insert("mino".to_string(), "Minolta");
    map.insert("niko".to_string(), "Nikon");
    map.insert("olym".to_string(), "Olympus");
    map.insert("pana".to_string(), "Panasonic");
    map.insert("pent".to_string(), "Pentax");
    map.insert("pr01".to_string(), "Olympus (pr01)");
    map.insert("sany".to_string(), "Sanyo");
    map
});

static PRINT_CONV_1: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("dhlr".to_string(), "Data Handler");
    map.insert("mhlr".to_string(), "Media Handler");
    map
});

static PRINT_CONV_2: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("alis".to_string(), "Alias Data");
    map.insert("camm".to_string(), "Camera Metadata");
    map.insert("crsm".to_string(), "Clock Reference");
    map.insert("data".to_string(), "Data");
    map.insert("hint".to_string(), "Hint Track");
    map.insert("ipsm".to_string(), "IPMP");
    map.insert("m7sm".to_string(), "MPEG-7 Stream");
    map.insert("mdir".to_string(), "Metadata");
    map.insert("mdta".to_string(), "Metadata Tags");
    map.insert("meta".to_string(), "NRT Metadata");
    map.insert("mjsm".to_string(), "MPEG-J");
    map.insert("nrtm".to_string(), "Non-Real Time Metadata");
    map.insert("ocsm".to_string(), "Object Content");
    map.insert("odsm".to_string(), "Object Descriptor");
    map.insert("pict".to_string(), "Picture");
    map.insert("priv".to_string(), "Private");
    map.insert("psmd".to_string(), "Panasonic Static Metadata");
    map.insert("sbtl".to_string(), "Subtitle");
    map.insert("sdsm".to_string(), "Scene Description");
    map.insert("soun".to_string(), "Audio Track");
    map.insert("subp".to_string(), "Subpicture");
    map.insert("text".to_string(), "Text");
    map.insert("tmcd".to_string(), "Time Code");
    map.insert("url ".to_string(), "URL");
    map.insert("vide".to_string(), "Video Track");
    map
});

/// Get tag definitions for interop category
pub fn get_interop_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (
            10,
            TagKitDef {
                id: 10,
                name: "VendorID",
                format: "string[4]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_0),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            2,
            TagKitDef {
                id: 2,
                name: "CompressorID",
                format: "string[4]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            4,
            TagKitDef {
                id: 4,
                name: "AudioFormat",
                format: "undef[4]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            4,
            TagKitDef {
                id: 4,
                name: "HandlerClass",
                format: "undef[4]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_1),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            8,
            TagKitDef {
                id: 8,
                name: "HandlerType",
                format: "undef[4]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_2),
                value_conv: None,
                subdirectory: None,
            },
        ),
    ]
}
