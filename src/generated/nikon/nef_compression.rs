//! Generated nef_compression lookup table
//!
//! This file is automatically generated.
//! DO NOT EDIT MANUALLY - changes will be overwritten.
//!
//! Source: ExifTool Nikon.pm %nefCompression
//! Description: NEF (RAW) compression modes

use std::collections::HashMap;
use std::sync::LazyLock;

/// NEF (RAW) compression modes lookup table
/// Source: ExifTool Nikon.pm %nefCompression (12 entries)
pub static NEF_COMPRESSION: LazyLock<HashMap<u8, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert(1, "Lossy (type 1)");
    map.insert(2, "Uncompressed");
    map.insert(3, "Lossless");
    map.insert(4, "Lossy (type 2)");
    map.insert(5, "Striped packed 12 bits");
    map.insert(6, "Uncompressed (reduced to 12 bit)");
    map.insert(7, "Unpacked 12 bits");
    map.insert(8, "Small");
    map.insert(9, "Packed 12 bits");
    map.insert(10, "Packed 14 bits");
    map.insert(13, "High Efficiency");
    map.insert(14, "High Efficiency*");
    map
});

/// Look up nef (raw) compression modes value by key
pub fn lookup_nef_compression(key: u8) -> Option<&'static str> {
    NEF_COMPRESSION.get(&key).copied()
}
