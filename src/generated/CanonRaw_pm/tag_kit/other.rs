//! Tag kits for other category from CanonRaw.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_6: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("131073".to_string(), "CRW");
    map.insert("65536".to_string(), "JPEG (lossy)");
    map.insert("65538".to_string(), "JPEG (non-quantization)");
    map.insert("65539".to_string(), "JPEG (lossy/non-quantization toggled)");
    map
});

static PRINT_CONV_7: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert(
        "100925440".to_string(),
        "PowerShot S100 / Digital IXUS / IXY Digital",
    );
    map.insert("1042".to_string(), "EOS M50 / Kiss M");
    map.insert("1074255475".to_string(), "DC19/DC21/DC22");
    map.insert("1074255476".to_string(), "XH A1");
    map.insert("1074255477".to_string(), "HV10");
    map.insert("1074255478".to_string(), "MD130/MD140/MD150/MD160/ZR850");
    map.insert("1074255735".to_string(), "DC50");
    map.insert("1074255736".to_string(), "HV20");
    map.insert("1074255737".to_string(), "DC211");
    map.insert("1074255738".to_string(), "HG10");
    map.insert("1074255739".to_string(), "HR10");
    map.insert("1074255741".to_string(), "MD255/ZR950");
    map.insert("1074255900".to_string(), "HF11");
    map.insert("1074255992".to_string(), "HV30");
    map.insert("1074255996".to_string(), "XH A1S");
    map.insert("1074255998".to_string(), "DC301/DC310/DC311/DC320/DC330");
    map.insert("1074255999".to_string(), "FS100");
    map.insert("1074256000".to_string(), "HF10");
    map.insert("1074256002".to_string(), "HG20/HG21");
    map.insert("1074256165".to_string(), "HF21");
    map.insert("1074256166".to_string(), "HF S11");
    map.insert("1074256248".to_string(), "HV40");
    map.insert("1074256263".to_string(), "DC410/DC411/DC420");
    map.insert("1074256264".to_string(), "FS19/FS20/FS21/FS22/FS200");
    map.insert("1074256265".to_string(), "HF20/HF200");
    map.insert("1074256266".to_string(), "HF S10/S100");
    map.insert("1074256526".to_string(), "HF R10/R16/R17/R18/R100/R106");
    map.insert("1074256527".to_string(), "HF M30/M31/M36/M300/M306");
    map.insert("1074256528".to_string(), "HF S20/S21/S200");
    map.insert(
        "1074256530".to_string(),
        "FS31/FS36/FS37/FS300/FS305/FS306/FS307",
    );
    map.insert("1074257056".to_string(), "EOS C300");
    map.insert("1074257321".to_string(), "HF G25");
    map.insert("1074257844".to_string(), "XC10");
    map.insert("1074258371".to_string(), "EOS C200");
    map.insert("16842752".to_string(), "PowerShot A30");
    map.insert(
        "17039360".to_string(),
        "PowerShot S300 / Digital IXUS 300 / IXY Digital 300",
    );
    map.insert("17170432".to_string(), "PowerShot A20");
    map.insert("17301504".to_string(), "PowerShot A10");
    map.insert(
        "17367040".to_string(),
        "PowerShot S110 / Digital IXUS v / IXY Digital 200",
    );
    map.insert("17825792".to_string(), "PowerShot G2");
    map.insert("17891328".to_string(), "PowerShot S40");
    map.insert("17956864".to_string(), "PowerShot S30");
    map.insert("18022400".to_string(), "PowerShot A40");
    map.insert("18087936".to_string(), "EOS D30");
    map.insert("18153472".to_string(), "PowerShot A100");
    map.insert(
        "18219008".to_string(),
        "PowerShot S200 / Digital IXUS v2 / IXY Digital 200a",
    );
    map.insert("18284544".to_string(), "PowerShot A200");
    map.insert(
        "18350080".to_string(),
        "PowerShot S330 / Digital IXUS 330 / IXY Digital 300a",
    );
    map.insert("18415616".to_string(), "PowerShot G3");
    map.insert("18939904".to_string(), "PowerShot S45");
    map.insert(
        "19070976".to_string(),
        "PowerShot SD100 / Digital IXUS II / IXY Digital 30",
    );
    map.insert(
        "19136512".to_string(),
        "PowerShot S230 / Digital IXUS v3 / IXY Digital 320",
    );
    map.insert("19202048".to_string(), "PowerShot A70");
    map.insert("19267584".to_string(), "PowerShot A60");
    map.insert(
        "19333120".to_string(),
        "PowerShot S400 / Digital IXUS 400 / IXY Digital 400",
    );
    map.insert("19464192".to_string(), "PowerShot G5");
    map.insert("19922944".to_string(), "PowerShot A300");
    map.insert("19988480".to_string(), "PowerShot S50");
    map.insert("20185088".to_string(), "PowerShot A80");
    map.insert(
        "20250624".to_string(),
        "PowerShot SD10 / Digital IXUS i / IXY Digital L",
    );
    map.insert("20316160".to_string(), "PowerShot S1 IS");
    map.insert("20381696".to_string(), "PowerShot Pro1");
    map.insert("20447232".to_string(), "PowerShot S70");
    map.insert("2049".to_string(), "PowerShot SX740 HS");
    map.insert("20512768".to_string(), "PowerShot S60");
    map.insert("2052".to_string(), "PowerShot G5 X Mark II");
    map.insert("2053".to_string(), "PowerShot SX70 HS");
    map.insert("2056".to_string(), "PowerShot G7 X Mark III");
    map.insert("2065".to_string(), "EOS M6 Mark II");
    map.insert("2066".to_string(), "EOS M200");
    map.insert("20971520".to_string(), "PowerShot G6");
    map.insert(
        "21037056".to_string(),
        "PowerShot S500 / Digital IXUS 500 / IXY Digital 500",
    );
    map.insert("21102592".to_string(), "PowerShot A75");
    map.insert(
        "21233664".to_string(),
        "PowerShot SD110 / Digital IXUS IIs / IXY Digital 30a",
    );
    map.insert("21299200".to_string(), "PowerShot A400");
    map.insert("21430272".to_string(), "PowerShot A310");
    map.insert("2147483649".to_string(), "EOS-1D");
    map.insert("2147484007".to_string(), "EOS-1DS");
    map.insert("2147484008".to_string(), "EOS 10D");
    map.insert("2147484009".to_string(), "EOS-1D Mark III");
    map.insert(
        "2147484016".to_string(),
        "EOS Digital Rebel / 300D / Kiss Digital",
    );
    map.insert("2147484020".to_string(), "EOS-1D Mark II");
    map.insert("2147484021".to_string(), "EOS 20D");
    map.insert(
        "2147484022".to_string(),
        "EOS Digital Rebel XSi / 450D / Kiss X2",
    );
    map.insert("2147484040".to_string(), "EOS-1Ds Mark II");
    map.insert(
        "2147484041".to_string(),
        "EOS Digital Rebel XT / 350D / Kiss Digital N",
    );
    map.insert("2147484048".to_string(), "EOS 40D");
    map.insert("2147484179".to_string(), "EOS 5D");
    map.insert("2147484181".to_string(), "EOS-1Ds Mark III");
    map.insert("2147484184".to_string(), "EOS 5D Mark II");
    map.insert("2147484185".to_string(), "WFT-E1");
    map.insert("2147484210".to_string(), "EOS-1D Mark II N");
    map.insert("2147484212".to_string(), "EOS 30D");
    map.insert(
        "2147484214".to_string(),
        "EOS Digital Rebel XTi / 400D / Kiss Digital X",
    );
    map.insert("2147484225".to_string(), "WFT-E2");
    map.insert("2147484230".to_string(), "WFT-E3");
    map.insert("2147484240".to_string(), "EOS 7D");
    map.insert("2147484242".to_string(), "EOS Rebel T1i / 500D / Kiss X3");
    map.insert("2147484244".to_string(), "EOS Rebel XS / 1000D / Kiss F");
    map.insert("2147484257".to_string(), "EOS 50D");
    map.insert("2147484265".to_string(), "EOS-1D X");
    map.insert("2147484272".to_string(), "EOS Rebel T2i / 550D / Kiss X4");
    map.insert("2147484273".to_string(), "WFT-E4");
    map.insert("2147484275".to_string(), "WFT-E5");
    map.insert("2147484289".to_string(), "EOS-1D Mark IV");
    map.insert("2147484293".to_string(), "EOS 5D Mark III");
    map.insert("2147484294".to_string(), "EOS Rebel T3i / 600D / Kiss X5");
    map.insert("2147484295".to_string(), "EOS 60D");
    map.insert("2147484296".to_string(), "EOS Rebel T3 / 1100D / Kiss X50");
    map.insert("2147484297".to_string(), "EOS 7D Mark II");
    map.insert("2147484311".to_string(), "WFT-E2 II");
    map.insert("2147484312".to_string(), "WFT-E4 II");
    map.insert("2147484417".to_string(), "EOS Rebel T4i / 650D / Kiss X6i");
    map.insert("2147484418".to_string(), "EOS 6D");
    map.insert("2147484452".to_string(), "EOS-1D C");
    map.insert("2147484453".to_string(), "EOS 70D");
    map.insert("2147484454".to_string(), "EOS Rebel T5i / 700D / Kiss X7i");
    map.insert(
        "2147484455".to_string(),
        "EOS Rebel T5 / 1200D / Kiss X70 / Hi",
    );
    map.insert("2147484456".to_string(), "EOS-1D X Mark II");
    map.insert("2147484465".to_string(), "EOS M");
    map.insert("2147484486".to_string(), "EOS Rebel SL1 / 100D / Kiss X7");
    map.insert("2147484487".to_string(), "EOS Rebel T6s / 760D / 8000D");
    map.insert("2147484489".to_string(), "EOS 5D Mark IV");
    map.insert("2147484496".to_string(), "EOS 80D");
    map.insert("2147484501".to_string(), "EOS M2");
    map.insert("2147484546".to_string(), "EOS 5DS");
    map.insert("2147484563".to_string(), "EOS Rebel T6i / 750D / Kiss X8i");
    map.insert("2147484673".to_string(), "EOS 5DS R");
    map.insert("2147484676".to_string(), "EOS Rebel T6 / 1300D / Kiss X80");
    map.insert("2147484677".to_string(), "EOS Rebel T7i / 800D / Kiss X9i");
    map.insert("2147484678".to_string(), "EOS 6D Mark II");
    map.insert("2147484680".to_string(), "EOS 77D / 9000D");
    map.insert("2147484695".to_string(), "EOS Rebel SL2 / 200D / Kiss X9");
    map.insert("2147484705".to_string(), "EOS R5");
    map.insert("2147484706".to_string(), "EOS Rebel T100 / 4000D / 3000D");
    map.insert("2147484708".to_string(), "EOS R");
    map.insert("2147484712".to_string(), "EOS-1D X Mark III");
    map.insert(
        "2147484722".to_string(),
        "EOS Rebel T7 / 2000D / 1500D / Kiss X90",
    );
    map.insert("2147484723".to_string(), "EOS RP");
    map.insert("2147484725".to_string(), "EOS Rebel T8i / 850D / X10i");
    map.insert("2147484726".to_string(), "EOS SL3 / 250D / Kiss X10");
    map.insert("2147484727".to_string(), "EOS 90D");
    map.insert("2147484752".to_string(), "EOS R3");
    map.insert("2147484755".to_string(), "EOS R6");
    map.insert("2147484772".to_string(), "EOS R7");
    map.insert("2147484773".to_string(), "EOS R10");
    map.insert("2147484775".to_string(), "PowerShot ZOOM");
    map.insert("2147484776".to_string(), "EOS M50 Mark II / Kiss M2");
    map.insert("2147484800".to_string(), "EOS R50");
    map.insert("2147484801".to_string(), "EOS R6 Mark II");
    map.insert("2147484807".to_string(), "EOS R8");
    map.insert("2147484817".to_string(), "PowerShot V10");
    map.insert("2147484821".to_string(), "EOS R1");
    map.insert("2147484822".to_string(), "R5 Mark II");
    map.insert("2147484824".to_string(), "EOS R100");
    map.insert("2147484950".to_string(), "EOS R50 V");
    map.insert("2147484960".to_string(), "EOS D2000C");
    map.insert("2147485024".to_string(), "EOS D6000C");
    map.insert("21561344".to_string(), "PowerShot A85");
    map.insert(
        "22151168".to_string(),
        "PowerShot S410 / Digital IXUS 430 / IXY Digital 450",
    );
    map.insert("22216704".to_string(), "PowerShot A95");
    map.insert(
        "22282240".to_string(),
        "PowerShot SD300 / Digital IXUS 40 / IXY Digital 50",
    );
    map.insert(
        "22347776".to_string(),
        "PowerShot SD200 / Digital IXUS 30 / IXY Digital 40",
    );
    map.insert("22413312".to_string(), "PowerShot A520");
    map.insert("22478848".to_string(), "PowerShot A510");
    map.insert(
        "22609920".to_string(),
        "PowerShot SD20 / Digital IXUS i5 / IXY Digital L2",
    );
    map.insert("23330816".to_string(), "PowerShot S2 IS");
    map.insert(
        "23396352".to_string(),
        "PowerShot SD430 / Digital IXUS Wireless / IXY Digital Wireless",
    );
    map.insert(
        "23461888".to_string(),
        "PowerShot SD500 / Digital IXUS 700 / IXY Digital 600",
    );
    map.insert("23494656".to_string(), "EOS D60");
    map.insert(
        "24117248".to_string(),
        "PowerShot SD30 / Digital IXUS i Zoom / IXY Digital L3",
    );
    map.insert("24379392".to_string(), "PowerShot A430");
    map.insert("24444928".to_string(), "PowerShot A410");
    map.insert("24510464".to_string(), "PowerShot S80");
    map.insert("24641536".to_string(), "PowerShot A620");
    map.insert("24707072".to_string(), "PowerShot A610");
    map.insert(
        "25165824".to_string(),
        "PowerShot SD630 / Digital IXUS 65 / IXY Digital 80",
    );
    map.insert(
        "25231360".to_string(),
        "PowerShot SD450 / Digital IXUS 55 / IXY Digital 60",
    );
    map.insert("25296896".to_string(), "PowerShot TX1");
    map.insert(
        "25624576".to_string(),
        "PowerShot SD400 / Digital IXUS 50 / IXY Digital 55",
    );
    map.insert("25690112".to_string(), "PowerShot A420");
    map.insert(
        "25755648".to_string(),
        "PowerShot SD900 / Digital IXUS 900 Ti / IXY Digital 1000",
    );
    map.insert(
        "26214400".to_string(),
        "PowerShot SD550 / Digital IXUS 750 / IXY Digital 700",
    );
    map.insert("26345472".to_string(), "PowerShot A700");
    map.insert(
        "26476544".to_string(),
        "PowerShot SD700 IS / Digital IXUS 800 IS / IXY Digital 800 IS",
    );
    map.insert("26542080".to_string(), "PowerShot S3 IS");
    map.insert("26607616".to_string(), "PowerShot A540");
    map.insert(
        "26673152".to_string(),
        "PowerShot SD600 / Digital IXUS 60 / IXY Digital 70",
    );
    map.insert("26738688".to_string(), "PowerShot G7");
    map.insert("26804224".to_string(), "PowerShot A530");
    map.insert(
        "33554432".to_string(),
        "PowerShot SD800 IS / Digital IXUS 850 IS / IXY Digital 900 IS",
    );
    map.insert(
        "33619968".to_string(),
        "PowerShot SD40 / Digital IXUS i7 / IXY Digital L4",
    );
    map.insert("33685504".to_string(), "PowerShot A710 IS");
    map.insert("33751040".to_string(), "PowerShot A640");
    map.insert("33816576".to_string(), "PowerShot A630");
    map.insert("34144256".to_string(), "PowerShot S5 IS");
    map.insert("34603008".to_string(), "PowerShot A460");
    map.insert(
        "34734080".to_string(),
        "PowerShot SD850 IS / Digital IXUS 950 IS / IXY Digital 810 IS",
    );
    map.insert("34799616".to_string(), "PowerShot A570 IS");
    map.insert("34865152".to_string(), "PowerShot A560");
    map.insert(
        "34930688".to_string(),
        "PowerShot SD750 / Digital IXUS 75 / IXY Digital 90",
    );
    map.insert(
        "34996224".to_string(),
        "PowerShot SD1000 / Digital IXUS 70 / IXY Digital 10",
    );
    map.insert("35127296".to_string(), "PowerShot A550");
    map.insert("35192832".to_string(), "PowerShot A450");
    map.insert("35848192".to_string(), "PowerShot G9");
    map.insert("35913728".to_string(), "PowerShot A650 IS");
    map.insert("36044800".to_string(), "PowerShot A720 IS");
    map.insert("36241408".to_string(), "PowerShot SX100 IS");
    map.insert(
        "36700160".to_string(),
        "PowerShot SD950 IS / Digital IXUS 960 IS / IXY Digital 2000 IS",
    );
    map.insert(
        "36765696".to_string(),
        "PowerShot SD870 IS / Digital IXUS 860 IS / IXY Digital 910 IS",
    );
    map.insert(
        "36831232".to_string(),
        "PowerShot SD890 IS / Digital IXUS 970 IS / IXY Digital 820 IS",
    );
    map.insert(
        "37093376".to_string(),
        "PowerShot SD790 IS / Digital IXUS 90 IS / IXY Digital 95 IS",
    );
    map.insert(
        "37158912".to_string(),
        "PowerShot SD770 IS / Digital IXUS 85 IS / IXY Digital 25 IS",
    );
    map.insert("37224448".to_string(), "PowerShot A590 IS");
    map.insert("37289984".to_string(), "PowerShot A580");
    map.insert("37879808".to_string(), "PowerShot A470");
    map.insert(
        "37945344".to_string(),
        "PowerShot SD1100 IS / Digital IXUS 80 IS / IXY Digital 20 IS",
    );
    map.insert("38141952".to_string(), "PowerShot SX1 IS");
    map.insert("38207488".to_string(), "PowerShot SX10 IS");
    map.insert("38273024".to_string(), "PowerShot A1000 IS");
    map.insert("38338560".to_string(), "PowerShot G10");
    map.insert("38862848".to_string(), "PowerShot A2000 IS");
    map.insert("38928384".to_string(), "PowerShot SX110 IS");
    map.insert(
        "38993920".to_string(),
        "PowerShot SD990 IS / Digital IXUS 980 IS / IXY Digital 3000 IS",
    );
    map.insert(
        "39059456".to_string(),
        "PowerShot SD880 IS / Digital IXUS 870 IS / IXY Digital 920 IS",
    );
    map.insert("39124992".to_string(), "PowerShot E1");
    map.insert("39190528".to_string(), "PowerShot D10");
    map.insert(
        "39256064".to_string(),
        "PowerShot SD960 IS / Digital IXUS 110 IS / IXY Digital 510 IS",
    );
    map.insert("39321600".to_string(), "PowerShot A2100 IS");
    map.insert("39387136".to_string(), "PowerShot A480");
    map.insert("39845888".to_string(), "PowerShot SX200 IS");
    map.insert(
        "39911424".to_string(),
        "PowerShot SD970 IS / Digital IXUS 990 IS / IXY Digital 830 IS",
    );
    map.insert(
        "39976960".to_string(),
        "PowerShot SD780 IS / Digital IXUS 100 IS / IXY Digital 210 IS",
    );
    map.insert("40042496".to_string(), "PowerShot A1100 IS");
    map.insert(
        "40108032".to_string(),
        "PowerShot SD1200 IS / Digital IXUS 95 IS / IXY Digital 110 IS",
    );
    map.insert("40894464".to_string(), "PowerShot G11");
    map.insert("40960000".to_string(), "PowerShot SX120 IS");
    map.insert("41025536".to_string(), "PowerShot S90");
    map.insert("41222144".to_string(), "PowerShot SX20 IS");
    map.insert(
        "41287680".to_string(),
        "PowerShot SD980 IS / Digital IXUS 200 IS / IXY Digital 930 IS",
    );
    map.insert(
        "41353216".to_string(),
        "PowerShot SD940 IS / Digital IXUS 120 IS / IXY Digital 220 IS",
    );
    map.insert("41943040".to_string(), "PowerShot A495");
    map.insert("42008576".to_string(), "PowerShot A490");
    map.insert("42074112".to_string(), "PowerShot A3100/A3150 IS");
    map.insert("42139648".to_string(), "PowerShot A3000 IS");
    map.insert(
        "42205184".to_string(),
        "PowerShot SD1400 IS / IXUS 130 / IXY 400F",
    );
    map.insert(
        "42270720".to_string(),
        "PowerShot SD1300 IS / IXUS 105 / IXY 200F",
    );
    map.insert(
        "42336256".to_string(),
        "PowerShot SD3500 IS / IXUS 210 / IXY 10S",
    );
    map.insert("42401792".to_string(), "PowerShot SX210 IS");
    map.insert(
        "42467328".to_string(),
        "PowerShot SD4000 IS / IXUS 300 HS / IXY 30S",
    );
    map.insert(
        "42532864".to_string(),
        "PowerShot SD4500 IS / IXUS 1000 HS / IXY 50S",
    );
    map.insert("43122688".to_string(), "PowerShot G12");
    map.insert("43188224".to_string(), "PowerShot SX30 IS");
    map.insert("43253760".to_string(), "PowerShot SX130 IS");
    map.insert("43319296".to_string(), "PowerShot S95");
    map.insert("43515904".to_string(), "PowerShot A3300 IS");
    map.insert("43581440".to_string(), "PowerShot A3200 IS");
    map.insert(
        "50331648".to_string(),
        "PowerShot ELPH 500 HS / IXUS 310 HS / IXY 31S",
    );
    map.insert("50397184".to_string(), "PowerShot Pro90 IS");
    map.insert("50397185".to_string(), "PowerShot A800");
    map.insert(
        "50462720".to_string(),
        "PowerShot ELPH 100 HS / IXUS 115 HS / IXY 210F",
    );
    map.insert("50528256".to_string(), "PowerShot SX230 HS");
    map.insert(
        "50593792".to_string(),
        "PowerShot ELPH 300 HS / IXUS 220 HS / IXY 410F",
    );
    map.insert("50659328".to_string(), "PowerShot A2200");
    map.insert("50724864".to_string(), "PowerShot A1200");
    map.insert("50790400".to_string(), "PowerShot SX220 HS");
    map.insert("50855936".to_string(), "PowerShot G1 X");
    map.insert("50921472".to_string(), "PowerShot SX150 IS");
    map.insert(
        "51380224".to_string(),
        "PowerShot ELPH 510 HS / IXUS 1100 HS / IXY 51S",
    );
    map.insert("51445760".to_string(), "PowerShot S100 (new)");
    map.insert(
        "51511296".to_string(),
        "PowerShot ELPH 310 HS / IXUS 230 HS / IXY 600F",
    );
    map.insert("51576832".to_string(), "PowerShot SX40 HS");
    map.insert("51642368".to_string(), "IXY 32S");
    map.insert("51773440".to_string(), "PowerShot A1300");
    map.insert("51838976".to_string(), "PowerShot A810");
    map.insert(
        "51904512".to_string(),
        "PowerShot ELPH 320 HS / IXUS 240 HS / IXY 420F",
    );
    map.insert(
        "51970048".to_string(),
        "PowerShot ELPH 110 HS / IXUS 125 HS / IXY 220F",
    );
    map.insert("52428800".to_string(), "PowerShot D20");
    map.insert("52494336".to_string(), "PowerShot A4000 IS");
    map.insert("52559872".to_string(), "PowerShot SX260 HS");
    map.insert("52625408".to_string(), "PowerShot SX240 HS");
    map.insert(
        "52690944".to_string(),
        "PowerShot ELPH 530 HS / IXUS 510 HS / IXY 1",
    );
    map.insert(
        "52756480".to_string(),
        "PowerShot ELPH 520 HS / IXUS 500 HS / IXY 3",
    );
    map.insert("52822016".to_string(), "PowerShot A3400 IS");
    map.insert("52887552".to_string(), "PowerShot A2400 IS");
    map.insert("52953088".to_string(), "PowerShot A2300");
    map.insert("53608448".to_string(), "PowerShot S100V");
    map.insert("53673984".to_string(), "PowerShot G15");
    map.insert("53739520".to_string(), "PowerShot SX50 HS");
    map.insert("53805056".to_string(), "PowerShot SX160 IS");
    map.insert("53870592".to_string(), "PowerShot S110 (new)");
    map.insert("53936128".to_string(), "PowerShot SX500 IS");
    map.insert("54001664".to_string(), "PowerShot N");
    map.insert("54067200".to_string(), "IXUS 245 HS / IXY 430F");
    map.insert("54525952".to_string(), "PowerShot SX280 HS");
    map.insert("54591488".to_string(), "PowerShot SX270 HS");
    map.insert("54657024".to_string(), "PowerShot A3500 IS");
    map.insert("54722560".to_string(), "PowerShot A2600");
    map.insert("54788096".to_string(), "PowerShot SX275 HS");
    map.insert("54853632".to_string(), "PowerShot A1400");
    map.insert(
        "54919168".to_string(),
        "PowerShot ELPH 130 IS / IXUS 140 / IXY 110F",
    );
    map.insert(
        "54984704".to_string(),
        "PowerShot ELPH 115/120 IS / IXUS 132/135 / IXY 90F/100F",
    );
    map.insert(
        "55115776".to_string(),
        "PowerShot ELPH 330 HS / IXUS 255 HS / IXY 610F",
    );
    map.insert("55640064".to_string(), "PowerShot A2500");
    map.insert("55836672".to_string(), "PowerShot G16");
    map.insert("55902208".to_string(), "PowerShot S120");
    map.insert("55967744".to_string(), "PowerShot SX170 IS");
    map.insert("56098816".to_string(), "PowerShot SX510 HS");
    map.insert("56164352".to_string(), "PowerShot S200 (new)");
    map.insert("56623104".to_string(), "IXY 620F");
    map.insert("56688640".to_string(), "PowerShot N100");
    map.insert("56885248".to_string(), "PowerShot G1 X Mark II");
    map.insert("56950784".to_string(), "PowerShot D30");
    map.insert("57016320".to_string(), "PowerShot SX700 HS");
    map.insert("57081856".to_string(), "PowerShot SX600 HS");
    map.insert(
        "57147392".to_string(),
        "PowerShot ELPH 140 IS / IXUS 150 / IXY 130",
    );
    map.insert(
        "57212928".to_string(),
        "PowerShot ELPH 135 / IXUS 145 / IXY 120",
    );
    map.insert(
        "57671680".to_string(),
        "PowerShot ELPH 340 HS / IXUS 265 HS / IXY 630",
    );
    map.insert(
        "57737216".to_string(),
        "PowerShot ELPH 150 IS / IXUS 155 / IXY 140",
    );
    map.insert("57933824".to_string(), "EOS M3");
    map.insert("57999360".to_string(), "PowerShot SX60 HS");
    map.insert("58064896".to_string(), "PowerShot SX520 HS");
    map.insert("58130432".to_string(), "PowerShot SX400 IS");
    map.insert("58195968".to_string(), "PowerShot G7 X");
    map.insert("58261504".to_string(), "PowerShot N2");
    map.insert("58720256".to_string(), "PowerShot SX530 HS");
    map.insert("58851328".to_string(), "PowerShot SX710 HS");
    map.insert("58916864".to_string(), "PowerShot SX610 HS");
    map.insert("58982400".to_string(), "EOS M10");
    map.insert("59047936".to_string(), "PowerShot G3 X");
    map.insert(
        "59113472".to_string(),
        "PowerShot ELPH 165 HS / IXUS 165 / IXY 160",
    );
    map.insert("59179008".to_string(), "PowerShot ELPH 160 / IXUS 160");
    map.insert(
        "59244544".to_string(),
        "PowerShot ELPH 350 HS / IXUS 275 HS / IXY 640",
    );
    map.insert("59310080".to_string(), "PowerShot ELPH 170 IS / IXUS 170");
    map.insert("59834368".to_string(), "PowerShot SX410 IS");
    map.insert("59965440".to_string(), "PowerShot G9 X");
    map.insert("60030976".to_string(), "EOS M5");
    map.insert("60096512".to_string(), "PowerShot G5 X");
    map.insert("60227584".to_string(), "PowerShot G7 X Mark II");
    map.insert("60293120".to_string(), "EOS M100");
    map.insert(
        "60358656".to_string(),
        "PowerShot ELPH 360 HS / IXUS 285 HS / IXY 650",
    );
    map.insert("67174400".to_string(), "PowerShot SX540 HS");
    map.insert("67239936".to_string(), "PowerShot SX420 IS");
    map.insert(
        "67305472".to_string(),
        "PowerShot ELPH 190 IS / IXUS 180 / IXY 190",
    );
    map.insert("67371008".to_string(), "PowerShot G1");
    map.insert(
        "67371009".to_string(),
        "PowerShot ELPH 180 IS / IXUS 175 / IXY 180",
    );
    map.insert("67436544".to_string(), "PowerShot SX720 HS");
    map.insert("67502080".to_string(), "PowerShot SX620 HS");
    map.insert("67567616".to_string(), "EOS M6");
    map.insert("68157440".to_string(), "PowerShot G9 X Mark II");
    map.insert(
        "68485120".to_string(),
        "PowerShot ELPH 185 / IXUS 185 / IXY 200",
    );
    map.insert("68550656".to_string(), "PowerShot SX430 IS");
    map.insert("68616192".to_string(), "PowerShot SX730 HS");
    map.insert("68681728".to_string(), "PowerShot G1 X Mark III");
    map
});

static PRINT_CONV_8: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("2415919104".to_string(), "Format 1");
    map.insert("2684354560".to_string(), "Format 2");
    map
});

/// Get tag definitions for other category
pub fn get_other_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (0, TagKitDef {
            id: 0,
            name: "FileFormat",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_6),
            value_conv: None,
            subdirectory: None,
        }),
        (0, TagKitDef {
            id: 0,
            name: "NullRecord",
            format: "undef",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (10244, TagKitDef {
            id: 10244,
            name: "ImageDescription",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x2804_subdirectory }),
        }),
        (10247, TagKitDef {
            id: 10247,
            name: "CameraObject",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x2807_subdirectory }),
        }),
        (12290, TagKitDef {
            id: 12290,
            name: "ShootingRecord",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x3002_subdirectory }),
        }),
        (12291, TagKitDef {
            id: 12291,
            name: "MeasuredInfo",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x3003_subdirectory }),
        }),
        (12292, TagKitDef {
            id: 12292,
            name: "CameraSpecification",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x3004_subdirectory }),
        }),
        (12298, TagKitDef {
            id: 12298,
            name: "ImageProps",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x300a_subdirectory }),
        }),
        (12299, TagKitDef {
            id: 12299,
            name: "ExifInformation",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x300b_subdirectory }),
        }),
        (2053, TagKitDef {
            id: 2053,
            name: "CanonFileDescription",
            format: "string[32]",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (2053, TagKitDef {
            id: 2053,
            name: "UserComment",
            format: "string[256]",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (2058, TagKitDef {
            id: 2058,
            name: "CanonRawMakeModel",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x80a_subdirectory }),
        }),
        (2059, TagKitDef {
            id: 2059,
            name: "CanonFirmwareVersion",
            format: "string[32]",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (2060, TagKitDef {
            id: 2060,
            name: "ComponentVersion",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (2061, TagKitDef {
            id: 2061,
            name: "ROMOperationMode",
            format: "string[8]",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (2064, TagKitDef {
            id: 2064,
            name: "OwnerName",
            format: "string[32]",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (2069, TagKitDef {
            id: 2069,
            name: "CanonImageType",
            format: "string[32]",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (2070, TagKitDef {
            id: 2070,
            name: "OriginalFileName",
            format: "string[32]",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (50, TagKitDef {
            id: 50,
            name: "CanonColorInfo1",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (6147, TagKitDef {
            id: 6147,
            name: "ImageFormat",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x1803_subdirectory }),
        }),
        (6148, TagKitDef {
            id: 6148,
            name: "RecordID",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (6151, TagKitDef {
            id: 6151,
            name: "TargetDistanceSetting",
            format: "float",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("\"$val mm\""),
            value_conv: None,
            subdirectory: None,
        }),
        (6155, TagKitDef {
            id: 6155,
            name: "SerialNumber",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression("sprintf(\"%x-%.5d\",$val>>16,$val&0xffff)"),
            value_conv: None,
            subdirectory: None,
        }),
        (6155, TagKitDef {
            id: 6155,
            name: "SerialNumber",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression("sprintf(\"%.10d\",$val)"),
            value_conv: None,
            subdirectory: None,
        }),
        (6155, TagKitDef {
            id: 6155,
            name: "UnknownNumber",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (6160, TagKitDef {
            id: 6160,
            name: "ImageInfo",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x1810_subdirectory }),
        }),
        (6163, TagKitDef {
            id: 6163,
            name: "FlashInfo",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x1813_subdirectory }),
        }),
        (6164, TagKitDef {
            id: 6164,
            name: "MeasuredEV",
            format: "float",
            groups: HashMap::new(),
            writable: false,
            notes: Some("this is the Canon name for what could better be called MeasuredLV, and\n            should be close to the calculated LightValue for a proper exposure with most\n            models"),
            print_conv: PrintConvType::None,
            value_conv: Some("$val + 5"),
            subdirectory: None,
        }),
        (6167, TagKitDef {
            id: 6167,
            name: "FileNumber",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression(r"$_=$val;s/(\d+)(\d{4})/$1-$2/;$_"),
            value_conv: None,
            subdirectory: None,
        }),
        (6168, TagKitDef {
            id: 6168,
            name: "ExposureInfo",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x1818_subdirectory }),
        }),
        (6196, TagKitDef {
            id: 6196,
            name: "CanonModelID",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: Some("this is the complete list of model ID numbers, but note that many of these\n            models do not produce CRW images"),
            print_conv: PrintConvType::Simple(&PRINT_CONV_7),
            value_conv: None,
            subdirectory: None,
        }),
        (6197, TagKitDef {
            id: 6197,
            name: "DecoderTable",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x1835_subdirectory }),
        }),
        (6203, TagKitDef {
            id: 6203,
            name: "SerialNumberFormat",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_8),
            value_conv: None,
            subdirectory: None,
        }),
        (8197, TagKitDef {
            id: 8197,
            name: "RawData",
            format: "unknown",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (8199, TagKitDef {
            id: 8199,
            name: "JpgFromRaw",
            format: "resize",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (0, TagKitDef {
            id: 0,
            name: "Make",
            format: "string[6]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
    ]
}
