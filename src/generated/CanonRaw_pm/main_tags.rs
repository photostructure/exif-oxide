//! Generated tag table definitions from CanonRaw::Main
//!
//! This file is auto-generated by codegen/src/strategies/tag_kit.rs. Do not edit manually.

use crate::types::{PrintConv, TagInfo, ValueConv};
use std::collections::HashMap;
use std::sync::LazyLock;

// Generated imports for conversion functions
use crate::implementations::print_conv::{
    exposuretime_print_conv, fnumber_print_conv, gpsaltitude_print_conv, lensinfo_print_conv,
    print_fraction,
};
use crate::implementations::value_conv::{
    exif_date_value_conv, gps_coordinate_value_conv, gpstimestamp_value_conv,
    reciprocal_10_value_conv, reference_long_string_value_conv,
    reference_very_long_string_value_conv,
};

/// Tag definitions for CanonRaw::Main table
pub static CANON_RAW_MAIN_TAGS: LazyLock<HashMap<u16, TagInfo>> = LazyLock::new(|| {
    HashMap::from([
        (
            0,
            TagInfo {
                name: "NullRecord",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            1,
            TagInfo {
                name: "FreeBytes",
                format: "undef",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            50,
            TagInfo {
                name: "CanonColorInfo1",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            2058,
            TagInfo {
                name: "CanonRawMakeModel",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            2059,
            TagInfo {
                name: "CanonFirmwareVersion",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            2060,
            TagInfo {
                name: "ComponentVersion",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            2061,
            TagInfo {
                name: "ROMOperationMode",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            2064,
            TagInfo {
                name: "OwnerName",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            2069,
            TagInfo {
                name: "CanonImageType",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            2070,
            TagInfo {
                name: "OriginalFileName",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            2071,
            TagInfo {
                name: "ThumbnailFileName",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4106,
            TagInfo {
                name: "TargetImageType",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            4112,
            TagInfo {
                name: "ShutterReleaseMethod",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            4113,
            TagInfo {
                name: "ShutterReleaseTiming",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            4118,
            TagInfo {
                name: "ReleaseSetting",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4124,
            TagInfo {
                name: "BaseISO",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4136,
            TagInfo {
                name: "CanonFlashInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4137,
            TagInfo {
                name: "CanonFocalLength",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4138,
            TagInfo {
                name: "CanonShotInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4140,
            TagInfo {
                name: "CanonColorInfo2",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4141,
            TagInfo {
                name: "CanonCameraSettings",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4144,
            TagInfo {
                name: "WhiteSample",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4145,
            TagInfo {
                name: "SensorInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4152,
            TagInfo {
                name: "CanonAFInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4243,
            TagInfo {
                name: "CanonFileInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4265,
            TagInfo {
                name: "ColorBalance",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4270,
            TagInfo {
                name: "ColorTemperature",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            4276,
            TagInfo {
                name: "ColorSpace",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            4277,
            TagInfo {
                name: "RawJpgInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            6147,
            TagInfo {
                name: "ImageFormat",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            6148,
            TagInfo {
                name: "RecordID",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            6150,
            TagInfo {
                name: "SelfTimerTime",
                format: "unknown",
                print_conv: Some(PrintConv::Expression("\"$val s\"".to_string())),
                value_conv: Some(ValueConv::Expression("$val / 1000".to_string())),
            },
        ),
        (
            6151,
            TagInfo {
                name: "TargetDistanceSetting",
                format: "float",
                print_conv: Some(PrintConv::Expression("\"$val mm\"".to_string())),
                value_conv: None,
            },
        ),
        (
            6158,
            TagInfo {
                name: "TimeStamp",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            6160,
            TagInfo {
                name: "ImageInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            6163,
            TagInfo {
                name: "FlashInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            6164,
            TagInfo {
                name: "MeasuredEV",
                format: "float",
                print_conv: None,
                value_conv: Some(ValueConv::Expression("$val + 5".to_string())),
            },
        ),
        (
            6167,
            TagInfo {
                name: "FileNumber",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$_=$val;s/(\\d+)(\\d{4})/$1-$2/;$_".to_string(),
                )),
                value_conv: None,
            },
        ),
        (
            6168,
            TagInfo {
                name: "ExposureInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            6196,
            TagInfo {
                name: "CanonModelID",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            6197,
            TagInfo {
                name: "DecoderTable",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            6203,
            TagInfo {
                name: "SerialNumberFormat",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            8197,
            TagInfo {
                name: "RawData",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            8199,
            TagInfo {
                name: "JpgFromRaw",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            8200,
            TagInfo {
                name: "ThumbnailImage",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            10244,
            TagInfo {
                name: "ImageDescription",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            10247,
            TagInfo {
                name: "CameraObject",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            12290,
            TagInfo {
                name: "ShootingRecord",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            12291,
            TagInfo {
                name: "MeasuredInfo",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            12292,
            TagInfo {
                name: "CameraSpecification",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            12298,
            TagInfo {
                name: "ImageProps",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            12299,
            TagInfo {
                name: "ExifInformation",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
    ])
});

/// Apply ValueConv transformation for tags in this table
pub fn apply_value_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
) -> Result<crate::types::TagValue, String> {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = CANON_RAW_MAIN_TAGS.get(&tag_id_u16) {
        if let Some(ref value_conv) = tag_def.value_conv {
            match value_conv {
                ValueConv::None => Ok(value.clone()),
                ValueConv::Function(func) => func(value).map_err(|e| e.to_string()),
                ValueConv::Expression(expr) => {
                    // Use runtime expression evaluator for dynamic evaluation
                    let mut evaluator = crate::expressions::ExpressionEvaluator::new();
                    evaluator
                        .evaluate_expression(expr, value)
                        .map_err(|e| e.to_string())
                }
                _ => Ok(value.clone()),
            }
        } else {
            Ok(value.clone())
        }
    } else {
        Err(format!("Tag 0x{:04x} not found in table", tag_id))
    }
}

/// Apply PrintConv transformation for tags in this table
pub fn apply_print_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _evaluator: &mut crate::expressions::ExpressionEvaluator,
    _errors: &mut Vec<String>,
    _warnings: &mut Vec<String>,
) -> crate::types::TagValue {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = CANON_RAW_MAIN_TAGS.get(&tag_id_u16) {
        if let Some(ref print_conv) = tag_def.print_conv {
            match print_conv {
                PrintConv::None => value.clone(),
                PrintConv::Function(func) => func(value),
                PrintConv::Expression(expr) => {
                    // Use runtime expression evaluator for dynamic evaluation
                    _evaluator
                        .evaluate_expression(expr, value)
                        .unwrap_or_else(|_| value.clone())
                }
                _ => value.clone(),
            }
        } else {
            value.clone()
        }
    } else {
        value.clone()
    }
}
