//! Generated tag table definitions from SonyIDC::Main
//!
//! This file is auto-generated by codegen/src/strategies/tag_kit.rs. Do not edit manually.

use crate::types::{PrintConv, TagInfo, ValueConv};
use std::collections::HashMap;
use std::sync::LazyLock;

// Generated imports for conversion functions
use crate::implementations::print_conv::{
    exposuretime_print_conv, fnumber_print_conv, gpsaltitude_print_conv, lensinfo_print_conv,
    print_fraction,
};
use crate::implementations::value_conv::{
    exif_date_value_conv, gps_coordinate_value_conv, gpstimestamp_value_conv,
    reciprocal_10_value_conv, reference_long_string_value_conv,
    reference_very_long_string_value_conv,
};

/// Tag definitions for SonyIDC::Main table
pub static SONY_IDC_MAIN_TAGS: LazyLock<HashMap<u16, TagInfo>> = LazyLock::new(|| {
    HashMap::from([
        (
            513,
            TagInfo {
                name: "IDCPreviewStart",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            514,
            TagInfo {
                name: "IDCPreviewLength",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32768,
            TagInfo {
                name: "IDCCreativeStyle",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            32769,
            TagInfo {
                name: "CreativeStyleWasChanged",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            32770,
            TagInfo {
                name: "PresetWhiteBalance",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            32787,
            TagInfo {
                name: "ColorTemperatureAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32788,
            TagInfo {
                name: "PresetWhiteBalanceAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32789,
            TagInfo {
                name: "ColorCorrection",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32790,
            TagInfo {
                name: "SaturationAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32791,
            TagInfo {
                name: "ContrastAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32792,
            TagInfo {
                name: "BrightnessAdj",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "sprintf(\"%.2f\", $val/300)".to_string(),
                )),
                value_conv: None,
            },
        ),
        (
            32793,
            TagInfo {
                name: "HueAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32794,
            TagInfo {
                name: "SharpnessAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32795,
            TagInfo {
                name: "SharpnessOvershoot",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32796,
            TagInfo {
                name: "SharpnessUndershoot",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32797,
            TagInfo {
                name: "SharpnessThreshold",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32798,
            TagInfo {
                name: "NoiseReductionMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            32801,
            TagInfo {
                name: "GrayPoint",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32802,
            TagInfo {
                name: "D-RangeOptimizerMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            32803,
            TagInfo {
                name: "D-RangeOptimizerValue",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32804,
            TagInfo {
                name: "D-RangeOptimizerHighlight",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32806,
            TagInfo {
                name: "HighlightColorDistortReduct",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            32807,
            TagInfo {
                name: "NoiseReductionValue",
                format: "unknown",
                print_conv: None,
                value_conv: Some(ValueConv::Expression("($val + 100) / 2".to_string())),
            },
        ),
        (
            32808,
            TagInfo {
                name: "EdgeNoiseReduction",
                format: "unknown",
                print_conv: None,
                value_conv: Some(ValueConv::Expression("($val + 100) / 2".to_string())),
            },
        ),
        (
            32809,
            TagInfo {
                name: "ColorNoiseReduction",
                format: "unknown",
                print_conv: None,
                value_conv: Some(ValueConv::Expression("($val + 100) / 2".to_string())),
            },
        ),
        (
            32813,
            TagInfo {
                name: "D-RangeOptimizerShadow",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32816,
            TagInfo {
                name: "PeripheralIllumCentralRadius",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32817,
            TagInfo {
                name: "PeripheralIllumCentralValue",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32818,
            TagInfo {
                name: "PeripheralIllumPeriphValue",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            32832,
            TagInfo {
                name: "DistortionCompensation",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            36864,
            TagInfo {
                name: "ToneCurveBrightnessX",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36865,
            TagInfo {
                name: "ToneCurveRedX",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36866,
            TagInfo {
                name: "ToneCurveGreenX",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36867,
            TagInfo {
                name: "ToneCurveBlueX",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36868,
            TagInfo {
                name: "ToneCurveBrightnessY",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36869,
            TagInfo {
                name: "ToneCurveRedY",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36870,
            TagInfo {
                name: "ToneCurveGreenY",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36871,
            TagInfo {
                name: "ToneCurveBlueY",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36877,
            TagInfo {
                name: "ChromaticAberrationCorrection",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            36878,
            TagInfo {
                name: "InclinationCorrection",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            36879,
            TagInfo {
                name: "InclinationAngle",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "sprintf(\"%.1f deg\", $val/1000)".to_string(),
                )),
                value_conv: None,
            },
        ),
        (
            36880,
            TagInfo {
                name: "Cropping",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            36881,
            TagInfo {
                name: "CropArea",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36882,
            TagInfo {
                name: "PreviewImageSize",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36883,
            TagInfo {
                name: "PxShiftPeriphEdgeNR",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            36884,
            TagInfo {
                name: "PxShiftPeriphEdgeNRValue",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "sprintf(\"%.1f\", $val/10)".to_string(),
                )),
                value_conv: None,
            },
        ),
        (
            36887,
            TagInfo {
                name: "WhitesAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36888,
            TagInfo {
                name: "BlacksAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36889,
            TagInfo {
                name: "HighlightsAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            36890,
            TagInfo {
                name: "ShadowsAdj",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            53248,
            TagInfo {
                name: "CurrentVersion",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            53249,
            TagInfo {
                name: "VersionIFD",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            53504,
            TagInfo {
                name: "VersionCreateDate",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$self->ConvertDateTime($val)".to_string(),
                )),
                value_conv: None,
            },
        ),
        (
            53505,
            TagInfo {
                name: "VersionModifyDate",
                format: "unknown",
                print_conv: Some(PrintConv::Expression(
                    "$self->ConvertDateTime($val)".to_string(),
                )),
                value_conv: None,
            },
        ),
    ])
});

/// Apply ValueConv transformation for tags in this table
pub fn apply_value_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
) -> Result<crate::types::TagValue, String> {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = SONY_IDC_MAIN_TAGS.get(&tag_id_u16) {
        if let Some(ref value_conv) = tag_def.value_conv {
            match value_conv {
                ValueConv::None => Ok(value.clone()),
                ValueConv::Function(func) => func(value).map_err(|e| e.to_string()),
                ValueConv::Expression(expr) => {
                    // Use runtime expression evaluator for dynamic evaluation
                    let mut evaluator = crate::expressions::ExpressionEvaluator::new();
                    evaluator
                        .evaluate_expression(expr, value)
                        .map_err(|e| e.to_string())
                }
                _ => Ok(value.clone()),
            }
        } else {
            Ok(value.clone())
        }
    } else {
        Err(format!("Tag 0x{:04x} not found in table", tag_id))
    }
}

/// Apply PrintConv transformation for tags in this table
pub fn apply_print_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _evaluator: &mut crate::expressions::ExpressionEvaluator,
    _errors: &mut Vec<String>,
    _warnings: &mut Vec<String>,
) -> crate::types::TagValue {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = SONY_IDC_MAIN_TAGS.get(&tag_id_u16) {
        if let Some(ref print_conv) = tag_def.print_conv {
            match print_conv {
                PrintConv::None => value.clone(),
                PrintConv::Function(func) => func(value),
                PrintConv::Expression(expr) => {
                    // Use runtime expression evaluator for dynamic evaluation
                    _evaluator
                        .evaluate_expression(expr, value)
                        .unwrap_or_else(|_| value.clone())
                }
                _ => value.clone(),
            }
        } else {
            value.clone()
        }
    } else {
        value.clone()
    }
}
