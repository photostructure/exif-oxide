//! Generated lookup table for pentaxModelID from ExifTool's Pentax module
//!
//! This file is auto-generated by codegen/src/strategies/simple_table.rs. Do not edit manually.

use std::collections::HashMap;
use std::sync::LazyLock;

/// Raw data for pentaxModelID lookup table
static PENTAX_MODEL_ID_DATA: &[(u32, &'static str)] = &[
    (13, "Optio 330/430"),
    (76070, "Optio 230"),
    (76120, "Optio 330GS"),
    (76130, "Optio 450/550"),
    (76140, "Optio S"),
    (76145, "Optio S V1.01"),
    (76180, "*ist D"),
    (76210, "Optio 33L"),
    (76220, "Optio 33LF"),
    (76230, "Optio 33WR/43WR/555"),
    (76245, "Optio S4"),
    (76290, "Optio MX"),
    (76300, "Optio S40"),
    (76310, "Optio S4i"),
    (76340, "Optio 30"),
    (76370, "Optio S30"),
    (76390, "Optio 750Z"),
    (76400, "Optio SV"),
    (76405, "Optio SVi"),
    (76410, "Optio X"),
    (76430, "Optio S5i"),
    (76440, "Optio S50"),
    (76450, "*ist DS"),
    (76470, "Optio MX4"),
    (76480, "Optio S5n"),
    (76490, "Optio WP"),
    (76540, "Optio S55"),
    (76560, "Optio S5z"),
    (76570, "*ist DL"),
    (76580, "Optio S60"),
    (76590, "Optio S45"),
    (76600, "Optio S6"),
    (76620, "Optio WPi"),
    (76630, "BenQ DC X600"),
    (76640, "*ist DS2"),
    (76642, "Samsung GX-1S"),
    (76650, "Optio A10"),
    (76670, "*ist DL2"),
    (76672, "Samsung GX-1L"),
    (76700, "K100D"),
    (76701, "K110D"),
    (76706, "K100D Super"),
    (76720, "Optio T10/T20"),
    (76770, "Optio W10"),
    (76790, "Optio M10"),
    (76830, "K10D"),
    (76832, "Samsung GX10"),
    (76840, "Optio S7"),
    (76845, "Optio L20"),
    (76850, "Optio M20"),
    (76860, "Optio W20"),
    (76870, "Optio A20"),
    (76920, "Optio E30"),
    (76925, "Optio E35"),
    (76930, "Optio T30"),
    (76940, "Optio M30"),
    (76945, "Optio L30"),
    (76950, "Optio W30"),
    (76960, "Optio A30"),
    (76980, "Optio E40"),
    (76990, "Optio M40"),
    (76995, "Optio L40"),
    (76997, "Optio L36"),
    (77000, "Optio Z10"),
    (77010, "K20D"),
    (77012, "Samsung GX20"),
    (77020, "Optio S10"),
    (77030, "Optio A40"),
    (77040, "Optio V10"),
    (77050, "K200D"),
    (77060, "Optio S12"),
    (77070, "Optio E50"),
    (77080, "Optio M50"),
    (77090, "Optio L50"),
    (77100, "Optio V20"),
    (77120, "Optio W60"),
    (77130, "Optio M60"),
    (77160, "Optio E60/M90"),
    (77170, "K2000"),
    (77171, "K-m"),
    (77190, "Optio P70"),
    (77200, "Optio L70"),
    (77210, "Optio E70"),
    (77230, "X70"),
    (77240, "K-7"),
    (77260, "Optio W80"),
    (77290, "Optio P80"),
    (77300, "Optio WS80"),
    (77310, "K-x"),
    (77320, "645D"),
    (77330, "Optio E80"),
    (77360, "Optio W90"),
    (77370, "Optio I-10"),
    (77380, "Optio H90"),
    (77390, "Optio E90"),
    (77400, "X90"),
    (77420, "K-r"),
    (77430, "K-5"),
    (77450, "Optio RS1000/RS1500"),
    (77460, "Optio RZ10"),
    (77470, "Optio LS1000"),
    (77500, "Optio WG-1 GPS"),
    (77520, "Optio S1"),
    (77540, "Q"),
    (77560, "K-01"),
    (77580, "Optio RZ18"),
    (77590, "Optio VS20"),
    (77610, "Optio WG-2 GPS"),
    (77640, "Optio LS465"),
    (77650, "K-30"),
    (77660, "X-5"),
    (77670, "Q10"),
    (77680, "K-5 II"),
    (77681, "K-5 II s"),
    (77690, "Q7"),
    (77700, "MX-1"),
    (77710, "WG-3 GPS"),
    (77720, "WG-3"),
    (77730, "WG-10"),
    (77750, "K-50"),
    (77760, "K-3"),
    (77770, "K-500"),
    (77790, "WG-4 GPS"),
    (77800, "WG-4"),
    (77830, "WG-20"),
    (77840, "645Z"),
    (77850, "K-S1"),
    (77860, "K-S2"),
    (77870, "Q-S1"),
    (77910, "WG-30"),
    (77950, "WG-30W"),
    (77960, "WG-5 GPS"),
    (77970, "K-1"),
    (77980, "K-3 II"),
    (78320, "WG-M2"),
    (78350, "GR III"),
    (78370, "K-70"),
    (78380, "KP"),
    (78400, "K-1 Mark II"),
    (78420, "K-3 Mark III"),
    (78480, "WG-70"),
    (78490, "GR IIIx"),
    (78520, "KF"),
    (78550, "K-3 Mark III Monochrome"),
];

/// pentaxModelID lookup table
pub static PENTAX_MODEL_ID: LazyLock<HashMap<u32, &'static str>> =
    LazyLock::new(|| PENTAX_MODEL_ID_DATA.iter().copied().collect());

/// Look up pentaxModelID value by key
pub fn lookup_pentax_model_id(key: u32) -> Option<&'static str> {
    PENTAX_MODEL_ID.get(&key).copied()
}
