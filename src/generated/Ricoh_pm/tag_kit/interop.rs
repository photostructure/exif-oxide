//! Tag kits for interop category from Ricoh.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_0: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("2".to_string(), "JPEG");
    map.insert("3".to_string(), "DNG");
    map
});

static PRINT_CONV_1: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Auto");
    map.insert("2".to_string(), "Program AE");
    map.insert("3".to_string(), "Aperture-priority AE");
    map.insert("4".to_string(), "Shutter speed priority AE");
    map.insert("5".to_string(), "Shutter/aperture priority AE");
    map.insert("6".to_string(), "Manual");
    map.insert("7".to_string(), "Movie");
    map
});

static PRINT_CONV_2: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Single-frame");
    map.insert("1".to_string(), "Continuous");
    map.insert("8".to_string(), "AF-priority Continuous");
    map
});

static PRINT_CONV_3: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Sharp");
    map.insert("1".to_string(), "Normal");
    map.insert("2".to_string(), "Soft");
    map
});

static PRINT_CONV_4: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Auto");
    map.insert("1".to_string(), "Multi-P Auto");
    map.insert("10".to_string(), "Manual");
    map.insert("11".to_string(), "Kelvin");
    map.insert("12".to_string(), "Shade");
    map.insert("2".to_string(), "Daylight");
    map.insert("3".to_string(), "Cloudy");
    map.insert("4".to_string(), "Incandescent 1");
    map.insert("5".to_string(), "Incandescent 2");
    map.insert("6".to_string(), "Daylight Fluorescent");
    map.insert("7".to_string(), "Neutral White Fluorescent");
    map.insert("8".to_string(), "Cool White Fluorescent");
    map.insert("9".to_string(), "Warm White Fluorescent");
    map
});

static PRINT_CONV_5: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Manual");
    map.insert("10".to_string(), "Movie");
    map.insert("2".to_string(), "Multi AF");
    map.insert("3".to_string(), "Spot AF");
    map.insert("4".to_string(), "Snap");
    map.insert("5".to_string(), "Infinity");
    map.insert("7".to_string(), "Face Detect");
    map.insert("8".to_string(), "Subject Tracking");
    map.insert("9".to_string(), "Pinpoint AF");
    map
});

static PRINT_CONV_6: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("11".to_string(), "WB");
    map.insert("16".to_string(), "DR");
    map.insert("17".to_string(), "Contrast");
    map.insert("18".to_string(), "WB2");
    map.insert("19".to_string(), "Effect");
    map.insert("9".to_string(), "AE");
    map
});

static PRINT_CONV_7: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "On");
    map
});

static PRINT_CONV_8: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "Auto, Fired");
    map.insert("2".to_string(), "On");
    map.insert("3".to_string(), "Auto, Fired, Red-eye reduction");
    map.insert("4".to_string(), "Slow Sync");
    map.insert("5".to_string(), "Manual");
    map.insert("6".to_string(), "On, Red-eye reduction");
    map.insert("7".to_string(), "Synchro, Red-eye reduction");
    map.insert("8".to_string(), "Auto, Did not fire");
    map
});

static PRINT_CONV_9: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("-120".to_string(), "1/5.6");
    map.insert("-144".to_string(), "1/8");
    map.insert("-168".to_string(), "1/11");
    map.insert("-192".to_string(), "1/16");
    map.insert("-216".to_string(), "1/22");
    map.insert("-24".to_string(), "1/1.4");
    map.insert("-240".to_string(), "1/32");
    map.insert("-288".to_string(), "1/64");
    map.insert("-48".to_string(), "1/2");
    map.insert("-72".to_string(), "1/2.8");
    map.insert("-96".to_string(), "1/4");
    map.insert("0".to_string(), "Full");
    map
});

static PRINT_CONV_10: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "On");
    map
});

static PRINT_CONV_11: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("3".to_string(), "Weak");
    map.insert("4".to_string(), "Medium");
    map.insert("5".to_string(), "Strong");
    map
});

static PRINT_CONV_12: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "Weak");
    map.insert("2".to_string(), "Medium");
    map.insert("3".to_string(), "Strong");
    map
});

static PRINT_CONV_13: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Standard");
    map.insert("1".to_string(), "Vivid");
    map.insert("10".to_string(), "Cross Process");
    map.insert("11".to_string(), "Positive Film");
    map.insert("12".to_string(), "Bleach Bypass");
    map.insert("13".to_string(), "Retro");
    map.insert("15".to_string(), "Miniature");
    map.insert("17".to_string(), "High Key");
    map.insert("3".to_string(), "Black & White");
    map.insert("5".to_string(), "B&W Toning Effect");
    map.insert("6".to_string(), "Setting 1");
    map.insert("7".to_string(), "Setting 2");
    map.insert("9".to_string(), "High-contrast B&W");
    map
});

static PRINT_CONV_14: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "Low");
    map.insert("2".to_string(), "Medium");
    map.insert("3".to_string(), "High");
    map
});

static PRINT_CONV_15: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "Sepia");
    map.insert("2".to_string(), "Red");
    map.insert("3".to_string(), "Green");
    map.insert("4".to_string(), "Blue");
    map.insert("5".to_string(), "Purple");
    map.insert("6".to_string(), "B&W");
    map.insert("7".to_string(), "Color");
    map
});

static PRINT_CONV_16: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "Basic");
    map.insert("2".to_string(), "Magenta");
    map.insert("3".to_string(), "Yellow");
    map.insert("4".to_string(), "Normal");
    map.insert("5".to_string(), "Warm");
    map.insert("6".to_string(), "Cool");
    map
});

static PRINT_CONV_17: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Not Attached");
    map.insert("2".to_string(), "Attached");
    map
});

static PRINT_CONV_18: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "On (35mm)");
    map.insert("2".to_string(), "On (47mm)");
    map
});

static PRINT_CONV_19: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "On");
    map
});

static PRINT_CONV_20: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Out of Focus");
    map.insert("1".to_string(), "In Focus");
    map
});

static PRINT_CONV_21: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Auto");
    map.insert("2".to_string(), "Manual");
    map
});

/// Get tag definitions for interop category
pub fn get_interop_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (2, TagKitDef {
            id: 2,
            name: "RicohImageHeight",
            format: "int16u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (1, TagKitDef {
            id: 1,
            name: "MakerNoteType",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (2, TagKitDef {
            id: 2,
            name: "FirmwareVersion",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression(r#"$val=~/^Rev(\d+)$/ ? sprintf("%.2f",$1/100) : $val"#),
            value_conv: None,
            subdirectory: None,
        }),
        (4096, TagKitDef {
            id: 4096,
            name: "RecordingFormat",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_0),
            value_conv: None,
            subdirectory: None,
        }),
        (4097, TagKitDef {
            id: 4097,
            name: "ImageInfo",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x1001_subdirectory }),
        }),
        (4097, TagKitDef {
            id: 4097,
            name: "ExposureProgram",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: Some("GR"),
            print_conv: PrintConvType::Simple(&PRINT_CONV_1),
            value_conv: None,
            subdirectory: None,
        }),
        (4098, TagKitDef {
            id: 4098,
            name: "DriveMode",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: Some("valid only for some models"),
            print_conv: PrintConvType::Simple(&PRINT_CONV_2),
            value_conv: None,
            subdirectory: None,
        }),
        (4099, TagKitDef {
            id: 4099,
            name: "Sharpness",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_3),
            value_conv: None,
            subdirectory: None,
        }),
        (4099, TagKitDef {
            id: 4099,
            name: "WhiteBalance",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: Some("GR"),
            print_conv: PrintConvType::Simple(&PRINT_CONV_4),
            value_conv: None,
            subdirectory: None,
        }),
        (4100, TagKitDef {
            id: 4100,
            name: "WhiteBalanceFineTune",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: Some("2 numbers: amount of adjustment towards Amber and Green.  Not valid for all\n            models"),
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4102, TagKitDef {
            id: 4102,
            name: "FocusMode",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_5),
            value_conv: None,
            subdirectory: None,
        }),
        (4103, TagKitDef {
            id: 4103,
            name: "AutoBracketing",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_6),
            value_conv: None,
            subdirectory: None,
        }),
        (4105, TagKitDef {
            id: 4105,
            name: "MacroMode",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_7),
            value_conv: None,
            subdirectory: None,
        }),
        (4106, TagKitDef {
            id: 4106,
            name: "FlashMode",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_8),
            value_conv: None,
            subdirectory: None,
        }),
        (4107, TagKitDef {
            id: 4107,
            name: "FlashExposureComp",
            format: "rational64s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression("$val ? sprintf(\"%+.1f\",$val) : 0"),
            value_conv: None,
            subdirectory: None,
        }),
        (4108, TagKitDef {
            id: 4108,
            name: "ManualFlashOutput",
            format: "rational64s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_9),
            value_conv: None,
            subdirectory: None,
        }),
        (4109, TagKitDef {
            id: 4109,
            name: "FullPressSnap",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_10),
            value_conv: None,
            subdirectory: None,
        }),
        (4110, TagKitDef {
            id: 4110,
            name: "DynamicRangeExpansion",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_11),
            value_conv: None,
            subdirectory: None,
        }),
        (4111, TagKitDef {
            id: 4111,
            name: "NoiseReduction",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_12),
            value_conv: None,
            subdirectory: None,
        }),
        (4112, TagKitDef {
            id: 4112,
            name: "ImageEffects",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_13),
            value_conv: None,
            subdirectory: None,
        }),
        (4113, TagKitDef {
            id: 4113,
            name: "Vignetting",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_14),
            value_conv: None,
            subdirectory: None,
        }),
        (4114, TagKitDef {
            id: 4114,
            name: "Contrast",
            format: "int32s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression("ComplexHash"),
            value_conv: None,
            subdirectory: None,
        }),
        (4115, TagKitDef {
            id: 4115,
            name: "Saturation",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4116, TagKitDef {
            id: 4116,
            name: "Sharpness",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4117, TagKitDef {
            id: 4117,
            name: "ToningEffect",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_15),
            value_conv: None,
            subdirectory: None,
        }),
        (4118, TagKitDef {
            id: 4118,
            name: "HueAdjust",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_16),
            value_conv: None,
            subdirectory: None,
        }),
        (4119, TagKitDef {
            id: 4119,
            name: "WideAdapter",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_17),
            value_conv: None,
            subdirectory: None,
        }),
        (4120, TagKitDef {
            id: 4120,
            name: "CropMode",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_18),
            value_conv: None,
            subdirectory: None,
        }),
        (4121, TagKitDef {
            id: 4121,
            name: "NDFilter",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_19),
            value_conv: None,
            subdirectory: None,
        }),
        (4122, TagKitDef {
            id: 4122,
            name: "WBBracketShotNumber",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4608, TagKitDef {
            id: 4608,
            name: "AFStatus",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_20),
            value_conv: None,
            subdirectory: None,
        }),
        (4609, TagKitDef {
            id: 4609,
            name: "AFAreaXPosition1",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: Some("manual AF area position in a 1280x864 image"),
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4610, TagKitDef {
            id: 4610,
            name: "AFAreaYPosition1",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4611, TagKitDef {
            id: 4611,
            name: "AFAreaXPosition",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: Some("manual AF area position in the full image"),
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4612, TagKitDef {
            id: 4612,
            name: "AFAreaYPosition",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4613, TagKitDef {
            id: 4613,
            name: "AFAreaMode",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_21),
            value_conv: None,
            subdirectory: None,
        }),
        (4871, TagKitDef {
            id: 4871,
            name: "ColorTempKelvin",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4872, TagKitDef {
            id: 4872,
            name: "ColorTemperature",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (5, TagKitDef {
            id: 5,
            name: "SerialNumber",
            format: "undef",
            groups: HashMap::new(),
            writable: true,
            notes: Some("the serial number stamped on the camera begins with 2 model-specific letters\n                followed by the last 8 digits of this value.  For the GXR, this is the\n                serial number of the lens unit"),
            print_conv: PrintConvType::Expression(r"$val=~s/^(.*)(.{8})$/($1)$2/; $val"),
            value_conv: None,
            subdirectory: None,
        }),
        (5, TagKitDef {
            id: 5,
            name: "InternalSerialNumber",
            format: "undef",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: Some("unpack(\"H*\", $val)"),
            subdirectory: None,
        }),
        (3, TagKitDef {
            id: 3,
            name: "Accelerometer",
            format: "rational64s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4, TagKitDef {
            id: 4,
            name: "Compass",
            format: "rational64u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
    ]
}
