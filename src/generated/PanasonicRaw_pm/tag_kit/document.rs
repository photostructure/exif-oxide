//! Tag kits for document category from PanasonicRaw.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_3: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("65536".to_string(), "Pixel Shift");
    map
});

/// Get tag definitions for document category
pub fn get_document_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (
            288,
            TagKitDef {
                id: 288,
                name: "CameraIFD",
                format: "unknown",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: Some(SubDirectoryType::Binary {
                    processor: process_tag_0x120_subdirectory,
                }),
            },
        ),
        (
            289,
            TagKitDef {
                id: 289,
                name: "Multishot",
                format: "int32u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_3),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            295,
            TagKitDef {
                id: 295,
                name: "JpgFromRaw2",
                format: "unknown",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
    ]
}
