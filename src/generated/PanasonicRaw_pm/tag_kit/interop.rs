//! Tag kits for interop category from PanasonicRaw.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_0: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "n/a");
    map.insert("1".to_string(), "[Red,Green][Green,Blue]");
    map.insert("2".to_string(), "[Green,Red][Blue,Green]");
    map.insert("3".to_string(), "[Green,Blue][Red,Green]");
    map.insert("4".to_string(), "[Blue,Green][Green,Red]");
    map
});

/// Get tag definitions for interop category
pub fn get_interop_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (
            1,
            TagKitDef {
                id: 1,
                name: "PanasonicRawVersion",
                format: "undef",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            10,
            TagKitDef {
                id: 10,
                name: "BitsPerSample",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            8,
            TagKitDef {
                id: 8,
                name: "SamplesPerPixel",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            9,
            TagKitDef {
                id: 9,
                name: "CFAPattern",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_0),
                value_conv: None,
                subdirectory: None,
            },
        ),
    ]
}
