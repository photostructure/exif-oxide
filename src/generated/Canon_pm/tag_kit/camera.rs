//! Tag kits for camera category from Canon.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_0: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("129".to_string(), "Standard");
    map.insert("130".to_string(), "Portrait");
    map.insert("131".to_string(), "Landscape");
    map.insert("132".to_string(), "Neutral");
    map.insert("133".to_string(), "Faithful");
    map.insert("134".to_string(), "Monochrome");
    map.insert("135".to_string(), "Auto");
    map.insert("65".to_string(), "PC 1");
    map.insert("66".to_string(), "PC 2");
    map.insert("67".to_string(), "PC 3");
    map
});

static PRINT_CONV_1: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Auto");
    map.insert("1".to_string(), "Daylight");
    map.insert("10".to_string(), "PC Set1");
    map.insert("11".to_string(), "PC Set2");
    map.insert("12".to_string(), "PC Set3");
    map.insert("14".to_string(), "Daylight Fluorescent");
    map.insert("15".to_string(), "Custom 1");
    map.insert("16".to_string(), "Custom 2");
    map.insert("17".to_string(), "Underwater");
    map.insert("18".to_string(), "Custom 3");
    map.insert("19".to_string(), "Custom 4");
    map.insert("2".to_string(), "Cloudy");
    map.insert("20".to_string(), "PC Set4");
    map.insert("21".to_string(), "PC Set5");
    map.insert("23".to_string(), "Auto (ambience priority)");
    map.insert("3".to_string(), "Tungsten");
    map.insert("4".to_string(), "Fluorescent");
    map.insert("5".to_string(), "Flash");
    map.insert("6".to_string(), "Custom");
    map.insert("7".to_string(), "Black & White");
    map.insert("8".to_string(), "Shade");
    map.insert("9".to_string(), "Manual Temperature (Kelvin)");
    map
});

/// Get tag definitions for camera category
pub fn get_camera_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (
            271,
            TagKitDef {
                id: 271,
                name: "OwnerName",
                format: "string[32]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            272,
            TagKitDef {
                id: 272,
                name: "UserDef3PictureStyle",
                format: "int16u",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_0),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            305,
            TagKitDef {
                id: 305,
                name: "WhiteBalance",
                format: "int16u",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_1),
                value_conv: None,
                subdirectory: None,
            },
        ),
    ]
}
