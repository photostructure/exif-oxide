//! Generated tag table definitions from Canon::ColorData2
//!
//! This file is auto-generated by codegen/src/strategies/tag_kit.rs. Do not edit manually.

use crate::types::{PrintConv, TagInfo, ValueConv};
use std::collections::HashMap;
use std::sync::LazyLock;

/// Tag definitions for Canon::ColorData2 table
pub static CANON_COLORDATA2_TAGS: LazyLock<HashMap<u16, TagInfo>> = LazyLock::new(|| {
    HashMap::from([
        (
            24,
            TagInfo {
                name: "WB_RGGBLevelsAuto",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            29,
            TagInfo {
                name: "WB_RGGBLevelsUnknown",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            33,
            TagInfo {
                name: "ColorTempUnknown",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            34,
            TagInfo {
                name: "WB_RGGBLevelsAsShot",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            39,
            TagInfo {
                name: "WB_RGGBLevelsDaylight",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            44,
            TagInfo {
                name: "WB_RGGBLevelsShade",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            49,
            TagInfo {
                name: "WB_RGGBLevelsCloudy",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            54,
            TagInfo {
                name: "WB_RGGBLevelsTungsten",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            59,
            TagInfo {
                name: "WB_RGGBLevelsFluorescent",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            64,
            TagInfo {
                name: "WB_RGGBLevelsKelvin",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            69,
            TagInfo {
                name: "WB_RGGBLevelsFlash",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            74,
            TagInfo {
                name: "WB_RGGBLevelsUnknown2",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            78,
            TagInfo {
                name: "ColorTempUnknown2",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            79,
            TagInfo {
                name: "WB_RGGBLevelsUnknown3",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            83,
            TagInfo {
                name: "ColorTempUnknown3",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            84,
            TagInfo {
                name: "WB_RGGBLevelsUnknown4",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            88,
            TagInfo {
                name: "ColorTempUnknown4",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            89,
            TagInfo {
                name: "WB_RGGBLevelsUnknown5",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            93,
            TagInfo {
                name: "ColorTempUnknown5",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            94,
            TagInfo {
                name: "WB_RGGBLevelsUnknown6",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            98,
            TagInfo {
                name: "ColorTempUnknown6",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            99,
            TagInfo {
                name: "WB_RGGBLevelsUnknown7",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            103,
            TagInfo {
                name: "ColorTempUnknown7",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            104,
            TagInfo {
                name: "WB_RGGBLevelsUnknown8",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            108,
            TagInfo {
                name: "ColorTempUnknown8",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            109,
            TagInfo {
                name: "WB_RGGBLevelsUnknown9",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            113,
            TagInfo {
                name: "ColorTempUnknown9",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            114,
            TagInfo {
                name: "WB_RGGBLevelsUnknown10",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            118,
            TagInfo {
                name: "ColorTempUnknown10",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            119,
            TagInfo {
                name: "WB_RGGBLevelsUnknown11",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            123,
            TagInfo {
                name: "ColorTempUnknown11",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            124,
            TagInfo {
                name: "WB_RGGBLevelsUnknown12",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            128,
            TagInfo {
                name: "ColorTempUnknown12",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            129,
            TagInfo {
                name: "WB_RGGBLevelsUnknown13",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            133,
            TagInfo {
                name: "ColorTempUnknown13",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            134,
            TagInfo {
                name: "WB_RGGBLevelsUnknown14",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            138,
            TagInfo {
                name: "ColorTempUnknown14",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            139,
            TagInfo {
                name: "WB_RGGBLevelsUnknown15",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            143,
            TagInfo {
                name: "ColorTempUnknown15",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            144,
            TagInfo {
                name: "WB_RGGBLevelsPC1",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            149,
            TagInfo {
                name: "WB_RGGBLevelsPC2",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            154,
            TagInfo {
                name: "WB_RGGBLevelsPC3",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            159,
            TagInfo {
                name: "WB_RGGBLevelsUnknown16",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            163,
            TagInfo {
                name: "ColorTempUnknown16",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            164,
            TagInfo {
                name: "ColorCalib",
                format: "undef[120]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            618,
            TagInfo {
                name: "RawMeasuredRGGB",
                format: "int32u[4]",
                print_conv: None,
                value_conv: Some(ValueConv::Expression(
                    "[Function: Image::ExifTool::Canon::SwapWords]".to_string(),
                )),
            },
        ),
    ])
});

/// Apply ValueConv transformation for tags in this table
pub fn apply_value_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
) -> Result<crate::types::TagValue, crate::types::ExifError> {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = CANON_COLORDATA2_TAGS.get(&tag_id_u16) {
        if let Some(ref value_conv) = tag_def.value_conv {
            match value_conv {
                ValueConv::None => Ok(value.clone()),
                ValueConv::Function(func) => func(value),
                ValueConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    Err(crate::types::ExifError::NotImplemented("Runtime expression evaluation not supported - should be handled by PPI at build time".to_string()))
                }
                _ => Ok(value.clone()),
            }
        } else {
            Ok(value.clone())
        }
    } else {
        Err(crate::types::ExifError::ParseError(format!(
            "Tag 0x{:04x} not found in table",
            tag_id
        )))
    }
}

/// Apply PrintConv transformation for tags in this table
pub fn apply_print_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
    _warnings: &mut Vec<String>,
) -> crate::types::TagValue {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = CANON_COLORDATA2_TAGS.get(&tag_id_u16) {
        if let Some(ref print_conv) = tag_def.print_conv {
            match print_conv {
                PrintConv::None => value.clone(),
                PrintConv::Function(func) => func(value),
                PrintConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    value.clone() // Fallback to original value when expression not handled by PPI
                }
                _ => value.clone(),
            }
        } else {
            value.clone()
        }
    } else {
        value.clone()
    }
}
