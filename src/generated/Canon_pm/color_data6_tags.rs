//! Generated tag table definitions from Canon::ColorData6
//!
//! This file is auto-generated by codegen/src/strategies/tag_kit.rs. Do not edit manually.

use crate::types::{PrintConv, TagInfo, ValueConv};
use std::collections::HashMap;
use std::sync::LazyLock;

/// Tag definitions for Canon::ColorData6 table
pub static CANON_COLORDATA6_TAGS: LazyLock<HashMap<u16, TagInfo>> = LazyLock::new(|| {
    HashMap::from([
        (
            0,
            TagInfo {
                name: "ColorDataVersion",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            63,
            TagInfo {
                name: "WB_RGGBLevelsAsShot",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            68,
            TagInfo {
                name: "WB_RGGBLevelsAuto",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            73,
            TagInfo {
                name: "WB_RGGBLevelsMeasured",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            78,
            TagInfo {
                name: "WB_RGGBLevelsUnknown",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            82,
            TagInfo {
                name: "ColorTempUnknown",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            83,
            TagInfo {
                name: "WB_RGGBLevelsUnknown2",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            87,
            TagInfo {
                name: "ColorTempUnknown2",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            88,
            TagInfo {
                name: "WB_RGGBLevelsUnknown3",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            92,
            TagInfo {
                name: "ColorTempUnknown3",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            93,
            TagInfo {
                name: "WB_RGGBLevelsUnknown4",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            97,
            TagInfo {
                name: "ColorTempUnknown4",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            98,
            TagInfo {
                name: "WB_RGGBLevelsUnknown5",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            102,
            TagInfo {
                name: "ColorTempUnknown5",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            103,
            TagInfo {
                name: "WB_RGGBLevelsDaylight",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            108,
            TagInfo {
                name: "WB_RGGBLevelsShade",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            113,
            TagInfo {
                name: "WB_RGGBLevelsCloudy",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            118,
            TagInfo {
                name: "WB_RGGBLevelsTungsten",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            123,
            TagInfo {
                name: "WB_RGGBLevelsFluorescent",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            128,
            TagInfo {
                name: "WB_RGGBLevelsKelvin",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            133,
            TagInfo {
                name: "WB_RGGBLevelsFlash",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            138,
            TagInfo {
                name: "WB_RGGBLevelsUnknown6",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            142,
            TagInfo {
                name: "ColorTempUnknown6",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            143,
            TagInfo {
                name: "WB_RGGBLevelsUnknown7",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            147,
            TagInfo {
                name: "ColorTempUnknown7",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            148,
            TagInfo {
                name: "WB_RGGBLevelsUnknown8",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            152,
            TagInfo {
                name: "ColorTempUnknown8",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            153,
            TagInfo {
                name: "WB_RGGBLevelsUnknown9",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            157,
            TagInfo {
                name: "ColorTempUnknown9",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            158,
            TagInfo {
                name: "WB_RGGBLevelsUnknown10",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            162,
            TagInfo {
                name: "ColorTempUnknown10",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            163,
            TagInfo {
                name: "WB_RGGBLevelsUnknown11",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            167,
            TagInfo {
                name: "ColorTempUnknown11",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            168,
            TagInfo {
                name: "WB_RGGBLevelsUnknown12",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            172,
            TagInfo {
                name: "ColorTempUnknown12",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            173,
            TagInfo {
                name: "WB_RGGBLevelsUnknown13",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            177,
            TagInfo {
                name: "ColorTempUnknown13",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            178,
            TagInfo {
                name: "WB_RGGBLevelsUnknown14",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            182,
            TagInfo {
                name: "ColorTempUnknown14",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            183,
            TagInfo {
                name: "WB_RGGBLevelsUnknown15",
                format: "int16s[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            187,
            TagInfo {
                name: "ColorTempUnknown15",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            188,
            TagInfo {
                name: "ColorCalib",
                format: "undef[120]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            251,
            TagInfo {
                name: "AverageBlackLevel",
                format: "int16u[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            404,
            TagInfo {
                name: "RawMeasuredRGGB",
                format: "int32u[4]",
                print_conv: None,
                value_conv: Some(ValueConv::Expression(
                    "[Function: Image::ExifTool::Canon::SwapWords]".to_string(),
                )),
            },
        ),
        (
            479,
            TagInfo {
                name: "PerChannelBlackLevel",
                format: "int16u[4]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            483,
            TagInfo {
                name: "NormalWhiteLevel",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            484,
            TagInfo {
                name: "SpecularWhiteLevel",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            485,
            TagInfo {
                name: "LinearityUpperMargin",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
    ])
});

/// Apply ValueConv transformation for tags in this table
pub fn apply_value_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
) -> Result<crate::types::TagValue, crate::types::ExifError> {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = CANON_COLORDATA6_TAGS.get(&tag_id_u16) {
        if let Some(ref value_conv) = tag_def.value_conv {
            match value_conv {
                ValueConv::None => Ok(value.clone()),
                ValueConv::Function(func) => func(value, None),
                ValueConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    Err(crate::types::ExifError::NotImplemented("Runtime expression evaluation not supported - should be handled by PPI at build time".to_string()))
                }
                _ => Ok(value.clone()),
            }
        } else {
            Ok(value.clone())
        }
    } else {
        Err(crate::types::ExifError::ParseError(format!(
            "Tag 0x{:04x} not found in table",
            tag_id
        )))
    }
}

/// Apply PrintConv transformation for tags in this table
pub fn apply_print_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
    _warnings: &mut Vec<String>,
) -> crate::types::TagValue {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = CANON_COLORDATA6_TAGS.get(&tag_id_u16) {
        if let Some(ref print_conv) = tag_def.print_conv {
            match print_conv {
                PrintConv::None => value.clone(),
                PrintConv::Function(func) => func(value, None),
                PrintConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    value.clone() // Fallback to original value when expression not handled by PPI
                }
                _ => value.clone(),
            }
        } else {
            value.clone()
        }
    } else {
        value.clone()
    }
}
