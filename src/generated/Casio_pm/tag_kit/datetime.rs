//! Tag kits for datetime category from Casio.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

/// Get tag definitions for datetime category
pub fn get_datetime_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (21, TagKitDef {
            id: 21,
            name: "FirmwareDate",
            format: "undef",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression("\n            $_ = $val;\n            if (/^(\\d{2})(\\d{2})\\0\\0(\\d{2})(\\d{2})\\0\\0(\\d{2})(.{2})\\0{2}$/) {\n                my $yr = $1 + ($1 < 70 ? 2000 : 1900);\n                my $sec = $6;\n                $val = \"$yr:$2:$3 $4:$5\";\n                $val .= \":$sec\" if $sec=~/^\\d{2}$/;\n                return $val;\n            }\n            tr/\\0/./;  s/\\.+$//;\n            return \"Unknown ($_)\";\n        "),
            value_conv: None,
            subdirectory: None,
        }),
    ]
}
