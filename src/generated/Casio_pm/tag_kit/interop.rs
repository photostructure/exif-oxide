//! Tag kits for interop category from Casio.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_0: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Horizontal (normal)");
    map.insert("1".to_string(), "Rotate 90 CW");
    map.insert("2".to_string(), "Rotate 270 CW");
    map.insert("3".to_string(), "Rotate 180");
    map
});

static PRINT_CONV_1: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Single Shutter");
    map.insert("10".to_string(), "Night Scene");
    map.insert("15".to_string(), "Portrait");
    map.insert("16".to_string(), "Landscape");
    map.insert("2".to_string(), "Panorama");
    map.insert("3".to_string(), "Night Scene");
    map.insert("4".to_string(), "Portrait");
    map.insert("5".to_string(), "Landscape");
    map.insert("7".to_string(), "Panorama");
    map
});

static PRINT_CONV_2: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("104857".to_string(), "1.6x");
    map.insert("131072".to_string(), "2x");
    map.insert("209715".to_string(), "3.2x");
    map.insert("262144".to_string(), "4x");
    map.insert("65536".to_string(), "Off");
    map.insert("65537".to_string(), "2x");
    map
});

static PRINT_CONV_3: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Economy");
    map.insert("2".to_string(), "Normal");
    map.insert("3".to_string(), "Fine");
    map
});

static PRINT_CONV_4: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("2".to_string(), "Macro");
    map.insert("3".to_string(), "Auto");
    map.insert("4".to_string(), "Manual");
    map.insert("5".to_string(), "Infinity");
    map.insert("7".to_string(), "Spot AF");
    map
});

static PRINT_CONV_5: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Auto");
    map.insert("2".to_string(), "On");
    map.insert("3".to_string(), "Off");
    map.insert("4".to_string(), "Off");
    map.insert("5".to_string(), "Red-eye Reduction");
    map
});

static PRINT_CONV_6: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Auto");
    map.insert("2".to_string(), "On");
    map.insert("3".to_string(), "Off");
    map.insert("4".to_string(), "Red-eye Reduction");
    map
});

static PRINT_CONV_7: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("11".to_string(), "Weak");
    map.insert("12".to_string(), "Low");
    map.insert("13".to_string(), "Normal");
    map.insert("14".to_string(), "High");
    map.insert("15".to_string(), "Strong");
    map
});

static PRINT_CONV_8: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Auto");
    map.insert("129".to_string(), "Manual");
    map.insert("2".to_string(), "Tungsten");
    map.insert("3".to_string(), "Daylight");
    map.insert("4".to_string(), "Fluorescent");
    map.insert("5".to_string(), "Shade");
    map
});

static PRINT_CONV_9: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Economy");
    map.insert("1".to_string(), "Normal");
    map.insert("2".to_string(), "Fine");
    map
});

static PRINT_CONV_10: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "640x480");
    map.insert("20".to_string(), "2288x1712");
    map.insert("21".to_string(), "2592x1944");
    map.insert("22".to_string(), "2304x1728");
    map.insert("36".to_string(), "3008x2008");
    map.insert("4".to_string(), "1600x1200");
    map.insert("5".to_string(), "2048x1536");
    map
});

/// Get tag definitions for interop category
pub fn get_interop_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (
            1,
            TagKitDef {
                id: 1,
                name: "FaceDetectFrameSize",
                format: "int16u[2]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            2,
            TagKitDef {
                id: 2,
                name: "FacesDetected",
                format: "unknown",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            4,
            TagKitDef {
                id: 4,
                name: "FaceDetectFrameSize",
                format: "int16u[2]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            8,
            TagKitDef {
                id: 8,
                name: "FaceOrientation",
                format: "unknown",
                groups: HashMap::new(),
                writable: false,
                notes: Some("orientation of face relative to unrotated image"),
                print_conv: PrintConvType::Simple(&PRINT_CONV_0),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            1,
            TagKitDef {
                id: 1,
                name: "RecordingMode",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_1),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            10,
            TagKitDef {
                id: 10,
                name: "DigitalZoom",
                format: "int32u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_2),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            2,
            TagKitDef {
                id: 2,
                name: "Quality",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_3),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            3,
            TagKitDef {
                id: 3,
                name: "FocusMode",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_4),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            4,
            TagKitDef {
                id: 4,
                name: "FlashMode",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_5),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            4,
            TagKitDef {
                id: 4,
                name: "FlashMode",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_6),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            5,
            TagKitDef {
                id: 5,
                name: "FlashIntensity",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_7),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            6,
            TagKitDef {
                id: 6,
                name: "ObjectDistance",
                format: "int32u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Expression("\"$val m\""),
                value_conv: Some("$val / 1000"),
                subdirectory: None,
            },
        ),
        (
            7,
            TagKitDef {
                id: 7,
                name: "WhiteBalance",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_8),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            2,
            TagKitDef {
                id: 2,
                name: "PreviewImageSize",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Expression(r"$val =~ tr/ /x/; $val"),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            3,
            TagKitDef {
                id: 3,
                name: "PreviewImageLength",
                format: "int32u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            4,
            TagKitDef {
                id: 4,
                name: "PreviewImageStart",
                format: "int32u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            8,
            TagKitDef {
                id: 8,
                name: "QualityMode",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_9),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            9,
            TagKitDef {
                id: 9,
                name: "CasioImageSize",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_10),
                value_conv: None,
                subdirectory: None,
            },
        ),
    ]
}
