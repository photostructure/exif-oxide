//! Tag kits for other category from Casio.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_8: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Normal");
    map.insert("1".to_string(), "Soft");
    map.insert("16".to_string(), "Normal");
    map.insert("17".to_string(), "+1");
    map.insert("18".to_string(), "-1");
    map.insert("2".to_string(), "Hard");
    map
});

static PRINT_CONV_9: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Normal");
    map.insert("1".to_string(), "Low");
    map.insert("16".to_string(), "Normal");
    map.insert("17".to_string(), "+1");
    map.insert("18".to_string(), "-1");
    map.insert("2".to_string(), "High");
    map
});

static PRINT_CONV_10: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Normal");
    map.insert("1".to_string(), "Low");
    map.insert("16".to_string(), "Normal");
    map.insert("17".to_string(), "+1");
    map.insert("18".to_string(), "-1");
    map.insert("2".to_string(), "High");
    map
});

static PRINT_CONV_11: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Off");
    map.insert("2".to_string(), "Red");
    map.insert("3".to_string(), "Green");
    map.insert("4".to_string(), "Blue");
    map.insert("5".to_string(), "Flesh Tones");
    map
});

static PRINT_CONV_12: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Off");
    map.insert("2".to_string(), "Black & White");
    map.insert("3".to_string(), "Sepia");
    map.insert("4".to_string(), "Red");
    map.insert("5".to_string(), "Green");
    map.insert("6".to_string(), "Blue");
    map.insert("7".to_string(), "Yellow");
    map.insert("8".to_string(), "Pink");
    map.insert("9".to_string(), "Purple");
    map
});

static PRINT_CONV_13: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Center");
    map.insert("10".to_string(), "Top Left");
    map.insert("11".to_string(), "Top Center");
    map.insert("12".to_string(), "Top Right");
    map.insert("13".to_string(), "Center Left");
    map.insert("14".to_string(), "Center Right");
    map.insert("15".to_string(), "Bottom Left");
    map.insert("16".to_string(), "Bottom Center");
    map.insert("17".to_string(), "Bottom Right");
    map.insert("2".to_string(), "Upper Left");
    map.insert("3".to_string(), "Upper Right");
    map.insert("4".to_string(), "Near Left/Right of Center");
    map.insert("5".to_string(), "Far Left/Right of Center");
    map.insert("6".to_string(), "Far Left/Right of Center/Bottom");
    map.insert("7".to_string(), "Top Near-left");
    map.insert("8".to_string(), "Near Upper/Left");
    map.insert("9".to_string(), "Top Near-right");
    map
});

static PRINT_CONV_14: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Normal");
    map.insert("2".to_string(), "Weak");
    map.insert("3".to_string(), "Strong");
    map
});

/// Get tag definitions for other category
pub fn get_other_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (
            11,
            TagKitDef {
                id: 11,
                name: "Sharpness",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_8),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            12,
            TagKitDef {
                id: 12,
                name: "Contrast",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_9),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            13,
            TagKitDef {
                id: 13,
                name: "Saturation",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_10),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            20,
            TagKitDef {
                id: 20,
                name: "ISO",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            22,
            TagKitDef {
                id: 22,
                name: "Enhancement",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_11),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            23,
            TagKitDef {
                id: 23,
                name: "ColorFilter",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_12),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            24,
            TagKitDef {
                id: 24,
                name: "AFPoint",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: Some("may not be valid for all models"),
                print_conv: PrintConvType::Simple(&PRINT_CONV_13),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            25,
            TagKitDef {
                id: 25,
                name: "FlashIntensity",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_14),
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            3584,
            TagKitDef {
                id: 3584,
                name: "PrintIM",
                format: "unknown",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: Some(SubDirectoryType::Binary {
                    processor: process_tag_0xe00_subdirectory,
                }),
            },
        ),
    ]
}
