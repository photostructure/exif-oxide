//! Generated lookup table for uri2ns from ExifTool's XMP module
//!
//! This file is auto-generated by codegen/src/strategies/simple_table.rs. Do not edit manually.

use std::collections::HashMap;
use std::sync::LazyLock;

/// Raw data for uri2ns lookup table
static URI2NS_DATA: &[(&str, &'static str)] = &[
    ("adobe:ns:meta/", "x"),
    ("http://cipa.jp/exif/1.0/", "exifEX"),
    ("http://creativecommons.org/ns#", "cc"),
    ("http://developer.sonyericsson.com/cell/1.0/", "cell"),
    (
        "http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/",
        "Iptc4xmpCore",
    ),
    ("http://iptc.org/std/Iptc4xmpExt/2008-02-29/", "Iptc4xmpExt"),
    (
        "http://leica-camera.com/digital-shift-assistant/1.0/",
        "xmpDSA",
    ),
    ("http://ns.acdsee.com/iptc/1.0/", "acdsee"),
    ("http://ns.acdsee.com/regions/", "acdsee-rs"),
    ("http://ns.adobe.com/DICOM/", "DICOM"),
    ("http://ns.adobe.com/album/1.0/", "album"),
    ("http://ns.adobe.com/camera-raw-defaults/1.0/", "crd"),
    (
        "http://ns.adobe.com/camera-raw-embedded-lens-profile/1.0/",
        "crlcp",
    ),
    ("http://ns.adobe.com/camera-raw-saved-settings/1.0/", "crss"),
    ("http://ns.adobe.com/camera-raw-settings/1.0/", "crs"),
    ("http://ns.adobe.com/creatorAtom/1.0/", "creatorAtom"),
    ("http://ns.adobe.com/exif/1.0/", "exif"),
    ("http://ns.adobe.com/exif/1.0/aux/", "aux"),
    ("http://ns.adobe.com/hdr-gain-map/1.0/", "hdrgm"),
    ("http://ns.adobe.com/hdr-metadata/1.0/", "hdr_metadata"),
    ("http://ns.adobe.com/iX/1.0/", "iX"),
    ("http://ns.adobe.com/lightroom/1.0/", "lr"),
    ("http://ns.adobe.com/pdf/1.3/", "pdf"),
    ("http://ns.adobe.com/pdfx/1.3/", "pdfx"),
    ("http://ns.adobe.com/photoshop/1.0/", "photoshop"),
    (
        "http://ns.adobe.com/photoshop/1.0/camera-profile",
        "stCamera",
    ),
    (
        "http://ns.adobe.com/photoshop/1.0/panorama-profile",
        "panorama",
    ),
    ("http://ns.adobe.com/swf/1.0/", "swf"),
    ("http://ns.adobe.com/tiff/1.0/", "tiff"),
    ("http://ns.adobe.com/xap/1.0/", "xmp"),
    ("http://ns.adobe.com/xap/1.0/PLUS/", "xmpPLUS"),
    ("http://ns.adobe.com/xap/1.0/bj/", "xmpBJ"),
    ("http://ns.adobe.com/xap/1.0/g/", "xmpG"),
    ("http://ns.adobe.com/xap/1.0/g/img/", "xmpGImg"),
    ("http://ns.adobe.com/xap/1.0/mm/", "xmpMM"),
    ("http://ns.adobe.com/xap/1.0/rights/", "xmpRights"),
    ("http://ns.adobe.com/xap/1.0/sType/Dimensions#", "stDim"),
    ("http://ns.adobe.com/xap/1.0/sType/Font#", "stFnt"),
    ("http://ns.adobe.com/xap/1.0/sType/Job#", "stJob"),
    ("http://ns.adobe.com/xap/1.0/sType/ManifestItem#", "stMfs"),
    ("http://ns.adobe.com/xap/1.0/sType/ResourceEvent#", "stEvt"),
    ("http://ns.adobe.com/xap/1.0/sType/ResourceRef#", "stRef"),
    ("http://ns.adobe.com/xap/1.0/sType/Version#", "stVer"),
    ("http://ns.adobe.com/xap/1.0/t/pg/", "xmpTPg"),
    ("http://ns.adobe.com/xmp/1.0/DynamicMedia/", "xmpDM"),
    ("http://ns.adobe.com/xmp/Identifier/qual/1.0/", "xmpidq"),
    ("http://ns.adobe.com/xmp/note/", "xmpNote"),
    ("http://ns.adobe.com/xmp/sType/Area#", "stArea"),
    ("http://ns.apple.com/HDRGainMap/1.0/", "HDRGainMap"),
    ("http://ns.apple.com/adjustment-settings/1.0/", "aas"),
    ("http://ns.apple.com/faceinfo/1.0/", "apple-fi"),
    ("http://ns.apple.com/pixeldatainfo/1.0/", "apdi"),
    ("http://ns.exiftool.ca/1.0/", "et"),
    ("http://ns.exiftool.org/1.0/", "et"),
    ("http://ns.extensis.com/extensis/1.0/", "extensis"),
    ("http://ns.fastpictureviewer.com/fpv/1.0/", "fpv"),
    ("http://ns.google.com/photos/1.0/audio/", "GAudio"),
    ("http://ns.google.com/photos/1.0/camera/", "GCamera"),
    ("http://ns.google.com/photos/1.0/container/", "GContainer"),
    ("http://ns.google.com/photos/1.0/creations/", "GCreations"),
    ("http://ns.google.com/photos/1.0/depthmap/", "GDepth"),
    ("http://ns.google.com/photos/1.0/focus/", "GFocus"),
    ("http://ns.google.com/photos/1.0/image/", "GImage"),
    ("http://ns.google.com/photos/1.0/panorama/", "GPano"),
    ("http://ns.google.com/photos/dd/1.0/profile/", "Profile"),
    ("http://ns.google.com/videos/1.0/spherical/", "GSpherical"),
    ("http://ns.idimager.com/ics/1.0/", "ics"),
    ("http://ns.iview-multimedia.com/mediapro/1.0/", "mediapro"),
    ("http://ns.leiainc.com/photos/1.0/image/", "LImage"),
    (
        "http://ns.microsoft.com/expressionmedia/1.0/",
        "expressionmedia",
    ),
    ("http://ns.microsoft.com/photo/1.0", "MicrosoftPhoto"),
    ("http://ns.microsoft.com/photo/1.1", "MP1"),
    ("http://ns.microsoft.com/photo/1.2/", "MP"),
    ("http://ns.microsoft.com/photo/1.2/t/Region#", "MPReg"),
    ("http://ns.microsoft.com/photo/1.2/t/RegionInfo#", "MPRI"),
    ("http://ns.nikon.com/asteroid/1.0/", "ast"),
    ("http://ns.nikon.com/nine/1.0/", "nine"),
    ("http://ns.nikon.com/sdc/1.0/", "sdc"),
    ("http://ns.optimasc.com/dex/1.0/", "dex"),
    ("http://ns.seal/2024/1.0/", "seal"),
    ("http://ns.useplus.org/ldf/xmp/1.0/", "plus"),
    ("http://prismstandard.org/namespaces/basic/2.0/", "prism"),
    ("http://prismstandard.org/namespaces/pmi/2.2/", "pmi"),
    (
        "http://prismstandard.org/namespaces/prismusagerights/2.1/",
        "pur",
    ),
    ("http://prismstandard.org/namespaces/prl/2.1/", "prl"),
    ("http://prismstandard.org/namespaces/prm/3.0/", "prm"),
    ("http://purl.org/dc/elements/1.1/", "dc"),
    ("http://rs.tdwg.org/dwc/index.htm", "dwc"),
    ("http://www.digikam.org/ns/1.0/", "digiKam"),
    ("http://www.dji.com/drone-dji/1.0/", "drone-dji"),
    (
        "http://www.metadataworkinggroup.com/schemas/collections/",
        "mwg-coll",
    ),
    (
        "http://www.metadataworkinggroup.com/schemas/keywords/",
        "mwg-kw",
    ),
    (
        "http://www.metadataworkinggroup.com/schemas/regions/",
        "mwg-rs",
    ),
    ("http://www.w3.org/1999/02/22-rdf-syntax-ns#", "rdf"),
    ("http://www.w3.org/2000/01/rdf-schema#", "rdfs"),
    ("http://www.w3.org/2000/svg", "svg"),
    ("http://xmp.gettyimages.com/gift/1.0/", "GettyImagesGIFT"),
];

/// uri2ns lookup table
pub static URI2NS: LazyLock<HashMap<&str, &'static str>> =
    LazyLock::new(|| URI2NS_DATA.iter().copied().collect());

/// Look up uri2ns value by key
pub fn lookup_uri2ns(key: &str) -> Option<&'static str> {
    URI2NS.get(&key).copied()
}
