//! Tag kits for datetime category from Exif.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

use super::{PrintConvType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

/// Get tag definitions for datetime category
pub fn get_datetime_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (20531, TagKitDef {
            id: 20531,
            name: "ThumbnailDateTime",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
        }),
        (306, TagKitDef {
            id: 306,
            name: "ModifyDate",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("called DateTime by the EXIF spec."),
            print_conv: PrintConvType::Manual("complex_expression_printconv"),
            value_conv: None,
        }),
        (33434, TagKitDef {
            id: 33434,
            name: "ExposureTime",
            format: "rational64u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Manual("complex_expression_printconv"),
            value_conv: None,
        }),
        (34858, TagKitDef {
            id: 34858,
            name: "TimeZoneOffset",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: Some("1 or 2 values: 1. The time zone offset of DateTimeOriginal from GMT in\n            hours, 2. If present, the time zone offset of ModifyDate"),
            print_conv: PrintConvType::None,
            value_conv: None,
        }),
        (34859, TagKitDef {
            id: 34859,
            name: "SelfTimerMode",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
        }),
        (36867, TagKitDef {
            id: 36867,
            name: "DateTimeOriginal",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("date/time when original image was taken"),
            print_conv: PrintConvType::Manual("complex_expression_printconv"),
            value_conv: None,
        }),
        (36868, TagKitDef {
            id: 36868,
            name: "CreateDate",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("called DateTimeDigitized by the EXIF spec."),
            print_conv: PrintConvType::Manual("complex_expression_printconv"),
            value_conv: None,
        }),
        (36880, TagKitDef {
            id: 36880,
            name: "OffsetTime",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("time zone for ModifyDate"),
            print_conv: PrintConvType::None,
            value_conv: None,
        }),
        (36881, TagKitDef {
            id: 36881,
            name: "OffsetTimeOriginal",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("time zone for DateTimeOriginal"),
            print_conv: PrintConvType::None,
            value_conv: None,
        }),
        (36882, TagKitDef {
            id: 36882,
            name: "OffsetTimeDigitized",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("time zone for CreateDate"),
            print_conv: PrintConvType::None,
            value_conv: None,
        }),
        (37520, TagKitDef {
            id: 37520,
            name: "SubSecTime",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("fractional seconds for ModifyDate"),
            print_conv: PrintConvType::None,
            value_conv: Some("$val=~s/ +$//; $val"),
        }),
        (37521, TagKitDef {
            id: 37521,
            name: "SubSecTimeOriginal",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("fractional seconds for DateTimeOriginal"),
            print_conv: PrintConvType::None,
            value_conv: Some("$val=~s/ +$//; $val"),
        }),
        (37522, TagKitDef {
            id: 37522,
            name: "SubSecTimeDigitized",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("fractional seconds for CreateDate"),
            print_conv: PrintConvType::None,
            value_conv: Some("$val=~s/ +$//; $val"),
        }),
        (42082, TagKitDef {
            id: 42082,
            name: "CompositeImageExposureTimes",
            format: "undef",
            groups: HashMap::new(),
            writable: true,
            notes: Some("11 or more values: 1. Total exposure time period, 2. Total exposure of all\n            source images, 3. Total exposure of all used images, 4. Max exposure time of\n            source images, 5. Max exposure time of used images, 6. Min exposure time of\n            source images, 7. Min exposure of used images, 8. Number of sequences, 9.\n            Number of source images in sequence. 10-N. Exposure times of each source\n            image. Called SourceExposureTimesOfCompositeImage by the EXIF spec."),
            print_conv: PrintConvType::Manual("code_ref_printconv"),
            value_conv: None,
        }),
        (50971, TagKitDef {
            id: 50971,
            name: "PreviewDateTime",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Manual("complex_expression_printconv"),
            value_conv: Some("\n            require Image::ExifTool::XMP;\n            return Image::ExifTool::XMP::ConvertXMPDate($val);\n        "),
        }),
        (51043, TagKitDef {
            id: 51043,
            name: "TimeCodes",
            format: "int8u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Manual("complex_expression_printconv"),
            value_conv: Some("\n            my @a = split ' ', $val;\n            my @v;\n            push @v, join('.', map { sprintf('%.2x',$_) } splice(@a,0,8)) while @a >= 8;\n            join ' ', @v;\n        "),
        }),
    ]
}
