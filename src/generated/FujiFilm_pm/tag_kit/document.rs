//! Tag kits for document category from FujiFilm.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

/// Get tag definitions for document category
pub fn get_document_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (289, TagKitDef {
            id: 289,
            name: "RawImageSize",
            format: "int16u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression(r"$val=~tr/ /x/; $val"),
            value_conv: Some("\n                our @v=split(\" \",$val);\n                $v[0]*=2, $v[1]/=2;\n                return \"@v\";\n            "),
            subdirectory: None,
        }),
        (289, TagKitDef {
            id: 289,
            name: "RawImageSize",
            format: "int16u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression(r"$val=~tr/ /x/; $val"),
            value_conv: Some("\n                our @v=reverse split(\" \",$val);\n                $$self{FujiLayout} and $v[0]/=2, $v[1]*=2;\n                return \"@v\";\n            "),
            subdirectory: None,
        }),
    ]
}
