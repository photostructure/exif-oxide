//! Generated tag table definitions from FujiFilm::RAF
//!
//! This file is auto-generated by codegen/src/strategies/tag_kit.rs. Do not edit manually.

use crate::types::{PrintConv, TagInfo, ValueConv};
use std::collections::HashMap;
use std::sync::LazyLock;

// Generated imports for conversion functions
use crate::generated::functions::hash_42::ast_print_422bfca23e0caff5;
use crate::generated::functions::hash_45::ast_value_4564b55cdb8716ed;
use crate::generated::functions::hash_4e::ast_print_4e5e992f9b388e54;
use crate::generated::functions::hash_57::ast_value_574514e3d36a220e;
use crate::generated::functions::hash_b7::ast_print_b75f5f46a9f320cf;
use crate::generated::functions::hash_f5::ast_print_f591611bd0effe85;

/// Tag definitions for FujiFilm::RAF table
pub static FUJI_FILM_RAF_TAGS: LazyLock<HashMap<u16, TagInfo>> = LazyLock::new(|| {
    HashMap::from([
        (
            256,
            TagInfo {
                name: "RawImageFullSize",
                format: "int16u",
                print_conv: Some(PrintConv::Function(ast_print_4e5e992f9b388e54)),
                value_conv: Some(ValueConv::Function(ast_value_4564b55cdb8716ed)),
            },
        ),
        (
            272,
            TagInfo {
                name: "RawImageCropTopLeft",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            273,
            TagInfo {
                name: "RawImageCroppedSize",
                format: "int16u",
                print_conv: Some(PrintConv::Function(ast_print_4e5e992f9b388e54)),
                value_conv: Some(ValueConv::Function(ast_value_4564b55cdb8716ed)),
            },
        ),
        (
            277,
            TagInfo {
                name: "RawImageAspectRatio",
                format: "int16u",
                print_conv: Some(PrintConv::Function(ast_print_422bfca23e0caff5)),
                value_conv: Some(ValueConv::Function(ast_value_4564b55cdb8716ed)),
            },
        ),
        (
            279,
            TagInfo {
                name: "RawZoomActive",
                format: "int32u",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            280,
            TagInfo {
                name: "RawZoomTopLeft",
                format: "int16u",
                print_conv: Some(PrintConv::Function(ast_print_4e5e992f9b388e54)),
                value_conv: Some(ValueConv::Function(ast_value_4564b55cdb8716ed)),
            },
        ),
        (
            281,
            TagInfo {
                name: "RawZoomSize",
                format: "int16u",
                print_conv: Some(PrintConv::Function(ast_print_4e5e992f9b388e54)),
                value_conv: Some(ValueConv::Function(ast_value_4564b55cdb8716ed)),
            },
        ),
        (
            304,
            TagInfo {
                name: "FujiLayout",
                format: "int8u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            305,
            TagInfo {
                name: "XTransLayout",
                format: "int8u",
                print_conv: Some(PrintConv::Function(ast_print_f591611bd0effe85)),
                value_conv: None,
            },
        ),
        (
            8192,
            TagInfo {
                name: "WB_GRGBLevelsAuto",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            8448,
            TagInfo {
                name: "WB_GRGBLevelsDaylight",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            8704,
            TagInfo {
                name: "WB_GRGBLevelsCloudy",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            8960,
            TagInfo {
                name: "WB_GRGBLevelsDaylightFluor",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            8961,
            TagInfo {
                name: "WB_GRGBLevelsDayWhiteFluor",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            8962,
            TagInfo {
                name: "WB_GRGBLevelsWhiteFluorescent",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            8976,
            TagInfo {
                name: "WB_GRGBLevelsWarmWhiteFluor",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            8977,
            TagInfo {
                name: "WB_GRGBLevelsLivingRoomWarmWhiteFluor",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            9216,
            TagInfo {
                name: "WB_GRGBLevelsTungsten",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            12272,
            TagInfo {
                name: "WB_GRGBLevels",
                format: "int16u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            37376,
            TagInfo {
                name: "RelativeExposure",
                format: "rational32s",
                print_conv: Some(PrintConv::Function(ast_print_b75f5f46a9f320cf)),
                value_conv: Some(ValueConv::Function(ast_value_574514e3d36a220e)),
            },
        ),
        (
            38480,
            TagInfo {
                name: "RawExposureBias",
                format: "rational32s",
                print_conv: Some(PrintConv::Function(ast_print_b75f5f46a9f320cf)),
                value_conv: None,
            },
        ),
        (
            49152,
            TagInfo {
                name: "RAFData",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
    ])
});

/// Apply ValueConv transformation for tags in this table
pub fn apply_value_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
) -> Result<crate::types::TagValue, crate::types::ExifError> {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = FUJI_FILM_RAF_TAGS.get(&tag_id_u16) {
        if let Some(ref value_conv) = tag_def.value_conv {
            match value_conv {
                ValueConv::None => Ok(value.clone()),
                ValueConv::Function(func) => func(value, None),
                ValueConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    Err(crate::types::ExifError::NotImplemented("Runtime expression evaluation not supported - should be handled by PPI at build time".to_string()))
                }
                _ => Ok(value.clone()),
            }
        } else {
            Ok(value.clone())
        }
    } else {
        Err(crate::types::ExifError::ParseError(format!(
            "Tag 0x{:04x} not found in table",
            tag_id
        )))
    }
}

/// Apply PrintConv transformation for tags in this table
pub fn apply_print_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
    _warnings: &mut Vec<String>,
) -> crate::types::TagValue {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = FUJI_FILM_RAF_TAGS.get(&tag_id_u16) {
        if let Some(ref print_conv) = tag_def.print_conv {
            match print_conv {
                PrintConv::None => value.clone(),
                PrintConv::Function(func) => func(value, None),
                PrintConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    value.clone() // Fallback to original value when expression not handled by PPI
                }
                _ => value.clone(),
            }
        } else {
            value.clone()
        }
    } else {
        value.clone()
    }
}
