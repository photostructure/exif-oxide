//! Tag kits for interop category from RIFF.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_0: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("48".to_string(), "C");
    map.insert("49".to_string(), "C#");
    map.insert("50".to_string(), "D");
    map.insert("51".to_string(), "D#");
    map.insert("52".to_string(), "E");
    map.insert("53".to_string(), "F");
    map.insert("54".to_string(), "F#");
    map.insert("55".to_string(), "G");
    map.insert("56".to_string(), "G#");
    map.insert("57".to_string(), "A");
    map.insert("58".to_string(), "A#");
    map.insert("59".to_string(), "B");
    map.insert("60".to_string(), "High C");
    map.insert("61".to_string(), "High C#");
    map.insert("62".to_string(), "High D");
    map.insert("63".to_string(), "High D#");
    map.insert("64".to_string(), "High E");
    map.insert("65".to_string(), "High F");
    map.insert("66".to_string(), "High F#");
    map.insert("67".to_string(), "High G");
    map.insert("68".to_string(), "High G#");
    map.insert("69".to_string(), "High A");
    map.insert("70".to_string(), "High A#");
    map.insert("71".to_string(), "High B");
    map
});

static PRINT_CONV_1: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "none");
    map.insert("24".to_string(), "24 fps");
    map.insert("25".to_string(), "25 fps");
    map.insert("29".to_string(), "29 fps");
    map.insert("30".to_string(), "30 fps");
    map
});

static PRINT_CONV_2: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "No");
    map.insert("1".to_string(), "Yes");
    map
});

/// Get tag definitions for interop category
pub fn get_interop_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (4, TagKitDef {
            id: 4,
            name: "AnimationLoopCount",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("$val || \"inf\""),
            value_conv: None,
            subdirectory: None,
        }),
        (1, TagKitDef {
            id: 1,
            name: "MaxDataRate",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: Some("converted using SI byte prefixes unles the API ByteUnit option is set to\n            \"Binary\""),
            print_conv: PrintConvType::Expression(r"
            my ($unit, $div) = $self->Options('ByteUnit') eq 'Binary' ? ('KiB/s',1024) : ('kB/s',1000);
            my $tmp = $val / $div;
            $tmp > 9999 and $tmp /= $div, $unit =~ s/^./M/;
            sprintf('%.4g %s', $tmp, $unit);
        "),
            value_conv: None,
            subdirectory: None,
        }),
        (4, TagKitDef {
            id: 4,
            name: "RootNote",
            format: "int16u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_0),
            value_conv: None,
            subdirectory: None,
        }),
        (2, TagKitDef {
            id: 2,
            name: "SampleRate",
            format: "int32u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (4, TagKitDef {
            id: 4,
            name: "AvgBytesPerSec",
            format: "int32u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (1, TagKitDef {
            id: 1,
            name: "DataSize64",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Manual("code_ref_printconv"),
            value_conv: None,
            subdirectory: None,
        }),
        (5, TagKitDef {
            id: 5,
            name: "SMPTEFormat",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_1),
            value_conv: None,
            subdirectory: None,
        }),
        (6, TagKitDef {
            id: 6,
            name: "SMPTEOffset",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: Some("HH:MM:SS:FF"),
            print_conv: PrintConvType::None,
            value_conv: Some("\n            my $str = sprintf('%.8x', $val);\n            $str =~ s/(..)(..)(..)(..)/$1:$2:$3:$4/;\n            return $str;\n        "),
            subdirectory: None,
        }),
        (9, TagKitDef {
            id: 9,
            name: "SamplerData",
            format: "undef[$size-40]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (1, TagKitDef {
            id: 1,
            name: "AudioCodec",
            format: "string[4]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (1, TagKitDef {
            id: 1,
            name: "VideoCodec",
            format: "string[4]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (1, TagKitDef {
            id: 1,
            name: "Codec",
            format: "string[4]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (10, TagKitDef {
            id: 10,
            name: "Quality",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("$val eq 0xffffffff ? \"Default\" : $val"),
            value_conv: None,
            subdirectory: None,
        }),
        (5, TagKitDef {
            id: 5,
            name: "AudioSampleRate",
            format: "rational64u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("int($val * 100 + 0.5) / 100"),
            value_conv: Some("$val ? 1/$val : 0"),
            subdirectory: None,
        }),
        (5, TagKitDef {
            id: 5,
            name: "VideoFrameRate",
            format: "rational64u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("int($val * 1000 + 0.5) / 1000"),
            value_conv: None,
            subdirectory: None,
        }),
        (5, TagKitDef {
            id: 5,
            name: "StreamSampleRate",
            format: "rational64u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("int($val * 1000 + 0.5) / 1000"),
            value_conv: Some("$val ? 1/$val : 0"),
            subdirectory: None,
        }),
        (8, TagKitDef {
            id: 8,
            name: "AudioSampleCount",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (8, TagKitDef {
            id: 8,
            name: "VideoFrameCount",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (8, TagKitDef {
            id: 8,
            name: "StreamSampleCount",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (6, TagKitDef {
            id: 6,
            name: "ImageWidth",
            format: "int16u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (8, TagKitDef {
            id: 8,
            name: "ImageHeight",
            format: "int16u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (1, TagKitDef {
            id: 1,
            name: "ImageWidth",
            format: "int16u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: Some("($val & 0x3fff) + 1"),
            subdirectory: None,
        }),
        (2, TagKitDef {
            id: 2,
            name: "ImageHeight",
            format: "int32u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: Some("(($val >> 6) & 0x3fff) + 1"),
            subdirectory: None,
        }),
        (4, TagKitDef {
            id: 4,
            name: "AlphaIsUsed",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_2),
            value_conv: None,
            subdirectory: None,
        }),
        (4, TagKitDef {
            id: 4,
            name: "ImageWidth",
            format: "int32u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: Some("($val & 0xffffff) + 1"),
            subdirectory: None,
        }),
        (6, TagKitDef {
            id: 6,
            name: "ImageHeight",
            format: "int32u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: Some("($val >> 8) + 1"),
            subdirectory: None,
        }),
    ]
}
