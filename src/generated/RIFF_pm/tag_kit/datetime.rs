//! Tag kits for datetime category from RIFF.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

/// Get tag definitions for datetime category
pub fn get_datetime_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (
            320,
            TagKitDef {
                id: 320,
                name: "DateTimeOriginal",
                format: "string[18]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::Expression("$self->ConvertDateTime($val)"),
                value_conv: Some("$_=$val; tr/-/:/; s/^(\\d{4}:\\d{2}:\\d{2})/$1 /; $_"),
                subdirectory: None,
            },
        ),
        (
            338,
            TagKitDef {
                id: 338,
                name: "TimeReference",
                format: "int32u[2]",
                groups: HashMap::new(),
                writable: false,
                notes: Some("first sample count since midnight"),
                print_conv: PrintConvType::None,
                value_conv: Some("my @v=split(\" \",$val); $v[0] + $v[1] * 4294967296"),
                subdirectory: None,
            },
        ),
        (
            0,
            TagKitDef {
                id: 0,
                name: "TimeCreated",
                format: "unknown",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
    ]
}
