//! Tag kits for other category from MinoltaRaw.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]

use super::{PrintConvType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_0: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("82".to_string(), "Padded");
    map.insert("89".to_string(), "Linear");
    map
});

static PRINT_CONV_1: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "RGGB");
    map.insert("4".to_string(), "GBRG");
    map
});

/// Get tag definitions for other category
pub fn get_other_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (
            0,
            TagKitDef {
                id: 0,
                name: "FirmwareID",
                format: "string[8]",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
            },
        ),
        (
            12,
            TagKitDef {
                id: 12,
                name: "ImageHeight",
                format: "int16u",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
            },
        ),
        (
            14,
            TagKitDef {
                id: 14,
                name: "ImageWidth",
                format: "int16u",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
            },
        ),
        (
            16,
            TagKitDef {
                id: 16,
                name: "RawDepth",
                format: "int8u",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
            },
        ),
        (
            17,
            TagKitDef {
                id: 17,
                name: "BitDepth",
                format: "int8u",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
            },
        ),
        (
            18,
            TagKitDef {
                id: 18,
                name: "StorageMethod",
                format: "int8u",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_0),
                value_conv: None,
            },
        ),
        (
            23,
            TagKitDef {
                id: 23,
                name: "BayerPattern",
                format: "int8u",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::Simple(&PRINT_CONV_1),
                value_conv: None,
            },
        ),
    ]
}
