//! Generated tag table definitions from Panasonic::Main
//!
//! This file is auto-generated by codegen/src/strategies/tag_kit.rs. Do not edit manually.

use crate::types::{PrintConv, TagInfo, ValueConv};
use std::collections::HashMap;
use std::sync::LazyLock;

// Generated imports for conversion functions
use crate::implementations::print_conv::print_fraction;

/// Tag definitions for Panasonic::Main table
pub static PANASONIC_MAIN_TAGS: LazyLock<HashMap<u16, TagInfo>> = LazyLock::new(|| {
    HashMap::from([
        (1, TagInfo {
            name: "ImageQuality",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (2, TagInfo {
            name: "FirmwareVersion",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("$val=~tr/ /./; $val".to_string())),
            value_conv: Some(ValueConv::Expression("$val=~/[\\0-\\x2f]/ ? join(\" \",unpack(\"C*\",$val)) : $val".to_string())),
        }),
        (3, TagInfo {
            name: "WhiteBalance",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (7, TagInfo {
            name: "FocusMode",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (26, TagInfo {
            name: "ImageStabilization",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (28, TagInfo {
            name: "MacroMode",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (31, TagInfo {
            name: "ShootingMode",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (32, TagInfo {
            name: "Audio",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (33, TagInfo {
            name: "DataDump",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (35, TagInfo {
            name: "WhiteBalanceBias",
            format: "int16s",
            print_conv: Some(PrintConv::Function(print_fraction)),
            value_conv: Some(ValueConv::Expression("$val / 3".to_string())),
        }),
        (36, TagInfo {
            name: "FlashBias",
            format: "int16s",
            print_conv: Some(PrintConv::Function(print_fraction)),
            value_conv: Some(ValueConv::Expression("$val / 3".to_string())),
        }),
        (37, TagInfo {
            name: "InternalSerialNumber",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("\n            return $val unless $val=~/^([A-Z][0-9A-Z]{2})(\\d{2})(\\d{2})(\\d{2})(\\d{4})/;\n            my $yr = $2 + ($2 < 70 ? 2000 : 1900);\n            return \"($1) $yr:$3:$4 no. $5\";\n        ".to_string())),
            value_conv: None,
        }),
        (38, TagInfo {
            name: "PanasonicExifVersion",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (39, TagInfo {
            name: "VideoFrameRate",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (40, TagInfo {
            name: "ColorEffect",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (41, TagInfo {
            name: "TimeSincePowerOn",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("[Function: Image::ExifTool::Panasonic::__ANON__]".to_string())),
            value_conv: Some(ValueConv::Expression("$val / 100".to_string())),
        }),
        (42, TagInfo {
            name: "BurstMode",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (43, TagInfo {
            name: "SequenceNumber",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (45, TagInfo {
            name: "NoiseReduction",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (46, TagInfo {
            name: "SelfTimer",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (48, TagInfo {
            name: "Rotation",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (49, TagInfo {
            name: "AFAssistLamp",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (50, TagInfo {
            name: "ColorMode",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (51, TagInfo {
            name: "BabyAge",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("$val eq \"9999:99:99 00:00:00\" ? \"(not set)\" : $val".to_string())),
            value_conv: None,
        }),
        (52, TagInfo {
            name: "OpticalZoomMode",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (53, TagInfo {
            name: "ConversionLens",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (54, TagInfo {
            name: "TravelDay",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("$val == 65535 ? \"n/a\" : $val".to_string())),
            value_conv: None,
        }),
        (56, TagInfo {
            name: "BatteryLevel",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (57, TagInfo {
            name: "Contrast",
            format: "int16s",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (58, TagInfo {
            name: "WorldTimeLocation",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (59, TagInfo {
            name: "TextStamp",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (60, TagInfo {
            name: "ProgramISO",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (61, TagInfo {
            name: "AdvancedSceneType",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (62, TagInfo {
            name: "TextStamp",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (63, TagInfo {
            name: "FacesDetected",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (64, TagInfo {
            name: "Saturation",
            format: "int16s",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (65, TagInfo {
            name: "Sharpness",
            format: "int16s",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (66, TagInfo {
            name: "FilmMode",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (67, TagInfo {
            name: "JPEGQuality",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (68, TagInfo {
            name: "ColorTempKelvin",
            format: "int16u",
            print_conv: None,
            value_conv: None,
        }),
        (69, TagInfo {
            name: "BracketSettings",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (70, TagInfo {
            name: "WBShiftAB",
            format: "int16s",
            print_conv: None,
            value_conv: None,
        }),
        (71, TagInfo {
            name: "WBShiftGM",
            format: "int16s",
            print_conv: None,
            value_conv: None,
        }),
        (72, TagInfo {
            name: "FlashCurtain",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (73, TagInfo {
            name: "LongExposureNoiseReduction",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (75, TagInfo {
            name: "PanasonicImageWidth",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (76, TagInfo {
            name: "PanasonicImageHeight",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (77, TagInfo {
            name: "AFPointPosition",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("\n            return 'none' if $val eq '16777216 16777216';\n            my @a = split ' ', $val;\n            sprintf(\"%.2g %.2g\",@a);\n        ".to_string())),
            value_conv: None,
        }),
        (78, TagInfo {
            name: "FaceDetInfo",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("length $val".to_string())),
            value_conv: None,
        }),
        (81, TagInfo {
            name: "LensType",
            format: "unknown",
            print_conv: None,
            value_conv: Some(ValueConv::Expression("$val=~s/ +$//; $val".to_string())),
        }),
        (82, TagInfo {
            name: "LensSerialNumber",
            format: "unknown",
            print_conv: None,
            value_conv: Some(ValueConv::Expression("$val=~s/ +$//; $val".to_string())),
        }),
        (83, TagInfo {
            name: "AccessoryType",
            format: "unknown",
            print_conv: None,
            value_conv: Some(ValueConv::Expression("$val=~s/ +$//; $val".to_string())),
        }),
        (84, TagInfo {
            name: "AccessorySerialNumber",
            format: "unknown",
            print_conv: None,
            value_conv: Some(ValueConv::Expression("$val=~s/ +$//; $val".to_string())),
        }),
        (89, TagInfo {
            name: "Transform",
            format: "int16s",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (93, TagInfo {
            name: "IntelligentExposure",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (96, TagInfo {
            name: "LensFirmwareVersion",
            format: "int8u",
            print_conv: Some(PrintConv::Expression("$val=~tr/ /./; $val".to_string())),
            value_conv: None,
        }),
        (97, TagInfo {
            name: "FaceRecInfo",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (98, TagInfo {
            name: "FlashWarning",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (99, TagInfo {
            name: "RecognizedFaceFlags",
            format: "int8u",
            print_conv: None,
            value_conv: None,
        }),
        (101, TagInfo {
            name: "Title",
            format: "string",
            print_conv: None,
            value_conv: None,
        }),
        (102, TagInfo {
            name: "BabyName",
            format: "string",
            print_conv: None,
            value_conv: None,
        }),
        (103, TagInfo {
            name: "Location",
            format: "string",
            print_conv: None,
            value_conv: None,
        }),
        (105, TagInfo {
            name: "Country",
            format: "string",
            print_conv: None,
            value_conv: None,
        }),
        (107, TagInfo {
            name: "State",
            format: "string",
            print_conv: None,
            value_conv: None,
        }),
        (109, TagInfo {
            name: "City",
            format: "string",
            print_conv: None,
            value_conv: None,
        }),
        (111, TagInfo {
            name: "Landmark",
            format: "string",
            print_conv: None,
            value_conv: None,
        }),
        (112, TagInfo {
            name: "IntelligentResolution",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (118, TagInfo {
            name: "MergedImages",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (119, TagInfo {
            name: "BurstSpeed",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (121, TagInfo {
            name: "IntelligentD-Range",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (124, TagInfo {
            name: "ClearRetouch",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (128, TagInfo {
            name: "City2",
            format: "string",
            print_conv: None,
            value_conv: None,
        }),
        (134, TagInfo {
            name: "ManometerPressure",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("sprintf(\"%.1f kPa\",$val)".to_string())),
            value_conv: Some(ValueConv::Expression("$val / 10".to_string())),
        }),
        (137, TagInfo {
            name: "PhotoStyle",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (138, TagInfo {
            name: "ShadingCompensation",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (139, TagInfo {
            name: "WBShiftIntelligentAuto",
            format: "int16s",
            print_conv: None,
            value_conv: None,
        }),
        (140, TagInfo {
            name: "AccelerometerZ",
            format: "int16s",
            print_conv: None,
            value_conv: None,
        }),
        (141, TagInfo {
            name: "AccelerometerX",
            format: "int16s",
            print_conv: None,
            value_conv: None,
        }),
        (142, TagInfo {
            name: "AccelerometerY",
            format: "int16s",
            print_conv: None,
            value_conv: None,
        }),
        (143, TagInfo {
            name: "CameraOrientation",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (144, TagInfo {
            name: "RollAngle",
            format: "int16s",
            print_conv: None,
            value_conv: Some(ValueConv::Expression("$val / 10".to_string())),
        }),
        (145, TagInfo {
            name: "PitchAngle",
            format: "int16s",
            print_conv: None,
            value_conv: Some(ValueConv::Expression("-$val / 10".to_string())),
        }),
        (146, TagInfo {
            name: "WBShiftCreativeControl",
            format: "int8s",
            print_conv: None,
            value_conv: None,
        }),
        (147, TagInfo {
            name: "SweepPanoramaDirection",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (148, TagInfo {
            name: "SweepPanoramaFieldOfView",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (150, TagInfo {
            name: "TimerRecording",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (157, TagInfo {
            name: "InternalNDFilter",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (158, TagInfo {
            name: "HDR",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (159, TagInfo {
            name: "ShutterType",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (161, TagInfo {
            name: "FilterEffect",
            format: "int32u",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (163, TagInfo {
            name: "ClearRetouchValue",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (167, TagInfo {
            name: "OutputLUT",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (171, TagInfo {
            name: "TouchAE",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (172, TagInfo {
            name: "MonochromeFilterEffect",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (173, TagInfo {
            name: "HighlightShadow",
            format: "int16s",
            print_conv: None,
            value_conv: None,
        }),
        (175, TagInfo {
            name: "TimeStamp",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("$self->ConvertDateTime($val)".to_string())),
            value_conv: None,
        }),
        (179, TagInfo {
            name: "VideoBurstResolution",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (180, TagInfo {
            name: "MultiExposure",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (185, TagInfo {
            name: "RedEyeRemoval",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (187, TagInfo {
            name: "VideoBurstMode",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (188, TagInfo {
            name: "DiffractionCorrection",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (189, TagInfo {
            name: "FocusBracket",
            format: "int16s",
            print_conv: None,
            value_conv: None,
        }),
        (190, TagInfo {
            name: "LongExposureNRUsed",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (191, TagInfo {
            name: "PostFocusMerging",
            format: "int32u",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (193, TagInfo {
            name: "VideoPreburst",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (196, TagInfo {
            name: "LensTypeMake",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (197, TagInfo {
            name: "LensTypeModel",
            format: "unknown",
            print_conv: None,
            value_conv: Some(ValueConv::Expression("$_=sprintf(\"%.4x\",$val); s/(..)(..)/$2 $1/; $_".to_string())),
        }),
        (202, TagInfo {
            name: "SensorType",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (209, TagInfo {
            name: "ISO",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (210, TagInfo {
            name: "MonochromeGrainEffect",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (214, TagInfo {
            name: "NoiseReductionStrength",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (222, TagInfo {
            name: "AFAreaSize",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("$val =~ /^4194303.999/ ? \"n/a\" : $val".to_string())),
            value_conv: None,
        }),
        (228, TagInfo {
            name: "LensTypeModel",
            format: "unknown",
            print_conv: None,
            value_conv: Some(ValueConv::Expression("$_=sprintf(\"%.4x\",$val); s/(..)(..)/$2 $1/; $_".to_string())),
        }),
        (232, TagInfo {
            name: "MinimumISO",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (233, TagInfo {
            name: "AFSubjectDetection",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (238, TagInfo {
            name: "DynamicRangeBoost",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (3584, TagInfo {
            name: "PrintIM",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (8195, TagInfo {
            name: "TimeInfo",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (32768, TagInfo {
            name: "MakerNoteVersion",
            format: "undef",
            print_conv: None,
            value_conv: None,
        }),
        (32769, TagInfo {
            name: "SceneMode",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (32770, TagInfo {
            name: "HighlightWarning",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (32771, TagInfo {
            name: "DarkFocusEnvironment",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (32772, TagInfo {
            name: "WBRedLevel",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (32773, TagInfo {
            name: "WBGreenLevel",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (32774, TagInfo {
            name: "WBBlueLevel",
            format: "unknown",
            print_conv: None,
            value_conv: None,
        }),
        (32776, TagInfo {
            name: "TextStamp",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (32777, TagInfo {
            name: "TextStamp",
            format: "unknown",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
        (32784, TagInfo {
            name: "BabyAge",
            format: "unknown",
            print_conv: Some(PrintConv::Expression("$val eq \"9999:99:99 00:00:00\" ? \"(not set)\" : $val".to_string())),
            value_conv: None,
        }),
        (32786, TagInfo {
            name: "Transform",
            format: "int16s",
            print_conv: Some(PrintConv::Complex),
            value_conv: None,
        }),
    ])
});

/// Apply ValueConv transformation for tags in this table
pub fn apply_value_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
) -> Result<crate::types::TagValue, String> {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = PANASONIC_MAIN_TAGS.get(&tag_id_u16) {
        if let Some(ref value_conv) = tag_def.value_conv {
            match value_conv {
                ValueConv::None => Ok(value.clone()),
                ValueConv::Function(func) => func(value).map_err(|e| e.to_string()),
                ValueConv::Expression(expr) => {
                    // Use runtime expression evaluator for dynamic evaluation
                    let mut evaluator = crate::expressions::ExpressionEvaluator::new();
                    evaluator
                        .evaluate_expression(expr, value)
                        .map_err(|e| e.to_string())
                }
                _ => Ok(value.clone()),
            }
        } else {
            Ok(value.clone())
        }
    } else {
        Err(format!("Tag 0x{:04x} not found in table", tag_id))
    }
}

/// Apply PrintConv transformation for tags in this table
pub fn apply_print_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _evaluator: &mut crate::expressions::ExpressionEvaluator,
    _errors: &mut Vec<String>,
    _warnings: &mut Vec<String>,
) -> crate::types::TagValue {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = PANASONIC_MAIN_TAGS.get(&tag_id_u16) {
        if let Some(ref print_conv) = tag_def.print_conv {
            match print_conv {
                PrintConv::None => value.clone(),
                PrintConv::Function(func) => func(value),
                PrintConv::Expression(expr) => {
                    // Use runtime expression evaluator for dynamic evaluation
                    _evaluator
                        .evaluate_expression(expr, value)
                        .unwrap_or_else(|_| value.clone())
                }
                _ => value.clone(),
            }
        } else {
            value.clone()
        }
    } else {
        value.clone()
    }
}
