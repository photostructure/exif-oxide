//! Tag kits for core category from Olympus.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

static PRINT_CONV_1: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "No");
    map.insert("1".to_string(), "Yes");
    map
});

static PRINT_CONV_2: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("D4028".to_string(), "X-2,C-50Z");
    map.insert("D4029".to_string(), "E-20,E-20N,E-20P");
    map.insert("D4034".to_string(), "C720UZ");
    map.insert("D4040".to_string(), "E-1");
    map.insert("D4041".to_string(), "E-300");
    map.insert("D4083".to_string(), "C2Z,D520Z,C220Z");
    map.insert("D4106".to_string(), "u20D,S400D,u400D");
    map.insert("D4120".to_string(), "X-1");
    map.insert("D4122".to_string(), "u10D,S300D,u300D");
    map.insert("D4125".to_string(), "AZ-1");
    map.insert("D4141".to_string(), "C150,D390");
    map.insert("D4193".to_string(), "C-5000Z");
    map.insert("D4194".to_string(), "X-3,C-60Z");
    map.insert("D4199".to_string(), "u30D,S410D,u410D");
    map.insert("D4205".to_string(), "X450,D535Z,C370Z");
    map.insert("D4210".to_string(), "C160,D395");
    map.insert("D4211".to_string(), "C725UZ");
    map.insert("D4213".to_string(), "FerrariMODEL2003");
    map.insert("D4216".to_string(), "u15D");
    map.insert("D4217".to_string(), "u25D");
    map.insert("D4220".to_string(), "u-miniD,Stylus V");
    map.insert("D4221".to_string(), "u40D,S500,uD500");
    map.insert("D4231".to_string(), "FerrariMODEL2004");
    map.insert("D4240".to_string(), "X500,D590Z,C470Z");
    map.insert("D4244".to_string(), "uD800,S800");
    map.insert("D4256".to_string(), "u720SW,S720SW");
    map.insert("D4261".to_string(), "X600,D630,FE5500");
    map.insert("D4262".to_string(), "uD600,S600");
    map.insert("D4301".to_string(), "u810/S810");
    map.insert("D4302".to_string(), "u710,S710");
    map.insert("D4303".to_string(), "u700,S700");
    map.insert("D4304".to_string(), "FE100,X710");
    map.insert("D4305".to_string(), "FE110,X705");
    map.insert("D4310".to_string(), "FE-130,X-720");
    map.insert("D4311".to_string(), "FE-140,X-725");
    map.insert("D4312".to_string(), "FE150,X730");
    map.insert("D4313".to_string(), "FE160,X735");
    map.insert("D4314".to_string(), "u740,S740");
    map.insert("D4315".to_string(), "u750,S750");
    map.insert("D4316".to_string(), "u730/S730");
    map.insert("D4317".to_string(), "FE115,X715");
    map.insert("D4321".to_string(), "SP550UZ");
    map.insert("D4322".to_string(), "SP510UZ");
    map.insert("D4324".to_string(), "FE170,X760");
    map.insert("D4326".to_string(), "FE200");
    map.insert("D4327".to_string(), "FE190/X750");
    map.insert("D4328".to_string(), "u760,S760");
    map.insert("D4330".to_string(), "FE180/X745");
    map.insert("D4331".to_string(), "u1000/S1000");
    map.insert("D4332".to_string(), "u770SW,S770SW");
    map.insert("D4333".to_string(), "FE240/X795");
    map.insert("D4334".to_string(), "FE210,X775");
    map.insert("D4336".to_string(), "FE230/X790");
    map.insert("D4337".to_string(), "FE220,X785");
    map.insert("D4338".to_string(), "u725SW,S725SW");
    map.insert("D4339".to_string(), "FE250/X800");
    map.insert("D4341".to_string(), "u780,S780");
    map.insert("D4343".to_string(), "u790SW,S790SW");
    map.insert("D4344".to_string(), "u1020,S1020");
    map.insert("D4346".to_string(), "FE15,X10");
    map.insert("D4348".to_string(), "FE280,X820,C520");
    map.insert("D4349".to_string(), "FE300,X830");
    map.insert("D4350".to_string(), "u820,S820");
    map.insert("D4351".to_string(), "u1200,S1200");
    map.insert("D4352".to_string(), "FE270,X815,C510");
    map.insert("D4353".to_string(), "u795SW,S795SW");
    map.insert("D4354".to_string(), "u1030SW,S1030SW");
    map.insert("D4355".to_string(), "SP560UZ");
    map.insert("D4356".to_string(), "u1010,S1010");
    map.insert("D4357".to_string(), "u830,S830");
    map.insert("D4359".to_string(), "u840,S840");
    map.insert("D4360".to_string(), "FE350WIDE,X865");
    map.insert("D4361".to_string(), "u850SW,S850SW");
    map.insert("D4362".to_string(), "FE340,X855,C560");
    map.insert("D4363".to_string(), "FE320,X835,C540");
    map.insert("D4364".to_string(), "SP570UZ");
    map.insert("D4366".to_string(), "FE330,X845,C550");
    map.insert("D4368".to_string(), "FE310,X840,C530");
    map.insert("D4370".to_string(), "u1050SW,S1050SW");
    map.insert("D4371".to_string(), "u1060,S1060");
    map.insert("D4372".to_string(), "FE370,X880,C575");
    map.insert("D4374".to_string(), "SP565UZ");
    map.insert("D4377".to_string(), "u1040,S1040");
    map.insert("D4378".to_string(), "FE360,X875,C570");
    map.insert("D4379".to_string(), "FE20,X15,C25");
    map.insert("D4380".to_string(), "uT6000,ST6000");
    map.insert("D4381".to_string(), "uT8000,ST8000");
    map.insert("D4382".to_string(), "u9000,S9000");
    map.insert("D4384".to_string(), "SP590UZ");
    map.insert("D4385".to_string(), "FE3010,X895");
    map.insert("D4386".to_string(), "FE3000,X890");
    map.insert("D4387".to_string(), "FE35,X30");
    map.insert("D4388".to_string(), "u550WP,S550WP");
    map.insert("D4390".to_string(), "FE5000,X905");
    map.insert("D4391".to_string(), "u5000");
    map.insert("D4392".to_string(), "u7000,S7000");
    map.insert("D4396".to_string(), "FE5010,X915");
    map.insert("D4397".to_string(), "FE25,X20");
    map.insert("D4398".to_string(), "FE45,X40");
    map.insert("D4401".to_string(), "XZ-1");
    map.insert("D4402".to_string(), "uT6010,ST6010");
    map.insert("D4406".to_string(), "u7010,S7010 / u7020,S7020");
    map.insert("D4407".to_string(), "FE4010,X930");
    map.insert("D4408".to_string(), "X560WP");
    map.insert("D4409".to_string(), "FE26,X21");
    map.insert("D4410".to_string(), "FE4000,X920,X925");
    map.insert("D4411".to_string(), "FE46,X41,X42");
    map.insert("D4412".to_string(), "FE5020,X935");
    map.insert("D4413".to_string(), "uTough-3000");
    map.insert("D4414".to_string(), "StylusTough-6020");
    map.insert("D4415".to_string(), "StylusTough-8010");
    map.insert("D4417".to_string(), "u5010,S5010");
    map.insert("D4418".to_string(), "u7040,S7040");
    map.insert("D4419".to_string(), "u9010,S9010");
    map.insert("D4423".to_string(), "FE4040");
    map.insert("D4424".to_string(), "FE47,X43");
    map.insert("D4426".to_string(), "FE4030,X950");
    map.insert("D4428".to_string(), "FE5030,X965,X960");
    map.insert("D4430".to_string(), "u7030,S7030");
    map.insert("D4432".to_string(), "SP600UZ");
    map.insert("D4434".to_string(), "SP800UZ");
    map.insert("D4439".to_string(), "FE4020,X940");
    map.insert("D4442".to_string(), "FE5035");
    map.insert("D4448".to_string(), "FE4050,X970");
    map.insert("D4450".to_string(), "FE5050,X985");
    map.insert("D4454".to_string(), "u-7050");
    map.insert("D4464".to_string(), "T10,X27");
    map.insert("D4470".to_string(), "FE5040,X980");
    map.insert("D4472".to_string(), "TG-310");
    map.insert("D4474".to_string(), "TG-610");
    map.insert("D4476".to_string(), "TG-810");
    map.insert("D4478".to_string(), "VG145,VG140,D715");
    map.insert("D4479".to_string(), "VG130,D710");
    map.insert("D4480".to_string(), "VG120,D705");
    map.insert("D4482".to_string(), "VR310,D720");
    map.insert("D4484".to_string(), "VR320,D725");
    map.insert("D4486".to_string(), "VR330,D730");
    map.insert("D4488".to_string(), "VG110,D700");
    map.insert("D4490".to_string(), "SP-610UZ");
    map.insert("D4492".to_string(), "SZ-10");
    map.insert("D4494".to_string(), "SZ-20");
    map.insert("D4496".to_string(), "SZ-30MR");
    map.insert("D4498".to_string(), "SP-810UZ");
    map.insert("D4500".to_string(), "SZ-11");
    map.insert("D4504".to_string(), "TG-615");
    map.insert("D4508".to_string(), "TG-620");
    map.insert("D4510".to_string(), "TG-820");
    map.insert("D4512".to_string(), "TG-1");
    map.insert("D4516".to_string(), "SH-21");
    map.insert("D4519".to_string(), "SZ-14");
    map.insert("D4520".to_string(), "SZ-31MR");
    map.insert("D4521".to_string(), "SH-25MR");
    map.insert("D4523".to_string(), "SP-720UZ");
    map.insert("D4529".to_string(), "VG170");
    map.insert("D4530".to_string(), "VH210");
    map.insert("D4531".to_string(), "XZ-2");
    map.insert("D4535".to_string(), "SP-620UZ");
    map.insert("D4536".to_string(), "TG-320");
    map.insert("D4537".to_string(), "VR340,D750");
    map.insert("D4538".to_string(), "VG160,X990,D745");
    map.insert("D4541".to_string(), "SZ-12");
    map.insert("D4545".to_string(), "VH410");
    map.insert("D4546".to_string(), "XZ-10");
    map.insert("D4547".to_string(), "TG-2");
    map.insert("D4548".to_string(), "TG-830");
    map.insert("D4549".to_string(), "TG-630");
    map.insert("D4550".to_string(), "SH-50");
    map.insert("D4553".to_string(), "SZ-16,DZ-105");
    map.insert("D4562".to_string(), "SP-820UZ");
    map.insert("D4566".to_string(), "SZ-15");
    map.insert("D4572".to_string(), "STYLUS1");
    map.insert("D4574".to_string(), "TG-3");
    map.insert("D4575".to_string(), "TG-850");
    map.insert("D4579".to_string(), "SP-100EE");
    map.insert("D4580".to_string(), "SH-60");
    map.insert("D4581".to_string(), "SH-1");
    map.insert("D4582".to_string(), "TG-835");
    map.insert("D4585".to_string(), "SH-2 / SH-3");
    map.insert("D4586".to_string(), "TG-4");
    map.insert("D4587".to_string(), "TG-860");
    map.insert("D4590".to_string(), "TG-TRACKER");
    map.insert("D4591".to_string(), "TG-870");
    map.insert("D4593".to_string(), "TG-5");
    map.insert("D4603".to_string(), "TG-6");
    map.insert("D4605".to_string(), "TG-7");
    map.insert("D4809".to_string(), "C2500L");
    map.insert("D4842".to_string(), "E-10");
    map.insert("D4856".to_string(), "C-1");
    map.insert("D4857".to_string(), "C-1Z,D-150Z");
    map.insert("DCHC".to_string(), "D500L");
    map.insert("DCHT".to_string(), "D600L / D620L");
    map.insert("K0055".to_string(), "AIR-A01");
    map.insert("S0003".to_string(), "E-330");
    map.insert("S0004".to_string(), "E-500");
    map.insert("S0009".to_string(), "E-400");
    map.insert("S0010".to_string(), "E-510");
    map.insert("S0011".to_string(), "E-3");
    map.insert("S0013".to_string(), "E-410");
    map.insert("S0016".to_string(), "E-420");
    map.insert("S0017".to_string(), "E-30");
    map.insert("S0018".to_string(), "E-520");
    map.insert("S0019".to_string(), "E-P1");
    map.insert("S0023".to_string(), "E-620");
    map.insert("S0026".to_string(), "E-P2");
    map.insert("S0027".to_string(), "E-PL1");
    map.insert("S0029".to_string(), "E-450");
    map.insert("S0030".to_string(), "E-600");
    map.insert("S0032".to_string(), "E-P3");
    map.insert("S0033".to_string(), "E-5");
    map.insert("S0034".to_string(), "E-PL2");
    map.insert("S0036".to_string(), "E-M5");
    map.insert("S0038".to_string(), "E-PL3");
    map.insert("S0039".to_string(), "E-PM1");
    map.insert("S0040".to_string(), "E-PL1s");
    map.insert("S0042".to_string(), "E-PL5");
    map.insert("S0043".to_string(), "E-PM2");
    map.insert("S0044".to_string(), "E-P5");
    map.insert("S0045".to_string(), "E-PL6");
    map.insert("S0046".to_string(), "E-PL7");
    map.insert("S0047".to_string(), "E-M1");
    map.insert("S0051".to_string(), "E-M10");
    map.insert("S0052".to_string(), "E-M5MarkII");
    map.insert("S0059".to_string(), "E-M10MarkII");
    map.insert("S0061".to_string(), "PEN-F");
    map.insert("S0065".to_string(), "E-PL8");
    map.insert("S0067".to_string(), "E-M1MarkII");
    map.insert("S0068".to_string(), "E-M10MarkIII");
    map.insert("S0076".to_string(), "E-PL9");
    map.insert("S0080".to_string(), "E-M1X");
    map.insert("S0085".to_string(), "E-PL10");
    map.insert("S0088".to_string(), "E-M10MarkIV");
    map.insert("S0089".to_string(), "E-M5MarkIII");
    map.insert("S0092".to_string(), "E-M1MarkIII");
    map.insert("S0093".to_string(), "E-P7");
    map.insert("S0094".to_string(), "E-M10MarkIIIS");
    map.insert("S0095".to_string(), "OM-1");
    map.insert("S0101".to_string(), "OM-5");
    map.insert("S0121".to_string(), "OM-1MarkII");
    map.insert("S0123".to_string(), "OM-3");
    map.insert("S0130".to_string(), "OM-5MarkII");
    map.insert("SR45".to_string(), "D220");
    map.insert("SR55".to_string(), "D320L");
    map.insert("SR83".to_string(), "D340L");
    map.insert("SR85".to_string(), "C830L,D340R");
    map.insert("SR852".to_string(), "C860L,D360L");
    map.insert("SR872".to_string(), "C900Z,D400Z");
    map.insert("SR874".to_string(), "C960Z,D460Z");
    map.insert("SR951".to_string(), "C2000Z");
    map.insert("SR952".to_string(), "C21");
    map.insert("SR953".to_string(), "C21T.commu");
    map.insert("SR954".to_string(), "C2020Z");
    map.insert("SR955".to_string(), "C990Z,D490Z");
    map.insert("SR956".to_string(), "C211Z");
    map.insert("SR959".to_string(), "C990ZS,D490Z");
    map.insert("SR95A".to_string(), "C2100UZ");
    map.insert("SR971".to_string(), "C100,D370");
    map.insert("SR973".to_string(), "C2,D230");
    map.insert("SX151".to_string(), "E100RS");
    map.insert("SX351".to_string(), "C3000Z / C3030Z");
    map.insert("SX354".to_string(), "C3040Z");
    map.insert("SX355".to_string(), "C2040Z");
    map.insert("SX357".to_string(), "C700UZ");
    map.insert("SX358".to_string(), "C200Z,D510Z");
    map.insert("SX374".to_string(), "C3100Z,C3020Z");
    map.insert("SX552".to_string(), "C4040Z");
    map.insert("SX553".to_string(), "C40Z,D40Z");
    map.insert("SX556".to_string(), "C730UZ");
    map.insert("SX558".to_string(), "C5050Z");
    map.insert("SX571".to_string(), "C120,D380");
    map.insert("SX574".to_string(), "C300Z,D550Z");
    map.insert("SX575".to_string(), "C4100Z,C4000Z");
    map.insert("SX751".to_string(), "X200,D560Z,C350Z");
    map.insert("SX752".to_string(), "X300,D565Z,C450Z");
    map.insert("SX753".to_string(), "C750UZ");
    map.insert("SX754".to_string(), "C740UZ");
    map.insert("SX755".to_string(), "C755UZ");
    map.insert("SX756".to_string(), "C5060WZ");
    map.insert("SX757".to_string(), "C8080WZ");
    map.insert("SX758".to_string(), "X350,D575Z,C360Z");
    map.insert("SX759".to_string(), "X400,D580Z,C460Z");
    map.insert("SX75A".to_string(), "AZ-2ZOOM");
    map.insert("SX75B".to_string(), "D595Z,C500Z");
    map.insert("SX75C".to_string(), "X550,D545Z,C480Z");
    map.insert("SX75D".to_string(), "IR-300");
    map.insert("SX75F".to_string(), "C55Z,C5500Z");
    map.insert("SX75G".to_string(), "C170,D425");
    map.insert("SX75J".to_string(), "C180,D435");
    map.insert("SX771".to_string(), "C760UZ");
    map.insert("SX772".to_string(), "C770UZ");
    map.insert("SX773".to_string(), "C745UZ");
    map.insert("SX774".to_string(), "X250,D560Z,C350Z");
    map.insert("SX775".to_string(), "X100,D540Z,C310Z");
    map.insert("SX776".to_string(), "C460ZdelSol");
    map.insert("SX777".to_string(), "C765UZ");
    map.insert("SX77A".to_string(), "D555Z,C315Z");
    map.insert("SX851".to_string(), "C7070WZ");
    map.insert("SX852".to_string(), "C70Z,C7000Z");
    map.insert("SX853".to_string(), "SP500UZ");
    map.insert("SX854".to_string(), "SP310");
    map.insert("SX855".to_string(), "SP350");
    map.insert("SX873".to_string(), "SP320");
    map.insert("SX875".to_string(), "FE180/X745");
    map.insert("SX876".to_string(), "FE190/X750");
    map
});

static PRINT_CONV_3: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "sRGB");
    map.insert("1".to_string(), "Adobe RGB");
    map.insert("2".to_string(), "Pro Photo RGB");
    map
});

static PRINT_CONV_4: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "High Speed");
    map.insert("1".to_string(), "High Function");
    map.insert("2".to_string(), "Advanced High Speed");
    map.insert("3".to_string(), "Advanced High Function");
    map
});

static PRINT_CONV_5: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "(none)");
    map
});

static PRINT_CONV_6: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Original");
    map.insert("1".to_string(), "Edited (Landscape)");
    map.insert("6".to_string(), "Edited (Portrait)");
    map.insert("8".to_string(), "Edited (Portrait)");
    map
});

static PRINT_CONV_7: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Color Temperature");
    map.insert("2".to_string(), "Gray Point");
    map
});

static PRINT_CONV_8: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "sRGB");
    map.insert("1".to_string(), "Adobe RGB");
    map.insert("2".to_string(), "Pro Photo RGB");
    map
});

static PRINT_CONV_9: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "(none)");
    map
});

static PRINT_CONV_10: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "High Speed");
    map.insert("1".to_string(), "High Function");
    map
});

static PRINT_CONV_11: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("1".to_string(), "Neutral");
    map.insert("2".to_string(), "Sepia");
    map.insert("3".to_string(), "Blue");
    map.insert("4".to_string(), "Purple");
    map.insert("5".to_string(), "Green");
    map
});

static PRINT_CONV_12: LazyLock<HashMap<String, &'static str>> = LazyLock::new(|| {
    let mut map = HashMap::new();
    map.insert("0".to_string(), "Off");
    map.insert("1".to_string(), "On");
    map
});

/// Get tag definitions for core category
pub fn get_core_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (297, TagKitDef {
            id: 297,
            name: "ThumbInfo",
            format: "unknown",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: Some(SubDirectoryType::Binary { processor: process_tag_0x129_subdirectory }),
        }),
        (256, TagKitDef {
            id: 256,
            name: "PreviewImageValid",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_1),
            value_conv: None,
            subdirectory: None,
        }),
        (257, TagKitDef {
            id: 257,
            name: "PreviewImageStart",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (258, TagKitDef {
            id: 258,
            name: "PreviewImageLength",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (256, TagKitDef {
            id: 256,
            name: "CameraType2",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_2),
            value_conv: None,
            subdirectory: None,
        }),
        (257, TagKitDef {
            id: 257,
            name: "SerialNumber",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression(r"$val=~s/\s+$//;$val"),
            value_conv: None,
            subdirectory: None,
        }),
        (258, TagKitDef {
            id: 258,
            name: "InternalSerialNumber",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: Some("16 digits: 0-3=model, 4=year, 5-6=month, 8-12=unit number"),
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (259, TagKitDef {
            id: 259,
            name: "FocalPlaneDiagonal",
            format: "rational64u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression("\"$val mm\""),
            value_conv: None,
            subdirectory: None,
        }),
        (260, TagKitDef {
            id: 260,
            name: "BodyFirmwareVersion",
            format: "int32u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression(r#"$val=sprintf("%x",$val);$val=~s/(.{3})$/\.$1/;$val"#),
            value_conv: None,
            subdirectory: None,
        }),
        (256, TagKitDef {
            id: 256,
            name: "BodyFirmwareVersion",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (256, TagKitDef {
            id: 256,
            name: "WB_RBLevels",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: Some("These tags store 2 values, red and blue levels, for some models, but 4\n            values, presumably RBGG levels, for other models"),
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (258, TagKitDef {
            id: 258,
            name: "WB_RBLevels3000K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (259, TagKitDef {
            id: 259,
            name: "WB_RBLevels3300K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (260, TagKitDef {
            id: 260,
            name: "WB_RBLevels3600K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (261, TagKitDef {
            id: 261,
            name: "WB_RBLevels3900K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (262, TagKitDef {
            id: 262,
            name: "WB_RBLevels4000K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (263, TagKitDef {
            id: 263,
            name: "WB_RBLevels4300K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (264, TagKitDef {
            id: 264,
            name: "WB_RBLevels4500K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (265, TagKitDef {
            id: 265,
            name: "WB_RBLevels4800K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (266, TagKitDef {
            id: 266,
            name: "WB_RBLevels5300K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (267, TagKitDef {
            id: 267,
            name: "WB_RBLevels6000K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (273, TagKitDef {
            id: 273,
            name: "WB_RBLevelsCWB4",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (275, TagKitDef {
            id: 275,
            name: "WB_GLevel3000K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (276, TagKitDef {
            id: 276,
            name: "WB_GLevel3300K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (277, TagKitDef {
            id: 277,
            name: "WB_GLevel3600K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (278, TagKitDef {
            id: 278,
            name: "WB_GLevel3900K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (279, TagKitDef {
            id: 279,
            name: "WB_GLevel4000K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (280, TagKitDef {
            id: 280,
            name: "WB_GLevel4300K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (281, TagKitDef {
            id: 281,
            name: "WB_GLevel4500K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (282, TagKitDef {
            id: 282,
            name: "WB_GLevel4800K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (283, TagKitDef {
            id: 283,
            name: "WB_GLevel5300K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (284, TagKitDef {
            id: 284,
            name: "WB_GLevel6000K",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (260, TagKitDef {
            id: 260,
            name: "BodyFirmwareVersion",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (256, TagKitDef {
            id: 256,
            name: "RawDevExposureBiasValue",
            format: "rational64s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (257, TagKitDef {
            id: 257,
            name: "RawDevWhiteBalanceValue",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (258, TagKitDef {
            id: 258,
            name: "RawDevWBFineAdjustment",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (259, TagKitDef {
            id: 259,
            name: "RawDevGrayPoint",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (260, TagKitDef {
            id: 260,
            name: "RawDevSaturationEmphasis",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (261, TagKitDef {
            id: 261,
            name: "RawDevMemoryColorEmphasis",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (262, TagKitDef {
            id: 262,
            name: "RawDevContrastValue",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (263, TagKitDef {
            id: 263,
            name: "RawDevSharpnessValue",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (264, TagKitDef {
            id: 264,
            name: "RawDevColorSpace",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_3),
            value_conv: None,
            subdirectory: None,
        }),
        (265, TagKitDef {
            id: 265,
            name: "RawDevEngine",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_4),
            value_conv: None,
            subdirectory: None,
        }),
        (266, TagKitDef {
            id: 266,
            name: "RawDevNoiseReduction",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_5),
            value_conv: None,
            subdirectory: None,
        }),
        (267, TagKitDef {
            id: 267,
            name: "RawDevEditStatus",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_6),
            value_conv: None,
            subdirectory: None,
        }),
        (256, TagKitDef {
            id: 256,
            name: "RawDevExposureBiasValue",
            format: "rational64s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (257, TagKitDef {
            id: 257,
            name: "RawDevWhiteBalance",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_7),
            value_conv: None,
            subdirectory: None,
        }),
        (258, TagKitDef {
            id: 258,
            name: "RawDevWhiteBalanceValue",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (259, TagKitDef {
            id: 259,
            name: "RawDevWBFineAdjustment",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (260, TagKitDef {
            id: 260,
            name: "RawDevGrayPoint",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (261, TagKitDef {
            id: 261,
            name: "RawDevContrastValue",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (262, TagKitDef {
            id: 262,
            name: "RawDevSharpnessValue",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (263, TagKitDef {
            id: 263,
            name: "RawDevSaturationEmphasis",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (264, TagKitDef {
            id: 264,
            name: "RawDevMemoryColorEmphasis",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (265, TagKitDef {
            id: 265,
            name: "RawDevColorSpace",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_8),
            value_conv: None,
            subdirectory: None,
        }),
        (266, TagKitDef {
            id: 266,
            name: "RawDevNoiseReduction",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_9),
            value_conv: None,
            subdirectory: None,
        }),
        (267, TagKitDef {
            id: 267,
            name: "RawDevEngine",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_10),
            value_conv: None,
            subdirectory: None,
        }),
        (273, TagKitDef {
            id: 273,
            name: "RawDevPMPictureTone",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_11),
            value_conv: None,
            subdirectory: None,
        }),
        (274, TagKitDef {
            id: 274,
            name: "RawDevGradation",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (275, TagKitDef {
            id: 275,
            name: "RawDevSaturation3",
            format: "int16s",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (281, TagKitDef {
            id: 281,
            name: "RawDevAutoGradation",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Simple(&PRINT_CONV_12),
            value_conv: None,
            subdirectory: None,
        }),
        (256, TagKitDef {
            id: 256,
            name: "WB_RBLevelsUsed",
            format: "int16u",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
    ]
}
