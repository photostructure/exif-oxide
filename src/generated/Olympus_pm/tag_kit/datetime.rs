//! Tag kits for datetime category from Olympus.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

/// Get tag definitions for datetime category
pub fn get_datetime_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (131, TagKitDef {
            id: 131,
            name: "DateTime1",
            format: "string[24]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (157, TagKitDef {
            id: 157,
            name: "DateTime2",
            format: "string[24]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (2312, TagKitDef {
            id: 2312,
            name: "DateTimeUTC",
            format: "string",
            groups: HashMap::new(),
            writable: true,
            notes: None,
            print_conv: PrintConvType::Expression("$self->ConvertDateTime($val)"),
            value_conv: None,
            subdirectory: None,
        }),
        (38, TagKitDef {
            id: 38,
            name: "StartTime",
            format: "string[12]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("$self->ConvertDateTime($val)"),
            value_conv: Some("$val =~ s/(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/20$1:$2:$3 $4:$5:$6/; $val"),
            subdirectory: None,
        }),
        (50, TagKitDef {
            id: 50,
            name: "EndTime",
            format: "string[12]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("$self->ConvertDateTime($val)"),
            value_conv: Some("$val =~ s/(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/20$1:$2:$3 $4:$5:$6/; $val"),
            subdirectory: None,
        }),
        (54, TagKitDef {
            id: 54,
            name: "ExposureTime",
            format: "int32u",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("Image::ExifTool::Exif::PrintExposureTime($val)"),
            value_conv: Some("reciprocal_10_value_conv"),
            subdirectory: None,
        }),
        (127, TagKitDef {
            id: 127,
            name: "DateTimeOriginal",
            format: "string[24]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::Expression("$self->ConvertDateTime($val)"),
            value_conv: None,
            subdirectory: None,
        }),
        (153, TagKitDef {
            id: 153,
            name: "DateTime2",
            format: "string[24]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (38, TagKitDef {
            id: 38,
            name: "DateTimeOriginal",
            format: "undef[12]",
            groups: HashMap::new(),
            writable: false,
            notes: Some("time at start of recording"),
            print_conv: PrintConvType::Expression("$self->ConvertDateTime($val)"),
            value_conv: Some("\n            return undef unless $val =~ /^(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})$/;\n            my $y = $1 < 70 ? \"20$1\" : \"19$1\";\n            return \"$y:$2:$3 $4:$5:$6\";\n        "),
            subdirectory: None,
        }),
        (50, TagKitDef {
            id: 50,
            name: "DateTimeEnd",
            format: "undef[12]",
            groups: HashMap::new(),
            writable: false,
            notes: Some("time at end of recording"),
            print_conv: PrintConvType::Expression("$self->ConvertDateTime($val)"),
            value_conv: Some("\n            return undef unless $val =~ /^(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})$/;\n            my $y = $1 < 70 ? \"20$1\" : \"19$1\";\n            return \"$y:$2:$3 $4:$5:$6\";\n        "),
            subdirectory: None,
        }),
        (62, TagKitDef {
            id: 62,
            name: "RecordingTime",
            format: "undef[6]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: Some("$val =~ s/^(\\d{2})(\\d{2})/$1:$2:/; $val"),
            subdirectory: None,
        }),
        (131, TagKitDef {
            id: 131,
            name: "DateTime1",
            format: "string[24]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
        (157, TagKitDef {
            id: 157,
            name: "DateTime2",
            format: "string[24]",
            groups: HashMap::new(),
            writable: false,
            notes: None,
            print_conv: PrintConvType::None,
            value_conv: None,
            subdirectory: None,
        }),
    ]
}
