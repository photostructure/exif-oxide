//! Tag kits for color category from Olympus.pm
//!
//! This file is automatically generated by codegen.
//! DO NOT EDIT MANUALLY - changes will be overwritten.

#![allow(unused_imports)]
#![allow(unused_mut)]
#![allow(dead_code)]
#![allow(unused_variables)]

use super::*;
use super::{PrintConvType, SubDirectoryType, TagKitDef};
use crate::types::TagValue;
use std::collections::HashMap;
use std::sync::LazyLock;

/// Get tag definitions for color category
pub fn get_color_tags() -> Vec<(u32, TagKitDef)> {
    vec![
        (
            528,
            TagKitDef {
                id: 528,
                name: "SceneDetect",
                format: "int16u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            529,
            TagKitDef {
                id: 529,
                name: "SceneArea",
                format: "int32u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            530,
            TagKitDef {
                id: 530,
                name: "SceneDetectData",
                format: "int32u",
                groups: HashMap::new(),
                writable: true,
                notes: None,
                print_conv: PrintConvType::None,
                value_conv: None,
                subdirectory: None,
            },
        ),
        (
            532,
            TagKitDef {
                id: 532,
                name: "Index02",
                format: "int32u",
                groups: HashMap::new(),
                writable: false,
                notes: None,
                print_conv: PrintConvType::Expression("ConvertDuration($val)"),
                value_conv: Some("$val / 1000"),
                subdirectory: None,
            },
        ),
    ]
}
