//! Generated AST functions for hash prefix 26
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// $val =~ /\d/ ? "$val C" : $val
/// ```
/// Used by:
/// - Samsung::Type2.CameraTemperature
pub fn ast_print_2605bce06efb0270(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    if {
        use regex::Regex;
        use std::sync::LazyLock;
        static REGEX_9fb860f18f38b657: LazyLock<Regex> =
            LazyLock::new(|| Regex::new(r"\d").unwrap());
        REGEX_9fb860f18f38b657.is_match(&val.to_string())
    } {
        Into::<TagValue>::into(format!("{} C", val))
    } else {
        val
    }
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val =~ s[\s*(\d+):\s*(\d+):\s*(\d+):\s*(\S*)]
/// [Tagged:$1, ColorClass:$2, Rating:$3, FrameNum:$4];
/// return $val;
/// ```
/// Used by:
/// - IPTC::ApplicationRecord.Prefs
/// TODO: Add support for this expression pattern
pub fn ast_print_269538b049d632d7(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "$val =~ s[\\s*(\\d+):\\s*(\\d+):\\s*(\\d+):\\s*(\\S*)]\n                     [Tagged:$1, ColorClass:$2, Rating:$3, FrameNum:$4];\n            return $val;", // original expression
                    val
                )
}
