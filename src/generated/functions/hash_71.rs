//! Generated AST functions for hash prefix 71
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};

/// Original perl expression:
/// ``` perl
/// $val/16
/// ```
/// Used by:
/// - Sony::Tag2010c.DigitalZoomRatio
/// - Sony::Tag2010e.DigitalZoomRatio
pub fn ast_value_716ee738f3ea2696(val: &TagValue) -> Result<TagValue, crate::types::ExifError> {
    Ok(val / 16)
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
///
/// my @v = split(' ',$val);
/// $v[0] &= 0x0f;
/// $v[1] = $v[2] * 256 + $v[3]; # (always high byte first)
/// return "$v[0] $v[1]";
///
/// ```
/// Used by:
/// - Pentax::LensInfo2.LensType
/// - Pentax::LensInfo3.LensType
/// - Pentax::LensInfo4.LensType
/// TODO: Add support for this expression pattern
pub fn ast_value_71a1a9e0382cbde4(val: &TagValue) -> Result<TagValue, crate::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(val.clone())
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
///
/// return 'n/a' if $val =~ /undef/;
/// sprintf("(%d%%,%d%%) (%d%%,%d%%)", map {$_ * 100} split(" ",$val));
///
/// ```
/// Used by:
/// - Olympus::CameraSettings.AFPointSelected
/// TODO: Add support for this expression pattern
pub fn ast_print_71d89be5ccb75efd(val: &TagValue) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}
