//! Generated AST functions for hash prefix 97
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// ConvertDuration(int($val + 0.5))
/// ```
/// Used by:
/// - GoPro::KBAT.BatteryTime
/// TODO: Add support for this expression pattern
pub fn ast_print_976003e439a3f378(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                  // tag_id will be filled at runtime
        "UnknownTag",                       // tag_name will be filled at runtime
        "UnknownGroup",                     // group will be filled at runtime
        "ConvertDuration(int($val + 0.5))", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("%19d %4d %6d" . " %3d %4d %6d" x 8, split(" ",$val))
/// ```
/// Used by:
/// - Sony::MeterInfo.MeterInfo1Row1
/// - Sony::MeterInfo.MeterInfo1Row2
/// - Sony::MeterInfo.MeterInfo1Row3
/// - Sony::MeterInfo.MeterInfo1Row4
/// - Sony::MeterInfo.MeterInfo1Row5
/// - Sony::MeterInfo.MeterInfo1Row6
/// - Sony::MeterInfo.MeterInfo1Row7
/// - Sony::MeterInfo9.MeterInfo1Row1
/// - Sony::MeterInfo9.MeterInfo1Row2
/// - Sony::MeterInfo9.MeterInfo1Row3
/// - Sony::MeterInfo9.MeterInfo1Row4
/// - Sony::MeterInfo9.MeterInfo1Row5
/// - Sony::MeterInfo9.MeterInfo1Row6
/// - Sony::MeterInfo9.MeterInfo1Row7
/// TODO: Add support for this expression pattern
pub fn ast_print_971f2ccc38718e04(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "sprintf(\"%19d %4d %6d\" . \" %3d %4d %6d\" x 8, split(\" \",$val))", // original expression
        val,
    )
}
