//! Generated AST functions for hash prefix C0
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// $val * 2 / 3
/// ```
/// Used by:
/// - Sony::CameraInfo3.FocalLengthTeleZoom
pub fn ast_value_c0d22fe788e3b3b6(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(((val * 2i32) / 3i32))
}

/// Original perl expression:
/// ``` perl
/// int($val * 1000 + 0.5) / 1000
/// ```
/// Used by:
/// - Canon::MovieInfo.FrameRate
/// - Exif::Main.FrameRate
/// - Nikon::NCTG.FrameRate
/// - QuickTime::VideoProf.VideoAvgFrameRate
/// - QuickTime::VideoProf.VideoMaxFrameRate
/// - RIFF::AVIHeader.FrameRate
/// - Red::Main.OriginalFrameRate
/// - Red::RED1.FrameRate
/// - Red::RED2.FrameRate
pub fn ast_print_c0a8bf21acb9deb1(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    (int(((val * 1000i32) + 0.5f64)) / 1000i32)
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// join(" ", reverse split(" ", $val))
/// ```
/// Used by:
/// - Sony::Main.FullImageSize
/// - Sony::Main.PreviewImageSize
/// TODO: Add support for this expression pattern
pub fn ast_value_c0dee9b600d6a90b(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                         // tag_id will be filled at runtime
        "UnknownTag",                              // tag_name will be filled at runtime
        "UnknownGroup",                            // group will be filled at runtime
        "join(\" \", reverse split(\" \", $val))", // original expression
        val,
    ))
}
