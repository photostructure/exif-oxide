//! Generated AST functions for hash prefix ED
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val=~s/ .*//; $val
/// ```
/// Used by:
/// - Samsung::Type2.ExposureTime
/// - Samsung::Type2.FNumber
/// TODO: Add support for this expression pattern
pub fn ast_value_edcabe5cee6e23c4(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                     // tag_id will be filled at runtime
        "UnknownTag",          // tag_name will be filled at runtime
        "UnknownGroup",        // group will be filled at runtime
        "$val=~s/ .*//; $val", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val=~s/(\S+) (\S+)/$1 m, $2 ft/; $val
/// ```
/// Used by:
/// - Olympus::CameraSettings.ManometerReading
/// TODO: Add support for this expression pattern
pub fn ast_print_ed1555c62079876e(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                          // tag_id will be filled at runtime
        "UnknownTag",                               // tag_name will be filled at runtime
        "UnknownGroup",                             // group will be filled at runtime
        "$val=~s/(\\S+) (\\S+)/$1 m, $2 ft/; $val", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// length($val) <= 64 ? $val : \$val
/// ```
/// Used by:
/// - Exif::Main.WangTag4
/// TODO: Add support for this expression pattern
pub fn ast_print_ed72af4e216ef08f(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                    // tag_id will be filled at runtime
        "UnknownTag",                         // tag_name will be filled at runtime
        "UnknownGroup",                       // group will be filled at runtime
        "length($val) <= 64 ? $val : \\$val", // original expression
        val,
    )
}
