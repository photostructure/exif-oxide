//! Generated AST functions for hash prefix B2
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// abs($val/256)<100 ? 2**(-$val/256) : 0
/// ```
/// Used by:
/// - PanasonicRaw::CameraIFD.ShutterSpeedValue
pub fn ast_value_b2f81fafd2d2443b(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(if (abs((val / 256i32)) < 100i32) {
        power(2i32, (codegen_runtime::negate(val) / 256i32))
    } else {
        0i32
    })
}

/// Original perl expression:
/// ``` perl
/// sprintf("%.1f", $val/10)
/// ```
/// Used by:
/// - SonyIDC::Main.PxShiftPeriphEdgeNRValue
pub fn ast_print_b22e140fc097672a(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    TagValue::String(codegen_runtime::sprintf_perl(
        "%.1f",
        &[val / 10i32.clone()],
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $self->ConvertDateTime($val)
/// ```
/// Used by:
/// - Canon::CTMD.TimeStamp
/// - Canon::CameraInfo1DmkIII.TimeStamp
/// - Canon::CameraInfo1DmkIII.TimeStamp1
/// - Canon::CameraInfo5D.TimeStamp
/// - CanonRaw::TimeStamp.DateTimeOriginal
/// - Casio::QVCI.DateTimeOriginal
/// - Exif::Main.CreateDate
/// - Exif::Main.DateTimeOriginal
/// - Exif::Main.ModifyDate
/// - Exif::Main.PreviewDateTime
/// - GoPro::GLPI.GPSDateTime
/// - GoPro::GPRI.GPSDateTimeRaw
/// - GoPro::GPS9.GPSDateTime
/// - H264::MDPM.DateTimeOriginal
/// - Kodak::Type9.DateTimeOriginal
/// - KyoceraRaw::Main.DateTimeOriginal
/// - Matroska::Main.DateTimeOriginal
/// - Nikon::AVITags.CreateDate
/// - Nikon::AVITags.DateTimeOriginal
/// - Nikon::Main.PowerUpTime
/// - Nikon::NCTG.CreateDate
/// - Nikon::NCTG.DateTimeOriginal
/// - Nikon::NCTG.NikonDateTime
/// - Nintendo::CameraInfo.TimeStamp
/// - Olympus::CameraSettings.DateTimeUTC
/// - Olympus::DSS.EndTime
/// - Olympus::DSS.StartTime
/// - Olympus::OLYM.DateTimeOriginal
/// - Olympus::WAV.DateTimeEnd
/// - Olympus::WAV.DateTimeOriginal
/// - Panasonic::Main.TimeStamp
/// - Panasonic::TimeInfo.PanasonicDateTime
/// - QuickTime::MediaHeader.MediaCreateDate
/// - QuickTime::MediaHeader.MediaModifyDate
/// - QuickTime::MetaData.ModifyDate
/// - QuickTime::MetaData.ProductionDate
/// - QuickTime::MovieHeader.CreateDate
/// - QuickTime::MovieHeader.ModifyDate
/// - QuickTime::Preview.PreviewDate
/// - QuickTime::TrackHeader.TrackCreateDate
/// - QuickTime::TrackHeader.TrackModifyDate
/// - RIFF::BroadcastExt.DateTimeOriginal
/// - RIFF::UserText.GPSDateTime
/// - Red::Main.DateTimeOriginal
/// - Ricoh::RDTL.GPSDateTime
/// - Samsung::Trailer.TimeStamp
/// - Sony::PMP.DateTimeOriginal
/// - Sony::PMP.ModifyDate
/// - Sony::ShotInfo.SonyDateTime
/// - Sony::Tag2010b.SonyDateTime
/// - Sony::Tag2010c.SonyDateTime
/// - Sony::Tag2010d.SonyDateTime
/// - Sony::Tag2010e.SonyDateTime
/// - Sony::Tag9050a.SonyDateTime2
/// - Sony::rtmd.DateTime
/// - SonyIDC::Main.VersionCreateDate
/// - SonyIDC::Main.VersionModifyDate
/// TODO: Add support for this expression pattern
pub fn ast_print_b25c14c47d1cbc24(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                              // tag_id will be filled at runtime
        "UnknownTag",                   // tag_name will be filled at runtime
        "UnknownGroup",                 // group will be filled at runtime
        "$self->ConvertDateTime($val)", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// return $val unless $val=~/^([A-Z][0-9A-Z]{2})(\d{2})(\d{2})(\d{2})(\d{4})/;
/// my $yr = $2 + ($2 < 70 ? 2000 : 1900);
/// return "($1) $yr:$3:$4 no. $5";
/// ```
/// Used by:
/// - Panasonic::Main.InternalSerialNumber
/// TODO: Add support for this expression pattern
pub fn ast_print_b2e53ba58d428808(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "return $val unless $val=~/^([A-Z][0-9A-Z]{2})(\\d{2})(\\d{2})(\\d{2})(\\d{4})/;\n            my $yr = $2 + ($2 < 70 ? 2000 : 1900);\n            return \"($1) $yr:$3:$4 no. $5\";", // original expression
                    val
                )
}
