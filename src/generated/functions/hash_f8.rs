//! Generated AST functions for hash prefix F8
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// $val & 0x7ff
/// ```
/// Used by:
/// - Pentax::Main.AFPointsInFocus
pub fn ast_value_f810249e3e5ba00e(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok((val & 0x7ffu32))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val * 1e-6
/// ```
/// Used by:
/// - Sigma::Main.ExposureTime2
/// TODO: Add support for this expression pattern
pub fn ast_value_f87b1058f4dbdeaa(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "$val * 1e-6",  // original expression
        val,
    ))
}
