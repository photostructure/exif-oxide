//! Generated AST functions for hash prefix E0
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{TagValue, ExifContext};

/// Original perl expression:
/// ``` perl
/// 2 ** (($val/256 - 16) / 2)
/// ```
/// Used by:
/// - Sony::Tag9050a.SonyFNumber
/// - Sony::Tag9050b.SonyFNumber
/// - Sony::Tag9050c.SonyFNumber
/// - Sony::Tag9050d.SonyFNumber
/// - Sony::Tag9405b.SonyFNumber
/// - Sony::Tag9405b.SonyMaxApertureValue
/// - Sony::Tag9416.SonyFNumber2
/// - Sony::Tag9416.SonyMaxApertureValue
pub fn ast_value_e0b36f169462770c(val: &TagValue) -> Result<TagValue, crate::types::ExifError> {
    Ok((2 as f64).powf(((val / 256 - 16) / 2) as f64))
}


/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// 
/// my @cols = qw(Red Green Blue Cyan Magenta Yellow White);
/// my @vals = map { $cols[$_] || "Unknown($_)" } split(' ', $val);
/// return join(',', @vals);
/// 
/// ```
/// Used by:
/// - Exif::Main.CFAPlaneColor
/// TODO: Add support for this expression pattern
pub fn ast_print_e061810051fc636d(val: &TagValue) -> TagValue
{
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}


