//! Generated AST functions for hash prefix 4E
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// sprintf("20%.2d", $val)
/// ```
/// Used by:
/// - Sony::Tag9400a.ModelReleaseYear
/// - Sony::Tag9400b.ModelReleaseYear
/// - Sony::Tag9400c.ModelReleaseYear
pub fn ast_print_4e04d6169c18f853(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    TagValue::String(codegen_runtime::sprintf_perl(
        "20%.2d".into(),
        &[val.clone()],
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val =~ tr/ /x/; $val
/// ```
/// Used by:
/// - Casio::Type2.PreviewImageSize
/// - FujiFilm::RAF.RawImageCroppedSize
/// - FujiFilm::RAF.RawImageFullSize
/// - FujiFilm::RAF.RawZoomSize
/// - FujiFilm::RAF.RawZoomTopLeft
/// - Kodak::Type10.PreviewImageSize
/// - Pentax::Main.PreviewImageSize
/// - QuickTime::VideoProf.VideoSize
/// - Sigma::Main.PreviewImageSize
/// - Sony::Main.FullImageSize
/// - Sony::Main.PreviewImageSize
/// TODO: Add support for this expression pattern
pub fn ast_print_4e5e992f9b388e54(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                       // tag_id will be filled at runtime
        "UnknownTag",            // tag_name will be filled at runtime
        "UnknownGroup",          // group will be filled at runtime
        "$val =~ tr/ /x/; $val", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my ($unit, $div) = $self->Options('ByteUnit') eq 'Binary' ? ('KiB/s',1024) : ('kB/s',1000);
/// my $tmp = $val / $div;
/// $tmp > 9999 and $tmp /= $div, $unit =~ s/^./M/;
/// sprintf('%.4g %s', $tmp, $unit);
/// ```
/// Used by:
/// - RIFF::AVIHeader.MaxDataRate
/// TODO: Add support for this expression pattern
pub fn ast_print_4e32eebd5c55c7ac(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "my ($unit, $div) = $self->Options(\'ByteUnit\') eq \'Binary\' ? (\'KiB/s\',1024) : (\'kB/s\',1000);\n            my $tmp = $val / $div;\n            $tmp > 9999 and $tmp /= $div, $unit =~ s/^./M/;\n            sprintf(\'%.4g %s\', $tmp, $unit);", // original expression
                    val
                )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("%.2f %.2f %.2f",split(" ",$val))
/// ```
/// Used by:
/// - Nikon::Scan.ColorGain
/// TODO: Add support for this expression pattern
pub fn ast_print_4ecd72b99799fca9(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                               // tag_id will be filled at runtime
        "UnknownTag",                                    // tag_name will be filled at runtime
        "UnknownGroup",                                  // group will be filled at runtime
        "sprintf(\"%.2f %.2f %.2f\",split(\" \",$val))", // original expression
        val,
    )
}
