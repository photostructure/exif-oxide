//! Generated AST functions for hash prefix FC
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// "$val m/s"
/// ```
/// Used by:
/// - GoPro::GLPI.GPSSpeedX
/// - GoPro::GLPI.GPSSpeedY
/// - GoPro::GLPI.GPSSpeedZ
pub fn ast_print_fcbf0919480e8f99(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    Into::<TagValue>::into(format!("{} m/s", val))
}

/// Original perl expression:
/// ``` perl
/// $val <= 180 ? $val : $val - 360
/// ```
/// Used by:
/// - Nikon::OrientationInfo.PitchAngle
/// - Nikon::OrientationInfo.RollAngle
/// - Nikon::OrientationInfo.YawAngle
pub fn ast_value_fc17eee05ccde440(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(if (val <= 180i32) { val } else { (val - 360i32) })
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// require Image::ExifTool::GPS;Image::ExifTool::GPS::ToDegrees($val)
/// ```
/// Used by:
/// - Sony::rtmd.GPSLatitude
/// - Sony::rtmd.GPSLongitude
/// TODO: Add support for this expression pattern
pub fn ast_value_fc24b94dc60f8d29(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "require Image::ExifTool::GPS;Image::ExifTool::GPS::ToDegrees($val)", // original expression
        val,
    ))
}
