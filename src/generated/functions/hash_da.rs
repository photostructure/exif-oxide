//! Generated AST functions for hash prefix DA
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// $val / 8 - 6
/// ```
/// Used by:
/// - Canon::CameraInfo1DmkIV.MeasuredEV2
/// - Canon::CameraInfo1DmkIV.MeasuredEV3
/// - Canon::CameraInfo7D.MeasuredEV
/// - Canon::CameraInfo7D.MeasuredEV2
/// - Canon::ShotInfo.MeasuredEV2
pub fn ast_value_da95df81681cbeeb(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(((val / 8i32) - 6i32))
}

/// Original perl expression:
/// ``` perl
/// $val > 655.345 ? "inf" : "$val m"
/// ```
/// Used by:
/// - Canon::CameraInfo1000D.FocusDistanceLower
/// - Canon::CameraInfo1000D.FocusDistanceUpper
/// - Canon::CameraInfo1DX.FocusDistanceLower
/// - Canon::CameraInfo1DX.FocusDistanceUpper
/// - Canon::CameraInfo1DmkIII.FocusDistanceLower
/// - Canon::CameraInfo1DmkIII.FocusDistanceUpper
/// - Canon::CameraInfo1DmkIV.FocusDistanceLower
/// - Canon::CameraInfo1DmkIV.FocusDistanceUpper
/// - Canon::CameraInfo40D.FocusDistanceLower
/// - Canon::CameraInfo40D.FocusDistanceUpper
/// - Canon::CameraInfo450D.FocusDistanceLower
/// - Canon::CameraInfo450D.FocusDistanceUpper
/// - Canon::CameraInfo500D.FocusDistanceLower
/// - Canon::CameraInfo500D.FocusDistanceUpper
/// - Canon::CameraInfo50D.FocusDistanceLower
/// - Canon::CameraInfo50D.FocusDistanceUpper
/// - Canon::CameraInfo550D.FocusDistanceLower
/// - Canon::CameraInfo550D.FocusDistanceUpper
/// - Canon::CameraInfo5DmkII.FocusDistanceLower
/// - Canon::CameraInfo5DmkII.FocusDistanceUpper
/// - Canon::CameraInfo5DmkIII.FocusDistanceLower
/// - Canon::CameraInfo5DmkIII.FocusDistanceUpper
/// - Canon::CameraInfo600D.FocusDistanceLower
/// - Canon::CameraInfo600D.FocusDistanceUpper
/// - Canon::CameraInfo60D.FocusDistanceLower
/// - Canon::CameraInfo60D.FocusDistanceUpper
/// - Canon::CameraInfo650D.FocusDistanceLower
/// - Canon::CameraInfo650D.FocusDistanceUpper
/// - Canon::CameraInfo6D.FocusDistanceLower
/// - Canon::CameraInfo6D.FocusDistanceUpper
/// - Canon::CameraInfo70D.FocusDistanceLower
/// - Canon::CameraInfo70D.FocusDistanceUpper
/// - Canon::CameraInfo750D.FocusDistanceLower
/// - Canon::CameraInfo750D.FocusDistanceUpper
/// - Canon::CameraInfo7D.FocusDistanceLower
/// - Canon::CameraInfo7D.FocusDistanceUpper
/// - Canon::CameraInfo80D.FocusDistanceLower
/// - Canon::CameraInfo80D.FocusDistanceUpper
/// - Canon::FileInfo.FocusDistanceLower
/// - Canon::FileInfo.FocusDistanceUpper
/// - Canon::ShotInfo.FocusDistanceLower
/// - Canon::ShotInfo.FocusDistanceUpper
pub fn ast_print_dad6b5d4251a08c7(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    if (val > 655.345f64) {
        Into::<TagValue>::into("inf")
    } else {
        Into::<TagValue>::into(format!("{} m", val))
    }
}

/// Original perl expression:
/// ``` perl
/// 24*exp(-($val-32)*log(2)/8)
/// ```
/// Used by:
/// - Pentax::AEInfo2.AEExposureTime
/// - Pentax::AEInfo2.AEMinExposureTime
/// - Pentax::AEInfo3.AEExposureTime
/// - Pentax::AEInfo3.AEMinExposureTime
pub fn ast_value_da79bd1c8902b829(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(24i32 * exp(codegen_runtime::negate((val - 32i32))))
}

/// Original perl expression:
/// ``` perl
/// sprintf("%.0f%%",$val/10.24)
/// ```
/// Used by:
/// - Sony::Tag9404a.LensZoomPosition
/// - Sony::Tag9404b.LensZoomPosition
/// - Sony::Tag9405b.LensZoomPosition
pub fn ast_print_da1eca5e0712c7b0(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    TagValue::String(codegen_runtime::sprintf_perl(
        "%.0f%%",
        &[val / 10.24f64.clone()],
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $$self{TimecodeScale} ? ConvertDuration($val) : $val
/// ```
/// Used by:
/// - Matroska::Main.CueRefTime
/// - Matroska::Main.CueTime
/// - Matroska::Main.Duration
/// - Matroska::Main.TimeCode
/// TODO: Add support for this expression pattern
pub fn ast_print_da3ee02492769652(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                                      // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "$$self{TimecodeScale} ? ConvertDuration($val) : $val", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my @v = unpack('C*', $val);
/// return sprintf("%.2d:%.2d", @v)
/// ```
/// Used by:
/// - Sony::Tag9050b.SonyTimeMinSec
/// TODO: Add support for this expression pattern
pub fn ast_value_da76e49d05066f83(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "my @v = unpack(\'C*\', $val);\n            return sprintf(\"%.2d:%.2d\", @v)", // original expression
        val,
    ))
}
