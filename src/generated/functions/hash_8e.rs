//! Generated AST functions for hash prefix 8E
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};

/// Original perl expression:
/// ``` perl
/// $val eq "inf" ? $val : "$val m"
/// ```
/// Used by:
/// - Casio::Type2.ObjectDistance
pub fn ast_print_8eb189bdce07b25f(val: &TagValue) -> TagValue {
    if val == "inf" {
        val
    } else {
        format!("{} m", val)
    }
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $_ = $val ? Image::ExifTool::DecodeBits($val,
/// {
/// 0 => 'MF',
/// 1 => 'D',
/// 2 => 'G',
/// 3 => 'VR',
/// 4 => '1', #PH
/// 5 => 'FT-1', #PH/IB
/// 6 => 'E', #PH (electromagnetic aperture mechanism)
/// 7 => 'AF-P', #PH/IB
/// }) : 'AF';
/// # remove commas and change "D G" to just "G"
/// s/,//g; s/\bD G\b/G/;
/// s/ E\b// and s/^(G )?/E /;      # put "E" at the start instead of "G"
/// s/ 1// and $_ = "1 $_";         # put "1" at start
/// s/FT-1 // and $_ .= ' FT-1';    # put "FT-1" at end
/// return $_;
///
/// ```
/// Used by:
/// - Nikon::Main.LensType
/// TODO: Add support for this expression pattern
pub fn ast_print_8e2bf26a3866c12f(val: &TagValue) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("%d.%.2d", split(" ",$val))
/// ```
/// Used by:
/// - JPEG::NITF.NITFVersion
/// TODO: Add support for this expression pattern
pub fn ast_value_8ef6bad16279ca65(val: &TagValue) -> Result<TagValue, crate::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(val.clone())
}
