//! Generated AST functions for hash prefix 45
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// sprintf("%.3d", $val)
/// ```
/// Used by:
/// - Nikon::FileInfo.DirectoryNumber
/// - Sony::CameraSettings.FolderNumber
pub fn ast_print_45502c266bb9ea6b(val: &TagValue) -> TagValue {
    TagValue::String(codegen_runtime::sprintf_perl("%.3d".into(), &[val.clone()]))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val =~ tr/\0//d; $val
/// ```
/// Used by:
/// - Nikon::AVITags.Software
/// TODO: Add support for this expression pattern
pub fn ast_value_45e5361ebf476759(
    val: &TagValue,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(val.clone())
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val ? sprintf("%.1f",$val) : $val
/// ```
/// Used by:
/// - Sony::Tag2010a.StopsAboveBaseISO
/// - Sony::Tag2010b.StopsAboveBaseISO
/// - Sony::Tag2010c.StopsAboveBaseISO
/// - Sony::Tag2010d.StopsAboveBaseISO
/// - Sony::Tag2010e.StopsAboveBaseISO
/// - Sony::Tag2010f.StopsAboveBaseISO
/// - Sony::Tag2010g.StopsAboveBaseISO
/// - Sony::Tag2010h.StopsAboveBaseISO
/// - Sony::Tag2010i.StopsAboveBaseISO
/// - Sony::Tag9405b.StopsAboveBaseISO
/// - Sony::Tag9416.StopsAboveBaseISO
/// TODO: Add support for this expression pattern
pub fn ast_print_45145cdaaff93e23(val: &TagValue) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// ($val < 0x400 or $val == 0x7fff) ? $val : pack "C*", map { (($val>>$_)&0x1f)+0x60 } 10, 5, 0
/// ```
/// Used by:
/// - QuickTime::MediaHeader.MediaLanguageCode
/// TODO: Add support for this expression pattern
pub fn ast_value_45fef045148be706(
    val: &TagValue,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(val.clone())
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// IsInt($val) ? "$val C" : $val
/// ```
/// Used by:
/// - Sigma::Main.SensorTemperature
/// TODO: Add support for this expression pattern
pub fn ast_print_45781a09f536a8e0(val: &TagValue) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my ($n, @a) = unpack("nN*",$val);
/// $#a = $n - 1 if $n > @a;
/// return join(' ', @a);
/// ```
/// Used by:
/// - Photoshop::Main.LayerSelectionIDs
/// TODO: Add support for this expression pattern
pub fn ast_value_45f64f13ca77f48e(
    val: &TagValue,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(val.clone())
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my @v=reverse split(" ",$val);"@v"
/// ```
/// Used by:
/// - FujiFilm::RAF.RawImageAspectRatio
/// - FujiFilm::RAF.RawImageCroppedSize
/// - FujiFilm::RAF.RawImageFullSize
/// - FujiFilm::RAF.RawZoomSize
/// - FujiFilm::RAF.RawZoomTopLeft
/// TODO: Add support for this expression pattern
pub fn ast_value_4564b55cdb8716ed(
    val: &TagValue,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(val.clone())
}
