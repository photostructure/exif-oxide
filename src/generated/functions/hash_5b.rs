//! Generated AST functions for hash prefix 5B
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};

/// Original perl expression:
/// ``` perl
/// $val / 1000
/// ```
/// Used by:
/// - Canon::MovieInfo.Duration
/// - CanonRaw::Main.SelfTimerTime
/// - Casio::Main.ObjectDistance
/// - Kodak::Main.ExposureCompensation
/// - Olympus::WAV.Duration
/// - Olympus::WAV.Index01
/// - Olympus::WAV.Index02
/// - Olympus::WAV.Index03
/// - Olympus::WAV.Index04
/// - Olympus::WAV.Index05
/// - Olympus::WAV.Index06
/// - Olympus::WAV.Index07
/// - Olympus::WAV.Index08
/// - Olympus::WAV.Index09
/// - Olympus::WAV.Index10
/// - Olympus::WAV.Index11
/// - Olympus::WAV.Index12
/// - Olympus::WAV.Index13
/// - Olympus::WAV.Index14
/// - Olympus::WAV.Index15
/// - Olympus::WAV.Index16
/// - Panasonic::FocusInfo.FocalLength
/// - Panasonic::FocusInfo.FocusDistance
/// - Panasonic::Leica9.FNumber
/// - RIFF::ANMF.Duration
/// - Red::Main.FocusDistance
pub fn ast_value_5b2c41e400f339d0(val: &TagValue) -> Result<TagValue, crate::types::ExifError> {
    Ok(val / 1000)
}

/// Original perl expression:
/// ``` perl
/// $val ? 10 / $val : 0
/// ```
/// Used by:
/// - Kodak::MOV.ExposureTime
/// - Nikon::MOV.ExposureTime
/// - Olympus::MOV1.ExposureUnknown
/// - Olympus::MOV2.ExposureTime
/// - Pentax::MOV.ExposureTime
/// - Pentax::PENT.ExposureTime
/// - Samsung::MP4.ExposureTime
/// - Sanyo::MOV.ExposureTime
pub fn ast_value_5b997436cb4c4a4f(val: &TagValue) -> Result<TagValue, crate::types::ExifError> {
    Ok(crate::fmt::safe_division(10.0, &val))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("%.7d", $val)
/// ```
/// Used by:
/// - Panasonic::Leica2.SerialNumber
/// TODO: Add support for this expression pattern
pub fn ast_print_5bf8478023213c9(val: &TagValue) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}
