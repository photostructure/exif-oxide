//! Generated AST functions for hash prefix C7
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// $val + 4
/// ```
/// Used by:
/// - Photoshop::JPEG_Quality.PhotoshopQuality
pub fn ast_print_c7ab2268f0055197(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    (val + 4i32)
}

/// Original perl expression:
/// ``` perl
/// ($val + 100) / 2
/// ```
/// Used by:
/// - SonyIDC::Main.ColorNoiseReduction
/// - SonyIDC::Main.EdgeNoiseReduction
/// - SonyIDC::Main.NoiseReductionValue
pub fn ast_value_c7431c5fa598bf69(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok((val + 100i32) / 2i32)
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my @a=split " ",$val;$_>32767 and $_-=65536 foreach @a;join " ",@a
/// ```
/// Used by:
/// - Pentax::AFInfo.AFPointValues
/// TODO: Add support for this expression pattern
pub fn ast_value_c7eada7e0548cfd1(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "my @a=split \" \",$val;$_>32767 and $_-=65536 foreach @a;join \" \",@a", // original expression
        val,
    ))
}
