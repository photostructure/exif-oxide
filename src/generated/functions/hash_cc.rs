//! Generated AST functions for hash prefix CC
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// $val + 1
/// ```
/// Used by:
/// - Canon::AFConfig.AFConfigTool
/// - Canon::CameraInfo1000D.FileIndex
/// - Canon::CameraInfo1DX.FileIndex
/// - Canon::CameraInfo1DmkIII.FileIndex
/// - Canon::CameraInfo1DmkIII.ShutterCount
/// - Canon::CameraInfo1DmkIV.FileIndex
/// - Canon::CameraInfo40D.FileIndex
/// - Canon::CameraInfo450D.FileIndex
/// - Canon::CameraInfo500D.FileIndex
/// - Canon::CameraInfo50D.FileIndex
/// - Canon::CameraInfo550D.FileIndex
/// - Canon::CameraInfo5D.FileIndex
/// - Canon::CameraInfo5DmkII.FileIndex
/// - Canon::CameraInfo5DmkIII.FileIndex
/// - Canon::CameraInfo5DmkIII.FileIndex2
/// - Canon::CameraInfo600D.FileIndex
/// - Canon::CameraInfo60D.FileIndex
/// - Canon::CameraInfo650D.FileIndex
/// - Canon::CameraInfo6D.FileIndex
/// - Canon::CameraInfo70D.FileIndex
/// - Canon::CameraInfo7D.FileIndex
/// - Canon::CameraInfo80D.FileIndex
/// - Canon::CameraInfoG5XII.FileIndex
/// - Sony::Tag2010b.SequenceFileNumber
/// - Sony::Tag2010b.SequenceImageNumber
/// - Sony::Tag2010c.SequenceFileNumber
/// - Sony::Tag2010c.SequenceImageNumber
/// - Sony::Tag2010d.SequenceFileNumber
/// - Sony::Tag2010d.SequenceImageNumber
/// - Sony::Tag2010e.SequenceFileNumber
/// - Sony::Tag2010e.SequenceImageNumber
/// - Sony::Tag9400a.SequenceFileNumber
/// - Sony::Tag9400a.SequenceImageNumber
/// - Sony::Tag9400b.SequenceFileNumber
/// - Sony::Tag9400b.SequenceImageNumber
/// - Sony::Tag9400c.SequenceFileNumber
/// - Sony::Tag9400c.SequenceImageNumber
/// - Sony::Tag9405b.SequenceImageNumber
/// - Sony::Tag9416.SequenceImageNumber
pub fn ast_value_cc6d20d1f05f91ec(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok((val + 1i32))
}

/// Original perl expression:
/// ``` perl
/// 2**($val/384-1)
/// ```
/// Used by:
/// - Nikon::LensData0800.FNumber
/// - Nikon::LensData0800.MaxAperture
pub fn ast_value_ccebb986d6453c97(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok((2i32 as f64).powf(((val / 384i32) - 1i32) as f64))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// Image::ExifTool::Canon::CameraISO($val)
/// ```
/// Used by:
/// - Canon::CameraSettings.CameraISO
/// TODO: Add support for this expression pattern
pub fn ast_value_cc8b3fc622e28074(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                         // tag_id will be filled at runtime
        "UnknownTag",                              // tag_name will be filled at runtime
        "UnknownGroup",                            // group will be filled at runtime
        "Image::ExifTool::Canon::CameraISO($val)", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// require Image::ExifTool::XMP;
/// return Image::ExifTool::XMP::ConvertXMPDate($val);
/// ```
/// Used by:
/// - Exif::Main.PreviewDateTime
/// TODO: Add support for this expression pattern
pub fn ast_value_cc04498da2daf80c(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "require Image::ExifTool::XMP;\n            return Image::ExifTool::XMP::ConvertXMPDate($val);", // original expression
                    val
                ))
}
