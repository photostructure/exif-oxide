//! Generated AST functions for hash prefix F5
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// $val - 5
/// ```
/// Used by:
/// - Nikon::MenuSettingsZ9.MonitorBrightness
pub fn ast_value_f549716a7ec6c29b(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok((val - 5i32))
}

/// Original perl expression:
/// ``` perl
/// exp($val/192*log(2))
/// ```
/// Used by:
/// - Canon::CameraInfoPowerShot.FNumber
/// - Canon::CameraInfoPowerShot2.FNumber
pub fn ast_value_f5e2fd998937b3b3(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(exp(((val / 192i32) * log((2i32)))))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val =~ tr/012 /RGB/d; join " ", $val =~ /....../g
/// ```
/// Used by:
/// - FujiFilm::RAF.XTransLayout
/// TODO: Add support for this expression pattern
pub fn ast_print_f591611bd0effe85(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                                      // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "$val =~ tr/012 /RGB/d; join \" \", $val =~ /....../g", // original expression
        val,
    )
}
