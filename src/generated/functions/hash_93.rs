//! Generated AST functions for hash prefix 93
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $_ = '';
/// return $_ . Image::ExifTool::DecodeBits($val,
/// {
/// 0 => 'Distance',
/// 1 => 'Motion',
/// 2 => 'Subject Detection',
/// });
/// ```
/// Used by:
/// - Nikon::AutoCaptureInfo.AutoCaptureCriteria
/// TODO: Add support for this expression pattern
pub fn ast_print_936cc7e573e248bc(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "$_ = \'\';\n            return $_ . Image::ExifTool::DecodeBits($val,\n            {\n                0 => \'Distance\',\n                1 => \'Motion\',\n                2 => \'Subject Detection\',\n            });", // original expression
                    val
                )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $_=$val;s/ /x/;$_
/// ```
/// Used by:
/// - Pentax::Main.RawImageSize
/// TODO: Add support for this expression pattern
pub fn ast_print_937eb9745db39aa4(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                   // tag_id will be filled at runtime
        "UnknownTag",        // tag_name will be filled at runtime
        "UnknownGroup",      // group will be filled at runtime
        "$_=$val;s/ /x/;$_", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val ? sprintf("%.0f",$val) : "Auto"
/// ```
/// Used by:
/// - Sony::CameraSettings.ISOSetting
/// - Sony::CameraSettings2.ISOSetting
/// - Sony::FocusInfo.ISO
/// - Sony::FocusInfo.ISOSetting
/// TODO: Add support for this expression pattern
pub fn ast_print_9380e2f55474fc9(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                          // tag_id will be filled at runtime
        "UnknownTag",                               // tag_name will be filled at runtime
        "UnknownGroup",                             // group will be filled at runtime
        "$val ? sprintf(\"%.0f\",$val) : \"Auto\"", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val=~s{/}{:}g; $val
/// ```
/// Used by:
/// - Kodak::Type9.DateTimeOriginal
/// TODO: Add support for this expression pattern
pub fn ast_value_93479e0480a898bc(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                      // tag_id will be filled at runtime
        "UnknownTag",           // tag_name will be filled at runtime
        "UnknownGroup",         // group will be filled at runtime
        "$val=~s{/}{:}g; $val", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my @a = split ' ', $val;
/// $a[0] += $a[0] < 70 ? 2000 : 1900;
/// sprintf('%.4d:%.2d:%.2d %.2d:%.2d:%.2d', @a);
/// ```
/// Used by:
/// - Sony::PMP.DateTimeOriginal
/// - Sony::PMP.ModifyDate
/// TODO: Add support for this expression pattern
pub fn ast_value_932aeef1bf94311d(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "my @a = split \' \', $val;\n            $a[0] += $a[0] < 70 ? 2000 : 1900;\n            sprintf(\'%.4d:%.2d:%.2d %.2d:%.2d:%.2d\', @a);", // original expression
                    val
                ))
}
