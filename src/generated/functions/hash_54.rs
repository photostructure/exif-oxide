//! Generated AST functions for hash prefix 54
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// Image::ExifTool::Exif::ExifTime($val)
/// ```
/// Used by:
/// - IPTC::ApplicationRecord.DigitalCreationTime
/// - IPTC::ApplicationRecord.ExpirationTime
/// - IPTC::ApplicationRecord.ReleaseTime
/// - IPTC::ApplicationRecord.TimeCreated
/// - IPTC::EnvelopeRecord.TimeSent
/// TODO: Add support for this expression pattern
pub fn ast_value_54193e0c249aa3ab(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                       // tag_id will be filled at runtime
        "UnknownTag",                            // tag_name will be filled at runtime
        "UnknownGroup",                          // group will be filled at runtime
        "Image::ExifTool::Exif::ExifTime($val)", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// return $val unless $val=~/^(.{3})(\d{2})(\d{2})(\d{2})(\d{4})/;
/// my $yr = $2 + ($2 < 70 ? 2000 : 1900);
/// return "($1) $yr:$3:$4 no. $5";
/// ```
/// Used by:
/// - Panasonic::Leica5.InternalSerialNumber
/// TODO: Add support for this expression pattern
pub fn ast_print_5410ebd1831763d8(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "return $val unless $val=~/^(.{3})(\\d{2})(\\d{2})(\\d{2})(\\d{4})/;\n            my $yr = $2 + ($2 < 70 ? 2000 : 1900);\n            return \"($1) $yr:$3:$4 no. $5\";", // original expression
                    val
                )
}
