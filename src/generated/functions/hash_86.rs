//! Generated AST functions for hash prefix 86
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// sprintf("%.4d", $val)
/// ```
/// Used by:
/// - Nikon::FileInfo.FileNumber
/// - Olympus::WAV.FileNumber
/// - Sony::CameraSettings.ImageNumber
pub fn ast_print_86d069131c594edd(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    TagValue::String(codegen_runtime::sprintf_perl("%.4d".into(), &[val.clone()]))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// join ".", $val =~ /../g
/// ```
/// Used by:
/// - Nikon::MakerNotes0x51.FirmwareVersion51
/// TODO: Add support for this expression pattern
pub fn ast_value_865f85b3924a28e9(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                           // tag_id will be filled at runtime
        "UnknownTag",                // tag_name will be filled at runtime
        "UnknownGroup",              // group will be filled at runtime
        "join \".\", $val =~ /../g", // original expression
        val,
    ))
}
