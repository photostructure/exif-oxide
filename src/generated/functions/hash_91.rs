//! Generated AST functions for hash prefix 91
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// PrintHex($val)
/// ```
/// Used by:
/// - Sony::Main.Sony_0x9407
/// - Sony::Main.Sony_0x9408
/// - Sony::Main.Sony_0x9409
/// - Sony::Main.Sony_0x940b
/// - Sony::Main.Sony_0x940d
/// - Sony::Main.Sony_0x940f
/// - Sony::Main.Sony_0x9411
/// TODO: Add support for this expression pattern
pub fn ast_value_91a40741d32c33dc(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                // tag_id will be filled at runtime
        "UnknownTag",     // tag_name will be filled at runtime
        "UnknownGroup",   // group will be filled at runtime
        "PrintHex($val)", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("%.2x%.2x:%.2x:%.2x %.2x:%.2x:%.2x",
/// split(' ', $val));
/// ```
/// Used by:
/// - Ricoh::ImageInfo.RicohDate
/// TODO: Add support for this expression pattern
pub fn ast_value_91932b642ff1a16b(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "sprintf(\"%.2x%.2x:%.2x:%.2x %.2x:%.2x:%.2x\",\n                    split(\' \', $val));", // original expression
        val,
    ))
}
