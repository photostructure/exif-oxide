//! Generated AST functions for hash prefix 77
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// $val eq "9999:99:99 00:00:00" ? "(not set)" : $val
/// ```
/// Used by:
/// - Panasonic::Main.BabyAge
pub fn ast_print_77deeeaf9630ea8f(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    if (val.to_string() == "9999:99:99 00:00:00") {
        Into::<TagValue>::into("(not set)")
    } else {
        val
    }
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val=~s/\0*$//; \$val
/// ```
/// Used by:
/// - Panasonic::PANA.ThumbnailImage
/// TODO: Add support for this expression pattern
pub fn ast_value_7759998ac069ebd5(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                         // tag_id will be filled at runtime
        "UnknownTag",              // tag_name will be filled at runtime
        "UnknownGroup",            // group will be filled at runtime
        "$val=~s/\\0*$//; \\$val", // original expression
        val,
    ))
}
