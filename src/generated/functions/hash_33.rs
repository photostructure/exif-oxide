//! Generated AST functions for hash prefix 33
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{TagValue, ExifContext};

/// Original perl expression:
/// ``` perl
/// $val =~ s/ 1$// ? $val / 10 : "n/a"
/// ```
/// Used by:
/// - Olympus::CameraSettings.PitchAngle
pub fn ast_value_33118cafe9fb1cc3(val: &TagValue) -> Result<TagValue, crate::types::ExifError> {
    Ok(if val =~ TagValue::String(crate::fmt::regex_replace(" 1$", &val.to_string(), "")) { val / 10 } else { "n/a" })
}


/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("%.1fmm",$val/100)
/// ```
/// Used by:
/// - Nikon::MenuSettingsZ8v2.NonCPULens10MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens11MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens12MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens13MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens14MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens15MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens16MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens17MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens18MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens19MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens1MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens20MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens2MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens3MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens4MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens5MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens6MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens7MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens8MaxAperture
/// - Nikon::MenuSettingsZ8v2.NonCPULens9MaxAperture
/// TODO: Add support for this expression pattern
pub fn ast_print_3329592de1a1592(val: &TagValue) -> TagValue
{
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}


/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("%g %%",$val*100)
/// ```
/// Used by:
/// - DJI::ThermalParams2.RelativeHumidity
/// TODO: Add support for this expression pattern
pub fn ast_print_339a38d31392b4fd(val: &TagValue) -> TagValue
{
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}


