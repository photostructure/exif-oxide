//! Generated AST functions for hash prefix 58
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// $val ? 2 ** (6 - $val/8) : 0
/// ```
/// Used by:
/// - Sony::CameraSettings.ExposureTime
/// - Sony::CameraSettings.ShutterSpeedSetting
/// - Sony::CameraSettings2.ExposureTime
/// - Sony::CameraSettings2.ShutterSpeedSetting
/// - Sony::MoreSettings.ExposureTime
pub fn ast_value_58f560b2a6e62b0d(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(if val {
        power(2i32, (6i32 - (val / 8i32)))
    } else {
        0i32
    })
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val >= 255 ? 255 : exp(($val-200)/16*log(2))
/// ```
/// Used by:
/// - Canon::ColorData3.FlashOutput
/// TODO: Add support for this expression pattern
pub fn ast_value_58c924c1420b72a1(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                               // tag_id will be filled at runtime
        "UnknownTag",                                    // tag_name will be filled at runtime
        "UnknownGroup",                                  // group will be filled at runtime
        "$val >= 255 ? 255 : exp(($val-200)/16*log(2))", // original expression
        val,
    ))
}
