//! Generated AST functions for hash prefix D1
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val=~s/ / to /; $val
/// ```
/// Used by:
/// - Sigma::Main.LensFocalRange
/// - Sigma::Main.LensMaxApertureRange
/// TODO: Add support for this expression pattern
pub fn ast_print_d1ea0bc590f67427(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                       // tag_id will be filled at runtime
        "UnknownTag",            // tag_name will be filled at runtime
        "UnknownGroup",          // group will be filled at runtime
        "$val=~s/ / to /; $val", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("%4d %4d %4d %4d (%dK)", split(" ",$val))
/// ```
/// Used by:
/// - Canon::ColorCalib2.CameraColorCalibration01
/// - Canon::ColorCalib2.CameraColorCalibration02
/// - Canon::ColorCalib2.CameraColorCalibration03
/// - Canon::ColorCalib2.CameraColorCalibration04
/// - Canon::ColorCalib2.CameraColorCalibration05
/// - Canon::ColorCalib2.CameraColorCalibration06
/// - Canon::ColorCalib2.CameraColorCalibration07
/// - Canon::ColorCalib2.CameraColorCalibration08
/// - Canon::ColorCalib2.CameraColorCalibration09
/// - Canon::ColorCalib2.CameraColorCalibration10
/// - Canon::ColorCalib2.CameraColorCalibration11
/// - Canon::ColorCalib2.CameraColorCalibration12
/// - Canon::ColorCalib2.CameraColorCalibration13
/// - Canon::ColorCalib2.CameraColorCalibration14
/// - Canon::ColorCalib2.CameraColorCalibration15
/// TODO: Add support for this expression pattern
pub fn ast_print_d1371ccf5a7e3c3e(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                                       // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "sprintf(\"%4d %4d %4d %4d (%dK)\", split(\" \",$val))", // original expression
        val,
    )
}
