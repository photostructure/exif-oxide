//! Generated AST functions for hash prefix A7
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// $val ? sqrt(2)**($val/256) : 0
/// ```
/// Used by:
/// - Olympus::Equipment.MaxAperture
/// - Olympus::Equipment.MaxApertureAtMaxFocal
/// - Olympus::Equipment.MaxApertureAtMinFocal
pub fn ast_value_a702026eef5d42be(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(if val { sqrt() } else { 0i32 })
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $_=$val;s/^(\d{2})/$1\./;s/^0//;$_
/// ```
/// Used by:
/// - Nikon::Main.MakerNoteVersion
/// TODO: Add support for this expression pattern
pub fn ast_print_a7bd7d3f338f7940(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                      // tag_id will be filled at runtime
        "UnknownTag",                           // tag_name will be filled at runtime
        "UnknownGroup",                         // group will be filled at runtime
        "$_=$val;s/^(\\d{2})/$1\\./;s/^0//;$_", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val ? exp(($val/8-6)*log(2))*100 : $val
/// ```
/// Used by:
/// - Sony::CameraSettings.ISOSetting
/// - Sony::CameraSettings2.ISOSetting
/// - Sony::FocusInfo.ISO
/// - Sony::FocusInfo.ISOSetting
/// TODO: Add support for this expression pattern
pub fn ast_value_a7fc8acd4df4945(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                          // tag_id will be filled at runtime
        "UnknownTag",                               // tag_name will be filled at runtime
        "UnknownGroup",                             // group will be filled at runtime
        "$val ? exp(($val/8-6)*log(2))*100 : $val", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// 100*exp((($val-411)/96)*log(2))
/// ```
/// Used by:
/// - Canon::CameraInfoPowerShot.ISO
/// - Canon::CameraInfoPowerShot2.ISO
/// TODO: Add support for this expression pattern
pub fn ast_value_a704a838f8b357a7(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                 // tag_id will be filled at runtime
        "UnknownTag",                      // tag_name will be filled at runtime
        "UnknownGroup",                    // group will be filled at runtime
        "100*exp((($val-411)/96)*log(2))", // original expression
        val,
    ))
}
