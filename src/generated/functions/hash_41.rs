//! Generated AST functions for hash prefix 41
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{TagValue, ExifContext};

/// Original perl expression:
/// ``` perl
/// $val =~ /^(inf|undef)$/ ? $val : "${val} m"
/// ```
/// Used by:
/// - Exif::Main.SubjectDistance
pub fn ast_print_4186404e3c9fa11a(val: &TagValue) -> TagValue {
    if val =~ /^(inf|undef)$/ { val } else { "${val} m" }
}


/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// exp(-Image::ExifTool::Canon::CanonEv($val*4)*log(2))*1000/8
/// ```
/// Used by:
/// - CanonCustom::PersonalFuncValues.PF4ExposureTimeMax
/// - CanonCustom::PersonalFuncValues.PF4ExposureTimeMin
/// TODO: Add support for this expression pattern
pub fn ast_value_41e4bfecd227b921(val: &TagValue) -> Result<TagValue, crate::types::ExifError>
{
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(val.clone())
}


/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("%.1f deg", $val/1000)
/// ```
/// Used by:
/// - SonyIDC::Main.InclinationAngle
/// TODO: Add support for this expression pattern
pub fn ast_print_41bf92216501bc5a(val: &TagValue) -> TagValue
{
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}


