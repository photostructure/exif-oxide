//! Generated AST functions for hash prefix 89
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// $val / 100000
/// ```
/// Used by:
/// - PNG::PrimaryChromaticities.BlueX
/// - PNG::PrimaryChromaticities.BlueY
/// - PNG::PrimaryChromaticities.GreenX
/// - PNG::PrimaryChromaticities.GreenY
/// - PNG::PrimaryChromaticities.RedX
/// - PNG::PrimaryChromaticities.RedY
/// - PNG::PrimaryChromaticities.WhitePointX
/// - PNG::PrimaryChromaticities.WhitePointY
pub fn ast_value_891fb9e200fd161b(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok((val / 100000i32))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val=~/^Rev(\d+)$/ ? sprintf("%.2f",$1/100) : $val
/// ```
/// Used by:
/// - Ricoh::Main.FirmwareVersion
/// TODO: Add support for this expression pattern
pub fn ast_print_899945aee711da6a(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                                                       // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "$val=~/^Rev(\\d+)$/ ? sprintf(\"%.2f\",$1/100) : $val", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val=~s/\0.*//s; $val
/// ```
/// Used by:
/// - Nikon::LocationInfo.CountryCode
/// TODO: Add support for this expression pattern
pub fn ast_value_89a35071e834811a(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                        // tag_id will be filled at runtime
        "UnknownTag",             // tag_name will be filled at runtime
        "UnknownGroup",           // group will be filled at runtime
        "$val=~s/\\0.*//s; $val", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my $rev = sprintf("%.8x", $val);
/// my ($rel, $v1, $v2, $r1, $r2) = ($rev =~ /^(.)(.)(..)0?(.+)(..)$/);
/// my %r = ( a => 'Alpha ', b => 'Beta ', '0' => '' );
/// $rel = defined $r{$rel} ? $r{$rel} : "Unknown($rel) ";
/// return "$rel$v1.$v2 rev $r1.$r2",
/// ```
/// Used by:
/// - Canon::Main.FirmwareRevision
/// TODO: Add support for this expression pattern
pub fn ast_print_897f73182e8225d2(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "my $rev = sprintf(\"%.8x\", $val);\n            my ($rel, $v1, $v2, $r1, $r2) = ($rev =~ /^(.)(.)(..)0?(.+)(..)$/);\n            my %r = ( a => \'Alpha \', b => \'Beta \', \'0\' => \'\' );\n            $rel = defined $r{$rel} ? $r{$rel} : \"Unknown($rel) \";\n            return \"$rel$v1.$v2 rev $r1.$r2\",", // original expression
                    val
                )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// return $val unless $val =~ /^\d+$/;
/// require Image::ExifTool::Font;
/// return $Image::ExifTool::Font::ttLang{Macintosh}{$val} || "Unknown ($val)";
/// ```
/// Used by:
/// - QuickTime::MediaHeader.MediaLanguageCode
/// TODO: Add support for this expression pattern
pub fn ast_print_890e9fe5666b3c5c(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "return $val unless $val =~ /^\\d+$/;\n            require Image::ExifTool::Font;\n            return $Image::ExifTool::Font::ttLang{Macintosh}{$val} || \"Unknown ($val)\";", // original expression
                    val
                )
}
