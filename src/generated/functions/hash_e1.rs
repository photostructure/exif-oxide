//! Generated AST functions for hash prefix E1
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// "$val m"
/// ```
/// Used by:
/// - Casio::Main.ObjectDistance
/// - GPS::Main.GPSHPositioningError
/// - GoPro::GLPI.GLPI_Unknown4
/// - GoPro::GLPI.GPSAltitude
/// - GoPro::GPRI.GPRI_Unknown4
/// - GoPro::GPRI.GPRI_Unknown5
/// - GoPro::GPRI.GPSAltitudeRaw
/// - GoPro::GPS5.GPSAltitude
/// - GoPro::GPS9.GPSAltitude
/// - Nikon::BarometerInfo.Altitude
/// - Red::Main.FocusDistance
pub fn ast_print_e1b9c18c6fb887af(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    Into::<TagValue>::into(format!("{} m", val))
}

/// Original perl expression:
/// ``` perl
/// sprintf("%.2f", $val/300)
/// ```
/// Used by:
/// - SonyIDC::Main.BrightnessAdj
pub fn ast_print_e168284515af79a7(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    TagValue::String(codegen_runtime::sprintf_perl(
        "%.2f",
        &[val / 300i32.clone()],
    ))
}

/// Original perl expression:
/// ``` perl
/// unpack("N",$val)
/// ```
/// Used by:
/// - Photoshop::Main.GlobalAltitude
/// - Photoshop::Main.GlobalAngle
pub fn ast_value_e143a6a9ab8400ee(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(TagValue::String(codegen_runtime::unpack_binary("N", &val)))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val =~ s/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/20$1:$2:$3 $4:$5:$6/; $val
/// ```
/// Used by:
/// - Olympus::DSS.EndTime
/// - Olympus::DSS.StartTime
/// TODO: Add support for this expression pattern
pub fn ast_value_e10d39549dcc6453(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "$val =~ s/(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})/20$1:$2:$3 $4:$5:$6/; $val", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my @a=($val=~/.{4}/sg); @a=grep(!/\0/,@a); \@a
/// ```
/// Used by:
/// - Jpeg2000::FileType.CompatibleBrands
/// - QuickTime::FileType.CompatibleBrands
/// TODO: Add support for this expression pattern
pub fn ast_value_e169d6db15e948b(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                                  // tag_id will be filled at runtime
        "UnknownTag",                                       // tag_name will be filled at runtime
        "UnknownGroup",                                     // group will be filled at runtime
        "my @a=($val=~/.{4}/sg); @a=grep(!/\\0/,@a); \\@a", // original expression
        val,
    ))
}
