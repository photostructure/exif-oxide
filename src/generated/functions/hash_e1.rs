//! Generated AST functions for hash prefix E1
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{TagValue, ExifContext};

/// Original perl expression:
/// ``` perl
/// "$val m"
/// ```
/// Used by:
/// - Casio::Main.ObjectDistance
/// - GPS::Main.GPSHPositioningError
/// - GoPro::GLPI.GLPI_Unknown4
/// - GoPro::GLPI.GPSAltitude
/// - GoPro::GPRI.GPRI_Unknown4
/// - GoPro::GPRI.GPRI_Unknown5
/// - GoPro::GPRI.GPSAltitudeRaw
/// - GoPro::GPS5.GPSAltitude
/// - GoPro::GPS9.GPSAltitude
/// - Nikon::BarometerInfo.Altitude
/// - Red::Main.FocusDistance
pub fn ast_print_e1b9c18c6fb887af(val: &TagValue) -> TagValue {
    format!("{} m", val)
}


/// Original perl expression:
/// ``` perl
/// $val =~ s/(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})/20$1:$2:$3 $4:$5:$6/; $val
/// ```
/// Used by:
/// - Olympus::DSS.EndTime
/// - Olympus::DSS.StartTime
pub fn ast_value_e10d39549dcc6453(val: &TagValue) -> Result<TagValue, crate::types::ExifError> {
    Ok({
        TagValue::String(crate::fmt::regex_replace("(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{2})", &val.to_string(), "20$1:$2:$3 $4:$5:$6")) ;;
        val
    }
    )
}


/// Original perl expression:
/// ``` perl
/// sprintf("%.2f", $val/300)
/// ```
/// Used by:
/// - SonyIDC::Main.BrightnessAdj
pub fn ast_print_e168284515af79a7(val: &TagValue) -> TagValue {
    TagValue::String(format!("%.2f", val / 300))
}


/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my @a=($val=~/.{4}/sg); @a=grep(!/\0/,@a); \@a
/// ```
/// Used by:
/// - Jpeg2000::FileType.CompatibleBrands
/// - QuickTime::FileType.CompatibleBrands
/// TODO: Add support for this expression pattern
pub fn ast_value_e169d6db15e948b(val: &TagValue) -> Result<TagValue, crate::types::ExifError>
{
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(val.clone())
}


/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// unpack("N",$val)
/// ```
/// Used by:
/// - Photoshop::Main.GlobalAltitude
/// - Photoshop::Main.GlobalAngle
/// TODO: Add support for this expression pattern
pub fn ast_value_e143a6a9ab8400ee(val: &TagValue) -> Result<TagValue, crate::types::ExifError>
{
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(val.clone())
}


