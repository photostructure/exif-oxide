//! Generated AST functions for hash prefix 3B
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// sprintf("%.2f V",$val)
/// ```
/// Used by:
/// - Sony::ExtraInfo.BatteryVoltage
/// - Sony::ExtraInfo3.BatteryVoltage1
/// - Sony::ExtraInfo3.BatteryVoltage2
pub fn ast_print_3b2373f5e3819dad(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    TagValue::String(codegen_runtime::sprintf_perl(
        "%.2f V".into(),
        &[val.clone()],
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val > 1800 and $val -= 3600; $val / 10
/// ```
/// Used by:
/// - Canon::LevelInfo.PitchAngle
/// TODO: Add support for this expression pattern
pub fn ast_value_3b77080649d79275(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                         // tag_id will be filled at runtime
        "UnknownTag",                              // tag_name will be filled at runtime
        "UnknownGroup",                            // group will be filled at runtime
        "$val > 1800 and $val -= 3600; $val / 10", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// 100*exp(($val/12-5)*log(2))
/// ```
/// Used by:
/// - Nikon::ISOInfo.ISO
/// - Nikon::ISOInfo.ISO2
/// - Nikon::ShotInfoD300S.ISO2
/// - Nikon::ShotInfoD300a.ISO2
/// - Nikon::ShotInfoD300b.ISO2
/// - Nikon::ShotInfoD3X.ISO2
/// - Nikon::ShotInfoD5000.ISO2
/// - Nikon::ShotInfoD700.ISO2
/// - Nikon::ShotInfoD90.ISO2
/// TODO: Add support for this expression pattern
pub fn ast_value_3be01b4842453c7b(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                             // tag_id will be filled at runtime
        "UnknownTag",                  // tag_name will be filled at runtime
        "UnknownGroup",                // group will be filled at runtime
        "100*exp(($val/12-5)*log(2))", // original expression
        val,
    ))
}
