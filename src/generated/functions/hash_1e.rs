//! Generated AST functions for hash prefix 1E
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// sprintf("%s:%s:%s %s:%s:%s.%s", unpack "H4H2H2H2H2H2H2", $val)
/// ```
/// Used by:
/// - Panasonic::TimeInfo.PanasonicDateTime
pub fn ast_value_1ef1bd5c951da1f3(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(TagValue::String(codegen_runtime::sprintf_perl(
        "%s:%s:%s %s:%s:%s.%s",
        &[
            codegen_runtime::unpack_binary("H4H2H2H2H2H2H2", &val).clone(),
            val.clone(),
        ],
    )))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $_ = $val;
/// if (/^(\d{2})(\d{2})\0\0(\d{2})(\d{2})\0\0(\d{2})\0{4}$/) {
/// my $yr = $1 + ($1 < 70 ? 2000 : 1900);
/// return "$yr:$2:$3 $4:$5";
/// }
/// tr/\0/./;  s/\.+$//;
/// return "Unknown ($_)";
/// ```
/// Used by:
/// - Casio::Type2.FirmwareDate
/// TODO: Add support for this expression pattern
pub fn ast_print_1eea9199a5407b99(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
                    0, // tag_id will be filled at runtime
                    "UnknownTag", // tag_name will be filled at runtime
                    "UnknownGroup", // group will be filled at runtime
                    "$_ = $val;\n            if (/^(\\d{2})(\\d{2})\\0\\0(\\d{2})(\\d{2})\\0\\0(\\d{2})\\0{4}$/) {\n                my $yr = $1 + ($1 < 70 ? 2000 : 1900);\n                return \"$yr:$2:$3 $4:$5\";\n            }\n            tr/\\0/./;  s/\\.+$//;\n            return \"Unknown ($_)\";", // original expression
                    val
                )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// my @a=split " ",$val; sprintf("%d %d %d",$a[0],$a[1]>>28,$a[1]&0xfffffff)
/// ```
/// Used by:
/// - Apple::Main.AFPerformance
/// TODO: Add support for this expression pattern
pub fn ast_print_1e6de4de43d39e69(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "my @a=split \" \",$val; sprintf(\"%d %d %d\",$a[0],$a[1]>>28,$a[1]&0xfffffff)", // original expression
        val,
    )
}
