//! Generated AST functions for hash prefix 9E
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// $val ? 1 : 0
/// ```
/// Used by:
/// - H264::MDPM.GPSAltitudeRef
pub fn ast_value_9ead6fbe543c3486(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok(if val { 1i32 } else { 0i32 })
}

/// Original perl expression:
/// ``` perl
/// $val=~/^8\./ ? "$val (camera has been serviced)" : $val
/// ```
/// Used by:
/// - Pentax::CameraInfo.ProductionCode
pub fn ast_print_9eb71f80f01c13ad(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    if {
        use regex::Regex;
        use std::sync::LazyLock;
        static REGEX_4a685b95e07900ea: LazyLock<Regex> =
            LazyLock::new(|| Regex::new(r"^8\.").unwrap());
        REGEX_4a685b95e07900ea.is_match(&val.to_string())
    } {
        format!("{} (camera has been serviced)", val).into()
    } else {
        val
    }
}
