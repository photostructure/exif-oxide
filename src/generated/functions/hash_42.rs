//! Generated AST functions for hash prefix 42
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// "$val/mm"
/// ```
/// Used by:
/// - Canon::CameraSettings.FocalUnits
pub fn ast_print_423da13b81d6bdf1(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    format!("{}/mm", val).into()
}

/// Original perl expression:
/// ``` perl
/// ($val-64)/8
/// ```
/// Used by:
/// - Pentax::AEInfo2.AEXv
pub fn ast_value_42b5da943f4414b1(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok((val - 64i32) / 8i32)
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val=~tr/ /:/; $val
/// ```
/// Used by:
/// - FujiFilm::RAF.RawImageAspectRatio
/// - QuickTime::VideoProf.PixelAspectRatio
/// TODO: Add support for this expression pattern
pub fn ast_print_422bfca23e0caff5(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,                     // tag_id will be filled at runtime
        "UnknownTag",          // tag_name will be filled at runtime
        "UnknownGroup",        // group will be filled at runtime
        "$val=~tr/ /:/; $val", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// Image::ExifTool::Nikon::PrintPC($val,"No Sharpening","%d")
/// ```
/// Used by:
/// - Nikon::PictureControl.Sharpness
/// TODO: Add support for this expression pattern
pub fn ast_print_42c5dc3d1b33e467(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    codegen_runtime::missing::missing_print_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "Image::ExifTool::Nikon::PrintPC($val,\"No Sharpening\",\"%d\")", // original expression
        val,
    )
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// length($val) > 64 ? \$val : $val
/// ```
/// Used by:
/// - Canon::Main.SharpnessFreqTable
/// - Canon::Main.SharpnessTable
/// - Canon::Main.ToneCurveMatching
/// - Canon::Main.ToneCurveTable
/// - Canon::Main.WhiteBalanceMatching
/// - Canon::Main.WhiteBalanceTable
/// - Exif::Main.BlackLevelDeltaH
/// - Exif::Main.BlackLevelDeltaV
/// - Exif::Main.ProfileHueSatMapData1
/// - Exif::Main.ProfileHueSatMapData2
/// - Exif::Main.ProfileHueSatMapData3
/// - Exif::Main.ProfileLookTableData
/// - Exif::Main.ProfileToneCurve
/// TODO: Add support for this expression pattern
pub fn ast_value_4262675ed10175b0(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                   // tag_id will be filled at runtime
        "UnknownTag",                        // tag_name will be filled at runtime
        "UnknownGroup",                      // group will be filled at runtime
        "length($val) > 64 ? \\$val : $val", // original expression
        val,
    ))
}
