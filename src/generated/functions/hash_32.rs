//! Generated AST functions for hash prefix 32
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// sprintf("f/%.1f",$val/100)
/// ```
/// Used by:
/// - Nikon::MenuSettingsZ9v4.NonCPULens10MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens11MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens12MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens13MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens14MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens15MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens16MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens17MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens18MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens19MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens1MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens20MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens2MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens3MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens4MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens5MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens6MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens7MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens8MaxAperture
/// - Nikon::MenuSettingsZ9v4.NonCPULens9MaxAperture
pub fn ast_print_32d15696c00cf4d1(val: &TagValue, ctx: Option<&ExifContext>) -> TagValue {
    TagValue::String(codegen_runtime::sprintf_perl(
        "f/%.1f".into(),
        &[val / 100i32.clone()],
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $self->Options("Unknown") ? $val : $val & 0x7ff
/// ```
/// Used by:
/// - Pentax::AFInfo.AFPointsUnknown1
/// - Pentax::AFInfo.AFPointsUnknown2
/// TODO: Add support for this expression pattern
pub fn ast_value_325ae39bdd3fcbb3(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                                                   // tag_id will be filled at runtime
        "UnknownTag",                                        // tag_name will be filled at runtime
        "UnknownGroup",                                      // group will be filled at runtime
        "$self->Options(\"Unknown\") ? $val : $val & 0x7ff", // original expression
        val,
    ))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// length($val)>=3 ? sprintf("%.2d:%.2d:%.2d",unpack("C3",$val)) : "Unknown ($val)"
/// ```
/// Used by:
/// - Pentax::Main.Time
/// TODO: Add support for this expression pattern
pub fn ast_value_32a7e10f5e7f8777(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,              // tag_id will be filled at runtime
        "UnknownTag",   // tag_name will be filled at runtime
        "UnknownGroup", // group will be filled at runtime
        "length($val)>=3 ? sprintf(\"%.2d:%.2d:%.2d\",unpack(\"C3\",$val)) : \"Unknown ($val)\"", // original expression
        val,
    ))
}
