//! Generated AST functions for hash prefix 3E
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{abs, atan2, cos, exp, int, log, sin, sqrt, IsFloat},
    string::{chr, length_i32, length_string, uc},
};

/// Original perl expression:
/// ``` perl
/// -$val / 2
/// ```
/// Used by:
/// - Pentax::LevelInfoK3III.PitchAngle
/// - Pentax::LevelInfoK3III.RollAngle
pub fn ast_value_3ee5ea531e525a5e(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok((codegen_runtime::negate(val) / 2i32))
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// $val =~ s/ *$//; $val
/// ```
/// Used by:
/// - Ricoh::Type2.RicohMake
/// TODO: Add support for this expression pattern
pub fn ast_value_3e1220cade8783d3(
    val: &TagValue,
    ctx: Option<&ExifContext>,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    tracing::warn!("Missing implementation for expression in {}", file!());
    Ok(codegen_runtime::missing::missing_value_conv(
        0,                       // tag_id will be filled at runtime
        "UnknownTag",            // tag_name will be filled at runtime
        "UnknownGroup",          // group will be filled at runtime
        "$val =~ s/ *$//; $val", // original expression
        val,
    ))
}
