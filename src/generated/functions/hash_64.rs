//! Generated AST functions for hash prefix 64
//!
//! This file is auto-generated by codegen/src/ppi/fn_registry/mod.rs.
//! DO NOT EDIT MANUALLY.

#![allow(dead_code, unused_variables, unreachable_code)]

use crate::types::{ExifContext, TagValue};
use codegen_runtime::{
    math::{exp, int, log},
    string::{length_i32, length_string},
};

/// Original perl expression:
/// ``` perl
/// $val * 100
/// ```
/// Used by:
/// - MinoltaRaw::RIF.ColorTemperature
/// - Sony::CameraSettings.ColorTemperatureCustom
/// - Sony::CameraSettings.ColorTemperatureSet
/// - Sony::CameraSettings2.ColorTemperatureCustom
/// - Sony::CameraSettings2.ColorTemperatureSet
/// - Sony::MoreSettings.ColorTemperatureSetting
pub fn ast_value_647eb869d9cb9ed1(
    val: &TagValue,
) -> Result<TagValue, codegen_runtime::types::ExifError> {
    Ok((val * 100i32))
}

/// Original perl expression:
/// ``` perl
/// \$val
/// ```
/// Used by:
/// - Pentax::Main.DataDump
/// - Pentax::Main.ToneCurve
/// - Pentax::Main.ToneCurves
pub fn ast_print_6486d152488d624b(val: &TagValue) -> TagValue {
    val
}

/// PLACEHOLDER: Unsupported expression (missing implementation)
/// Original perl expression:
/// ``` perl
/// sprintf("Red %+d, Blue %+d", split(" ", $val))
/// ```
/// Used by:
/// - FujiFilm::Main.WhiteBalanceFineTune
/// TODO: Add support for this expression pattern
pub fn ast_print_647e3531415500d9(val: &TagValue) -> TagValue {
    tracing::warn!("Missing implementation for expression in {}", file!());
    val.clone()
}
