//! Generated tag table definitions from Nikon::MenuSettingsZ6III
//!
//! This file is auto-generated by codegen/src/strategies/tag_kit.rs. Do not edit manually.

use crate::types::{PrintConv, TagInfo, ValueConv};
use std::collections::HashMap;
use std::sync::LazyLock;

// Generated imports for conversion functions
use crate::generated::functions::hash_52::ast_value_52696782fcca735b;
use crate::generated::functions::hash_6c::ast_print_6c62520a706b493;
use crate::generated::functions::hash_72::ast_value_72cc5ff262c4a455;
use crate::generated::functions::hash_83::ast_value_8390ff1421e71f53;
use crate::generated::functions::hash_90::ast_print_90673754eeeb7df2;
use crate::generated::functions::hash_ab::ast_print_ab0e6c517653bb46;
use crate::generated::functions::hash_ad::ast_value_ada28829e28f9303;
use crate::generated::functions::hash_b7::ast_print_b75f5f46a9f320cf;

/// Tag definitions for Nikon::MenuSettingsZ6III table
pub static NIKON_MENUSETTINGSZ6III_TAGS: LazyLock<HashMap<u16, TagInfo>> = LazyLock::new(|| {
    HashMap::from([
        (
            360,
            TagInfo {
                name: "SingleFrame",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            364,
            TagInfo {
                name: "HighFrameRate",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            444,
            TagInfo {
                name: "MultipleExposureMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            446,
            TagInfo {
                name: "MultiExposureShots",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            476,
            TagInfo {
                name: "IntervalDurationHours",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            480,
            TagInfo {
                name: "IntervalDurationMinutes",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            484,
            TagInfo {
                name: "IntervalDurationSeconds",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            492,
            TagInfo {
                name: "Intervals",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            496,
            TagInfo {
                name: "ShotsPerInterval",
                format: "int32u",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            500,
            TagInfo {
                name: "IntervalExposureSmoothing",
                format: "int8u",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            502,
            TagInfo {
                name: "IntervalPriority",
                format: "int8u",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            536,
            TagInfo {
                name: "FocusShiftNumberShots",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            540,
            TagInfo {
                name: "FocusShiftStepWidth",
                format: "unknown",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            544,
            TagInfo {
                name: "FocusShiftInterval",
                format: "unknown",
                print_conv: Some(PrintConv::Function(ast_print_ab0e6c517653bb46)),
                value_conv: None,
            },
        ),
        (
            548,
            TagInfo {
                name: "FocusShiftExposureLock",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            648,
            TagInfo {
                name: "AutoISO",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            650,
            TagInfo {
                name: "ISOAutoHiLimit",
                format: "int16u",
                print_conv: Some(PrintConv::Complex),
                value_conv: Some(ValueConv::Function(ast_value_8390ff1421e71f53)),
            },
        ),
        (
            718,
            TagInfo {
                name: "DiffractionCompensation",
                format: "int8u",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            719,
            TagInfo {
                name: "AutoDistortionControl",
                format: "int8u",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            720,
            TagInfo {
                name: "FlickerReductionShooting",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            722,
            TagInfo {
                name: "NikonMeteringMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            724,
            TagInfo {
                name: "FlashControlMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            730,
            TagInfo {
                name: "FlashGNDistance",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: Some(ValueConv::Function(ast_value_72cc5ff262c4a455)),
            },
        ),
        (
            734,
            TagInfo {
                name: "FlashOutput",
                format: "unknown",
                print_conv: Some(PrintConv::Function(ast_print_6c62520a706b493)),
                value_conv: Some(ValueConv::Function(ast_value_52696782fcca735b)),
            },
        ),
        (
            742,
            TagInfo {
                name: "FlashWirelessOption",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            744,
            TagInfo {
                name: "FlashRemoteControl",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            748,
            TagInfo {
                name: "FlashMasterControlMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            750,
            TagInfo {
                name: "FlashMasterCompensation",
                format: "int8s",
                print_conv: Some(PrintConv::Function(ast_print_b75f5f46a9f320cf)),
                value_conv: Some(ValueConv::Function(ast_value_ada28829e28f9303)),
            },
        ),
        (
            754,
            TagInfo {
                name: "FlashMasterOutput",
                format: "unknown",
                print_conv: Some(PrintConv::Function(ast_print_6c62520a706b493)),
                value_conv: Some(ValueConv::Function(ast_value_52696782fcca735b)),
            },
        ),
        (
            832,
            TagInfo {
                name: "AFAreaMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            834,
            TagInfo {
                name: "VRMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            838,
            TagInfo {
                name: "BracketSet",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            840,
            TagInfo {
                name: "BracketProgram",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            842,
            TagInfo {
                name: "BracketIncrement",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            852,
            TagInfo {
                name: "HDR",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            858,
            TagInfo {
                name: "SecondarySlotFunction",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            864,
            TagInfo {
                name: "HDRLevel",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            868,
            TagInfo {
                name: "Slot2JpgSize",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            878,
            TagInfo {
                name: "SubjectDetection",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            880,
            TagInfo {
                name: "DynamicAFAreaSize",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            884,
            TagInfo {
                name: "ToneMap",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            888,
            TagInfo {
                name: "PortraitImpressionBalance",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            902,
            TagInfo {
                name: "HighFrequencyFlickerReduction",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            904,
            TagInfo {
                name: "PixelShiftShooting",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            906,
            TagInfo {
                name: "PixelShiftNumberShots",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            908,
            TagInfo {
                name: "PixelShiftDelay",
                format: "unknown",
                print_conv: Some(PrintConv::Function(ast_print_90673754eeeb7df2)),
                value_conv: None,
            },
        ),
        (
            910,
            TagInfo {
                name: "PixelShiftInterval",
                format: "unknown",
                print_conv: Some(PrintConv::Function(ast_print_90673754eeeb7df2)),
                value_conv: None,
            },
        ),
        (
            1002,
            TagInfo {
                name: "SubjectDetectionAreaMF",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            1004,
            TagInfo {
                name: "LinkVRToFocusPoint",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            1046,
            TagInfo {
                name: "MovieSlowMotion",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            1050,
            TagInfo {
                name: "MovieType",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            1162,
            TagInfo {
                name: "MovieFrameSize",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            1164,
            TagInfo {
                name: "MovieFrameRate",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            1255,
            TagInfo {
                name: "CustomSettingsZ6III",
                format: "undef[700]",
                print_conv: None,
                value_conv: None,
            },
        ),
        (
            2300,
            TagInfo {
                name: "Language",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            2302,
            TagInfo {
                name: "TimeZone",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            2308,
            TagInfo {
                name: "MonitorBrightness",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            2444,
            TagInfo {
                name: "EmptySlotRelease",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            2450,
            TagInfo {
                name: "EnergySavingMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            2476,
            TagInfo {
                name: "USBPowerDelivery",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            2480,
            TagInfo {
                name: "SaveFocusPosition",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            2487,
            TagInfo {
                name: "SilentPhotography",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
        (
            2496,
            TagInfo {
                name: "AirplaneMode",
                format: "unknown",
                print_conv: Some(PrintConv::Complex),
                value_conv: None,
            },
        ),
    ])
});

/// Apply ValueConv transformation for tags in this table
pub fn apply_value_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
) -> Result<crate::types::TagValue, crate::types::ExifError> {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = NIKON_MENUSETTINGSZ6III_TAGS.get(&tag_id_u16) {
        if let Some(ref value_conv) = tag_def.value_conv {
            match value_conv {
                ValueConv::None => Ok(value.clone()),
                ValueConv::Function(func) => func(value),
                ValueConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    Err(crate::types::ExifError::NotImplemented("Runtime expression evaluation not supported - should be handled by PPI at build time".to_string()))
                }
                _ => Ok(value.clone()),
            }
        } else {
            Ok(value.clone())
        }
    } else {
        Err(crate::types::ExifError::ParseError(format!(
            "Tag 0x{:04x} not found in table",
            tag_id
        )))
    }
}

/// Apply PrintConv transformation for tags in this table
pub fn apply_print_conv(
    tag_id: u32,
    value: &crate::types::TagValue,
    _errors: &mut Vec<String>,
    _warnings: &mut Vec<String>,
) -> crate::types::TagValue {
    let tag_id_u16 = tag_id as u16;
    if let Some(tag_def) = NIKON_MENUSETTINGSZ6III_TAGS.get(&tag_id_u16) {
        if let Some(ref print_conv) = tag_def.print_conv {
            match print_conv {
                PrintConv::None => value.clone(),
                PrintConv::Function(func) => func(value),
                PrintConv::Expression(_expr) => {
                    // Runtime expression evaluation removed - all Perl interpretation happens via PPI at build time
                    value.clone() // Fallback to original value when expression not handled by PPI
                }
                _ => value.clone(),
            }
        } else {
            value.clone()
        }
    } else {
        value.clone()
    }
}
