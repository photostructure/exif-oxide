//! Generated lookup table for compression from ExifTool's Exif module
//!
//! This file is auto-generated by codegen/src/strategies/simple_table.rs. Do not edit manually.

use std::collections::HashMap;
use std::sync::LazyLock;

/// Raw data for compression lookup table
static COMPRESSION_DATA: &[(u16, &'static str)] = &[
    (1, "Uncompressed"),
    (10, "JBIG Color"),
    (2, "CCITT 1D"),
    (262, "Kodak 262"),
    (3, "T4/Group 3 Fax"),
    (32766, "Next"),
    (32767, "Sony ARW Compressed"),
    (32769, "Packed RAW"),
    (32770, "Samsung SRW Compressed"),
    (32771, "CCIRLEW"),
    (32772, "Samsung SRW Compressed 2"),
    (32773, "PackBits"),
    (32809, "Thunderscan"),
    (32867, "Kodak KDC Compressed"),
    (32895, "IT8CTPAD"),
    (32896, "IT8LW"),
    (32897, "IT8MP"),
    (32898, "IT8BL"),
    (32908, "PixarFilm"),
    (32909, "PixarLog"),
    (32946, "Deflate"),
    (32947, "DCS"),
    (33003, "Aperio JPEG 2000 YCbCr"),
    (33005, "Aperio JPEG 2000 RGB"),
    (34661, "JBIG"),
    (34676, "SGILog"),
    (34677, "SGILog24"),
    (34712, "JPEG 2000"),
    (34713, "Nikon NEF Compressed"),
    (34715, "JBIG2 TIFF FX"),
    (34718, "Microsoft Document Imaging (MDI) Binary Level Codec"),
    (
        34719,
        "Microsoft Document Imaging (MDI) Progressive Transform Codec",
    ),
    (34720, "Microsoft Document Imaging (MDI) Vector"),
    (34887, "ESRI Lerc"),
    (34892, "Lossy JPEG"),
    (34925, "LZMA2"),
    (34926, "Zstd (old)"),
    (34927, "WebP (old)"),
    (34933, "PNG"),
    (34934, "JPEG XR"),
    (4, "T6/Group 4 Fax"),
    (5, "LZW"),
    (50000, "Zstd"),
    (50001, "WebP"),
    (50002, "JPEG XL (old)"),
    (52546, "JPEG XL"),
    (6, "JPEG (old-style)"),
    (65000, "Kodak DCR Compressed"),
    (65535, "Pentax PEF Compressed"),
    (7, "JPEG"),
    (8, "Adobe Deflate"),
    (9, "JBIG B&W"),
    (99, "JPEG"),
];

/// compression lookup table
pub static COMPRESSION: LazyLock<HashMap<u16, &'static str>> =
    LazyLock::new(|| COMPRESSION_DATA.iter().copied().collect());

/// Look up compression value by key
pub fn lookup_compression(key: u16) -> Option<&'static str> {
    COMPRESSION.get(&key).copied()
}
