//! Generated lookup table for fileFormat from ExifTool's IPTC module
//!
//! This file is auto-generated by codegen/src/strategies/simple_table.rs. Do not edit manually.

use std::collections::HashMap;
use std::sync::LazyLock;

/// Raw data for fileFormat lookup table
static FILE_FORMAT_DATA: &[(u8, &'static str)] = &[
    (0, "No ObjectData"),
    (1, "IPTC-NAA Digital Newsphoto Parameter Record"),
    (10, "United Press International Down-Load Message"),
    (11, "JPEG File Interchange (JFIF)"),
    (12, "Photo-CD Image-Pac (Eastman Kodak)"),
    (13, "Bit Mapped Graphics File [.BMP] (Microsoft)"),
    (14, "Digital Audio File [.WAV] (Microsoft & Creative Labs)"),
    (15, "Audio plus Moving Video [.AVI] (Microsoft)"),
    (16, "PC DOS/Windows Executable Files [.COM][.EXE]"),
    (17, "Compressed Binary File [.ZIP] (PKWare Inc)"),
    (
        18,
        "Audio Interchange File Format AIFF (Apple Computer Inc)",
    ),
    (19, "RIFF Wave (Microsoft Corporation)"),
    (2, "IPTC7901 Recommended Message Format"),
    (20, "Freehand (Macromedia/Aldus)"),
    (
        21,
        "Hypertext Markup Language [.HTML] (The Internet Society)",
    ),
    (22, "MPEG 2 Audio Layer 2 (Musicom), ISO/IEC"),
    (23, "MPEG 2 Audio Layer 3, ISO/IEC"),
    (24, "Portable Document File [.PDF] Adobe"),
    (25, "News Industry Text Format (NITF)"),
    (26, "Tape Archive [.TAR]"),
    (27, "Tidningarnas Telegrambyra NITF version (TTNITF DTD)"),
    (28, "Ritzaus Bureau NITF version (RBNITF DTD)"),
    (29, "Corel Draw [.CDR]"),
    (3, "Tagged Image File Format (Adobe/Aldus Image data)"),
    (4, "Illustrator (Adobe Graphics data)"),
    (5, "AppleSingle (Apple Computer Inc)"),
    (6, "NAA 89-3 (ANPA 1312)"),
    (7, "MacBinary II"),
    (
        8,
        "IPTC Unstructured Character Oriented File Format (UCOFF)",
    ),
    (9, "United Press International ANPA 1312 variant"),
];

/// fileFormat lookup table
pub static FILE_FORMAT: LazyLock<HashMap<u8, &'static str>> =
    LazyLock::new(|| FILE_FORMAT_DATA.iter().copied().collect());

/// Look up fileFormat value by key
pub fn lookup_file_format(key: u8) -> Option<&'static str> {
    FILE_FORMAT.get(&key).copied()
}
