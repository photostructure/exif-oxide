// AUTO-GENERATED by exiftool_sync extract maker-detection
// Source: third-party/exiftool/lib/Image/ExifTool/FUJIFILM.pm
// Generated: 2025-06-24
// DO NOT EDIT - Regenerate with `cargo run --bin exiftool_sync extract maker-detection`

#![doc = "EXIFTOOL-SOURCE: lib/Image/ExifTool/FUJIFILM.pm"]

/// Detection patterns for fujifilm maker notes
#[derive(Debug, Clone, PartialEq)]
pub struct FUJIFILMDetectionResult {
    pub version: Option<u8>,
    pub ifd_offset: usize,
    pub description: String,
}

/// Detect fujifilm maker note format and extract version information
///
/// Returns Some(DetectionResult) if this appears to be a fujifilm maker note,
/// None otherwise.
pub fn detect_fujifilm_maker_note(data: &[u8]) -> Option<FUJIFILMDetectionResult> {
    // Pattern from source line 1680: fujifilm maker note signature
    if data.len() >= 8 && data.starts_with(&[0x46, 0x55, 0x4a, 0x49, 0x46, 0x49, 0x4c, 0x4d]) {
        return Some(FUJIFILMDetectionResult {
            version: None,
            ifd_offset: 0,
            description: "fujifilm maker note signature".to_string(),
        });
    }

    None
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_fujifilm_detection_pattern_0() {
        let test_data = &[0x46, 0x55, 0x4a, 0x49, 0x46, 0x49, 0x4c, 0x4d];
        let result = detect_fujifilm_maker_note(test_data);
        assert!(result.is_some());
        let detection = result.unwrap();
        assert_eq!(detection.version, None);
        assert_eq!(detection.ifd_offset, 0);
    }
}
