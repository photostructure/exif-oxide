// AUTO-GENERATED by exiftool_sync extract maker-detection
// Source: third-party/exiftool/lib/Image/ExifTool/SAMSUNG.pm
// Generated: 2025-06-24
// DO NOT EDIT - Regenerate with `cargo run --bin exiftool_sync extract maker-detection`

#![doc = "EXIFTOOL-SOURCE: lib/Image/ExifTool/SAMSUNG.pm"]

/// Detection patterns for samsung maker notes
#[derive(Debug, Clone, PartialEq)]
pub struct SAMSUNGDetectionResult {
    pub version: Option<u8>,
    pub ifd_offset: usize,
    pub description: String,
}

/// Detect samsung maker note format and extract version information
/// 
/// Returns Some(DetectionResult) if this appears to be a samsung maker note,
/// None otherwise.
pub fn detect_samsung_maker_note(data: &[u8]) -> Option<SAMSUNGDetectionResult> {
    // Pattern from source line 0: Samsung maker note
    if data.len() >= 7 && data.starts_with(&[0x53, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67]) {
        return Some(SAMSUNGDetectionResult {
            version: None,
            ifd_offset: 0,
            description: "Samsung maker note".to_string(),
        });
    }

    None
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_samsung_detection_pattern_0() {
        let test_data = &[0x53, 0x61, 0x6d, 0x73, 0x75, 0x6e, 0x67];
        let result = detect_samsung_maker_note(test_data);
        assert!(result.is_some());
        let detection = result.unwrap();
        assert_eq!(detection.version, None);
        assert_eq!(detection.ifd_offset, 0);
    }

}
