# Modular Codegen Makefile
# Simplified build system - Rust now handles extraction orchestration internally

.PHONY: all clean generate-rust codegen test regen-configs

# Default target
all: codegen

# Main codegen pipeline (Rust now handles everything including patch cleanup)
codegen:
	@flock --exclusive --timeout=30 .make.flock $(MAKE) --no-print-directory -f Makefile.modular generate-rust

# We can't have codegen-flocked depend on `clean`, as that breaks concurrent builds. 
generate-rust:
	@echo "ðŸ”§ Applying universal ExifTool patching..." ; \
	./scripts/patch_all_modules.sh ; \
	echo "ðŸš€ Running Rust codegen..." ; \
	RUST_LOG=warn cargo run --release --quiet ; ret=$$? ; \
	../scripts/undo-exiftool-patches.sh ; \
	if [ $$ret -eq 0 ]; then \
		cd .. && cargo fmt -- src/generated/**/*.rs 2>/dev/null ; \
	fi ; \
	exit $$ret

clean:
	cargo clean

# Run codegen tests
test:
	cargo test --all

# Regenerate all tag_kit.json configs using auto_config_gen.pl
regen-configs:
	@./scripts/regen-configs.sh
